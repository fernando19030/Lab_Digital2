

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 16 18:54:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	functab,global,class=ENTRY,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222                           
   223                           	psect	strings
   224  0300                     __pstrings:
   225  0300                     stringtab:
   226  0300                     __stringtab:
   227  0300                     stringcode:	
   228                           ;	String table - string pointers are 1 byte each
   229                           
   230  0300                     stringdir:
   231  0300  3003               	movlw	high stringdir
   232  0301  008A               	movwf	10
   233  0302  0804               	movf	4,w
   234  0303  0A84               	incf	4,f
   235  0304  0782               	addwf	2,f
   236  0305                     __stringbase:
   237  0305  3400               	retlw	0
   238  0306                     __end_of__stringtab:
   239  0306                     _dpowers:
   240  0306  3401               	retlw	1
   241  0307  3400               	retlw	0
   242  0308  340A               	retlw	10
   243  0309  3400               	retlw	0
   244  030A  3464               	retlw	100
   245  030B  3400               	retlw	0
   246  030C  34E8               	retlw	232
   247  030D  3403               	retlw	3
   248  030E  3410               	retlw	16
   249  030F  3427               	retlw	39
   250  0310                     __end_of_dpowers:
   251  001A                     _RCREG	set	26
   252  0019                     _TXREG	set	25
   253  0018                     _RCSTAbits	set	24
   254  0006                     _PORTB	set	6
   255  0005                     _PORTA	set	5
   256  0008                     _PORTD	set	8
   257  0006                     _PORTBbits	set	6
   258  000B                     _INTCONbits	set	11
   259  0065                     _RCIF	set	101
   260  0064                     _TXIF	set	100
   261  009A                     _SPBRGH	set	154
   262  0099                     _SPBRG	set	153
   263  0098                     _TXSTAbits	set	152
   264  0096                     _IOCBbits	set	150
   265  008F                     _OSCCONbits	set	143
   266  0088                     _TRISD	set	136
   267  0086                     _TRISB	set	134
   268  0085                     _TRISA	set	133
   269  0187                     _BAUDCTLbits	set	391
   270  0189                     _ANSELH	set	393
   271  0188                     _ANSEL	set	392
   272  0310                     STR_5:
   273  0310  3449               	retlw	73	;'I'
   274  0311  346E               	retlw	110	;'n'
   275  0312  3467               	retlw	103	;'g'
   276  0313  3472               	retlw	114	;'r'
   277  0314  3465               	retlw	101	;'e'
   278  0315  3473               	retlw	115	;'s'
   279  0316  3461               	retlw	97	;'a'
   280  0317  3472               	retlw	114	;'r'
   281  0318  3420               	retlw	32	;' '
   282  0319  3443               	retlw	67	;'C'
   283  031A  3465               	retlw	101	;'e'
   284  031B  346E               	retlw	110	;'n'
   285  031C  3474               	retlw	116	;'t'
   286  031D  3465               	retlw	101	;'e'
   287  031E  346E               	retlw	110	;'n'
   288  031F  3461               	retlw	97	;'a'
   289  0320  343A               	retlw	58	;':'
   290  0321  3420               	retlw	32	;' '
   291  0322  3452               	retlw	82	;'R'
   292  0323  3461               	retlw	97	;'a'
   293  0324  346E               	retlw	110	;'n'
   294  0325  3467               	retlw	103	;'g'
   295  0326  346F               	retlw	111	;'o'
   296  0327  3428               	retlw	40	;'('
   297  0328  3430               	retlw	48	;'0'
   298  0329  342D               	retlw	45	;'-'
   299  032A  3432               	retlw	50	;'2'
   300  032B  3429               	retlw	41	;')'
   301  032C  340D               	retlw	13
   302  032D  3400               	retlw	0
   303  032E                     STR_1:
   304  032E  340D               	retlw	13
   305  032F  342D               	retlw	45	;'-'
   306  0330  342D               	retlw	45	;'-'
   307  0331  342D               	retlw	45	;'-'
   308  0332  342D               	retlw	45	;'-'
   309  0333  342D               	retlw	45	;'-'
   310  0334  342D               	retlw	45	;'-'
   311  0335  342D               	retlw	45	;'-'
   312  0336  342D               	retlw	45	;'-'
   313  0337  342D               	retlw	45	;'-'
   314  0338  342D               	retlw	45	;'-'
   315  0339  342D               	retlw	45	;'-'
   316  033A  342D               	retlw	45	;'-'
   317  033B  342D               	retlw	45	;'-'
   318  033C  342D               	retlw	45	;'-'
   319  033D  342D               	retlw	45	;'-'
   320  033E  342D               	retlw	45	;'-'
   321  033F  342D               	retlw	45	;'-'
   322  0340  342D               	retlw	45	;'-'
   323  0341  342D               	retlw	45	;'-'
   324  0342  342D               	retlw	45	;'-'
   325  0343  342D               	retlw	45	;'-'
   326  0344  342D               	retlw	45	;'-'
   327  0345  342D               	retlw	45	;'-'
   328  0346  342D               	retlw	45	;'-'
   329  0347  340D               	retlw	13
   330  0348  3400               	retlw	0
   331  0349                     STR_8:
   332  0349  3445               	retlw	69	;'E'
   333  034A  346C               	retlw	108	;'l'
   334  034B  3420               	retlw	32	;' '
   335  034C  346E               	retlw	110	;'n'
   336  034D  3475               	retlw	117	;'u'
   337  034E  346D               	retlw	109	;'m'
   338  034F  3465               	retlw	101	;'e'
   339  0350  3472               	retlw	114	;'r'
   340  0351  346F               	retlw	111	;'o'
   341  0352  3420               	retlw	32	;' '
   342  0353  3465               	retlw	101	;'e'
   343  0354  346C               	retlw	108	;'l'
   344  0355  3465               	retlw	101	;'e'
   345  0356  3467               	retlw	103	;'g'
   346  0357  3469               	retlw	105	;'i'
   347  0358  3464               	retlw	100	;'d'
   348  0359  346F               	retlw	111	;'o'
   349  035A  3420               	retlw	32	;' '
   350  035B  3465               	retlw	101	;'e'
   351  035C  3473               	retlw	115	;'s'
   352  035D  343A               	retlw	58	;':'
   353  035E  3420               	retlw	32	;' '
   354  035F  3425               	retlw	37	;'%'
   355  0360  3464               	retlw	100	;'d'
   356  0361  3400               	retlw	0
   357  0362                     STR_7:
   358  0362  3449               	retlw	73	;'I'
   359  0363  346E               	retlw	110	;'n'
   360  0364  3467               	retlw	103	;'g'
   361  0365  3472               	retlw	114	;'r'
   362  0366  3465               	retlw	101	;'e'
   363  0367  3473               	retlw	115	;'s'
   364  0368  3461               	retlw	97	;'a'
   365  0369  3472               	retlw	114	;'r'
   366  036A  3420               	retlw	32	;' '
   367  036B  3455               	retlw	85	;'U'
   368  036C  346E               	retlw	110	;'n'
   369  036D  3469               	retlw	105	;'i'
   370  036E  3464               	retlw	100	;'d'
   371  036F  3461               	retlw	97	;'a'
   372  0370  3464               	retlw	100	;'d'
   373  0371  3465               	retlw	101	;'e'
   374  0372  3473               	retlw	115	;'s'
   375  0373  343A               	retlw	58	;':'
   376  0374  3420               	retlw	32	;' '
   377  0375  340D               	retlw	13
   378  0376  3400               	retlw	0
   379  0377                     STR_2:
   380  0377  3456               	retlw	86	;'V'
   381  0378  3461               	retlw	97	;'a'
   382  0379  346C               	retlw	108	;'l'
   383  037A  346F               	retlw	111	;'o'
   384  037B  3472               	retlw	114	;'r'
   385  037C  3420               	retlw	32	;' '
   386  037D  3464               	retlw	100	;'d'
   387  037E  3465               	retlw	101	;'e'
   388  037F  346C               	retlw	108	;'l'
   389  0380  3420               	retlw	32	;' '
   390  0381  3443               	retlw	67	;'C'
   391  0382  346F               	retlw	111	;'o'
   392  0383  346E               	retlw	110	;'n'
   393  0384  3474               	retlw	116	;'t'
   394  0385  3461               	retlw	97	;'a'
   395  0386  3464               	retlw	100	;'d'
   396  0387  346F               	retlw	111	;'o'
   397  0388  3472               	retlw	114	;'r'
   398  0389  343A               	retlw	58	;':'
   399  038A  3420               	retlw	32	;' '
   400  038B  3400               	retlw	0
   401  038C                     STR_6:
   402  038C  3449               	retlw	73	;'I'
   403  038D  346E               	retlw	110	;'n'
   404  038E  3467               	retlw	103	;'g'
   405  038F  3472               	retlw	114	;'r'
   406  0390  3465               	retlw	101	;'e'
   407  0391  3473               	retlw	115	;'s'
   408  0392  3461               	retlw	97	;'a'
   409  0393  3472               	retlw	114	;'r'
   410  0394  3420               	retlw	32	;' '
   411  0395  3444               	retlw	68	;'D'
   412  0396  3465               	retlw	101	;'e'
   413  0397  3463               	retlw	99	;'c'
   414  0398  3465               	retlw	101	;'e'
   415  0399  346E               	retlw	110	;'n'
   416  039A  3461               	retlw	97	;'a'
   417  039B  3473               	retlw	115	;'s'
   418  039C  343A               	retlw	58	;':'
   419  039D  3420               	retlw	32	;' '
   420  039E  340D               	retlw	13
   421  039F  3400               	retlw	0
   422  032E                     
   423                           	psect	cinit
   424  000F                     start_initialization:	
   425                           ; #config settings
   426                           
   427  000F                     __initialization:
   428                           
   429                           ; Clear objects allocated to COMMON
   430  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   431  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   432  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   433                           
   434                           ; Clear objects allocated to BANK0
   435  0012  1283               	bcf	3,5	;RP0=0, select bank0
   436  0013  1303               	bcf	3,6	;RP1=0, select bank0
   437  0014  01EC               	clrf	__pbssBANK0& (0+127)
   438  0015  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   439                           
   440                           ; Clear objects allocated to BANK1
   441  0016  1683               	bsf	3,5	;RP0=1, select bank1
   442  0017  1303               	bcf	3,6	;RP1=0, select bank1
   443  0018  01A5               	clrf	__pbssBANK1& (0+127)
   444  0019  01A6               	clrf	(__pbssBANK1+1)& (0+127)
   445  001A  01A7               	clrf	(__pbssBANK1+2)& (0+127)
   446  001B  01A8               	clrf	(__pbssBANK1+3)& (0+127)
   447  001C                     end_of_initialization:	
   448                           ;End of C runtime variable initialization code
   449                           
   450  001C                     __end_of__initialization:
   451  001C  0183               	clrf	3
   452  001D  120A  118A  2DBC   	ljmp	_main	;jump to C main() function
   453                           
   454                           	psect	bssCOMMON
   455  0078                     __pbssCOMMON:
   456  0078                     _con:
   457  0078                     	ds	1
   458  0079                     _uni:
   459  0079                     	ds	1
   460  007A                     _contador:
   461  007A                     	ds	1
   462                           
   463                           	psect	bssBANK0
   464  006C                     __pbssBANK0:
   465  006C                     _dec:
   466  006C                     	ds	1
   467  006D                     _cen:
   468  006D                     	ds	1
   469                           
   470                           	psect	bssBANK1
   471  00A5                     __pbssBANK1:
   472  00A5                     _full:
   473  00A5                     	ds	2
   474  00A7                     _var:
   475  00A7                     	ds	1
   476  00A8                     _ada:
   477  00A8                     	ds	1
   478                           
   479                           	psect	cstackBANK1
   480  00A0                     __pcstackBANK1:
   481  00A0                     ??_Eusart:
   482                           
   483                           ; 1 bytes @ 0x0
   484  00A0                     	ds	5
   485                           
   486                           	psect	cstackCOMMON
   487  0070                     __pcstackCOMMON:
   488  0070                     ?_isdigit:
   489  0070                     ?_setup:	
   490                           ; 1 bit 
   491                           
   492  0070                     ?_Eusart:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_isr:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ??_isr:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_main:	
   502                           ; 1 bytes @ 0x0
   503                           
   504                           
   505                           ; 1 bytes @ 0x0
   506  0070                     	ds	3
   507  0073                     ??_setup:
   508  0073                     ?_strcat:	
   509                           ; 1 bytes @ 0x3
   510                           
   511  0073                     ??_isdigit:	
   512                           ; 1 bytes @ 0x3
   513                           
   514  0073                     ?_putch:	
   515                           ; 1 bytes @ 0x3
   516                           
   517  0073                     ?___wmul:	
   518                           ; 1 bytes @ 0x3
   519                           
   520  0073                     ?___lwdiv:	
   521                           ; 2 bytes @ 0x3
   522                           
   523  0073                     putch@data:	
   524                           ; 2 bytes @ 0x3
   525                           
   526  0073                     _isdigit$808:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0073                     strcat@from:	
   530                           ; 1 bytes @ 0x3
   531                           
   532  0073                     ___wmul@multiplier:	
   533                           ; 1 bytes @ 0x3
   534                           
   535  0073                     ___lwdiv@divisor:	
   536                           ; 2 bytes @ 0x3
   537                           
   538                           
   539                           ; 2 bytes @ 0x3
   540  0073                     	ds	1
   541  0074                     ??_strcat:
   542  0074                     ??_putch:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0074                     isdigit@c:	
   546                           ; 1 bytes @ 0x4
   547                           
   548                           
   549                           ; 1 bytes @ 0x4
   550  0074                     	ds	1
   551  0075                     strcat@to:
   552  0075                     ___wmul@multiplicand:	
   553                           ; 1 bytes @ 0x5
   554                           
   555  0075                     ___lwdiv@dividend:	
   556                           ; 2 bytes @ 0x5
   557                           
   558                           
   559                           ; 2 bytes @ 0x5
   560  0075                     	ds	1
   561  0076                     strcat@cp:
   562                           
   563                           ; 1 bytes @ 0x6
   564  0076                     	ds	1
   565  0077                     ??___wmul:
   566  0077                     ??___lwdiv:	
   567                           ; 1 bytes @ 0x7
   568                           
   569                           
   570                           ; 1 bytes @ 0x7
   571  0077                     	ds	1
   572  0078                     ??_main:
   573                           
   574                           	psect	cstackBANK0
   575  0020                     __pcstackBANK0:	
   576                           ; 1 bytes @ 0x8
   577                           
   578  0020                     ___lwdiv@counter:
   579  0020                     ___wmul@product:	
   580                           ; 1 bytes @ 0x0
   581                           
   582                           
   583                           ; 2 bytes @ 0x0
   584  0020                     	ds	1
   585  0021                     ___lwdiv@quotient:
   586                           
   587                           ; 2 bytes @ 0x1
   588  0021                     	ds	1
   589  0022                     ?_atoi:
   590                           
   591                           ; 2 bytes @ 0x2
   592  0022                     	ds	1
   593  0023                     ?___lwmod:
   594  0023                     ___lwmod@divisor:	
   595                           ; 2 bytes @ 0x3
   596                           
   597                           
   598                           ; 2 bytes @ 0x3
   599  0023                     	ds	1
   600  0024                     ??_atoi:
   601                           
   602                           ; 1 bytes @ 0x4
   603  0024                     	ds	1
   604  0025                     ___lwmod@dividend:
   605                           
   606                           ; 2 bytes @ 0x5
   607  0025                     	ds	1
   608  0026                     atoi@sign:
   609                           
   610                           ; 1 bytes @ 0x6
   611  0026                     	ds	1
   612  0027                     ??___lwmod:
   613  0027                     atoi@a:	
   614                           ; 1 bytes @ 0x7
   615                           
   616                           
   617                           ; 2 bytes @ 0x7
   618  0027                     	ds	1
   619  0028                     ___lwmod@counter:
   620                           
   621                           ; 1 bytes @ 0x8
   622  0028                     	ds	1
   623  0029                     ?__doprnt:
   624  0029                     atoi@s:	
   625                           ; 2 bytes @ 0x9
   626                           
   627  0029                     __doprnt@f:	
   628                           ; 1 bytes @ 0x9
   629                           
   630                           
   631                           ; 1 bytes @ 0x9
   632  0029                     	ds	1
   633  002A                     __doprnt@ap:
   634                           
   635                           ; 1 bytes @ 0xA
   636  002A                     	ds	1
   637  002B                     ??__doprnt:
   638                           
   639                           ; 1 bytes @ 0xB
   640  002B                     	ds	3
   641  002E                     __doprnt@flag:
   642                           
   643                           ; 1 bytes @ 0xE
   644  002E                     	ds	1
   645  002F                     __doprnt@prec:
   646                           
   647                           ; 1 bytes @ 0xF
   648  002F                     	ds	1
   649  0030                     __doprnt@val:
   650                           
   651                           ; 2 bytes @ 0x10
   652  0030                     	ds	2
   653  0032                     __doprnt@c:
   654                           
   655                           ; 1 bytes @ 0x12
   656  0032                     	ds	1
   657  0033                     __doprnt@pb:
   658                           
   659                           ; 1 bytes @ 0x13
   660  0033                     	ds	1
   661  0034                     ?_printf:
   662  0034                     ?_sprintf:	
   663                           ; 2 bytes @ 0x14
   664                           
   665  0034                     sprintf@f:	
   666                           ; 2 bytes @ 0x14
   667                           
   668                           
   669                           ; 1 bytes @ 0x14
   670  0034                     	ds	2
   671  0036                     ??_printf:
   672                           
   673                           ; 1 bytes @ 0x16
   674  0036                     	ds	1
   675  0037                     ??_sprintf:
   676                           
   677                           ; 1 bytes @ 0x17
   678  0037                     	ds	1
   679  0038                     printf@ap:
   680                           
   681                           ; 1 bytes @ 0x18
   682  0038                     	ds	1
   683  0039                     printf@f:
   684  0039                     sprintf@wh:	
   685                           ; 1 bytes @ 0x19
   686                           
   687                           
   688                           ; 1 bytes @ 0x19
   689  0039                     	ds	1
   690  003A                     sprintf@ap:
   691  003A                     printf@pb:	
   692                           ; 1 bytes @ 0x1A
   693                           
   694                           
   695                           ; 2 bytes @ 0x1A
   696  003A                     	ds	1
   697  003B                     sprintf@pb:
   698                           
   699                           ; 2 bytes @ 0x1B
   700  003B                     	ds	2
   701  003D                     ?_concat:
   702  003D                     concat@a:	
   703                           ; 2 bytes @ 0x1D
   704                           
   705                           
   706                           ; 2 bytes @ 0x1D
   707  003D                     	ds	2
   708  003F                     concat@b:
   709                           
   710                           ; 2 bytes @ 0x1F
   711  003F                     	ds	2
   712  0041                     ??_concat:
   713                           
   714                           ; 1 bytes @ 0x21
   715  0041                     	ds	1
   716  0042                     concat@s2:
   717                           
   718                           ; 20 bytes @ 0x22
   719  0042                     	ds	20
   720  0056                     concat@s1:
   721                           
   722                           ; 20 bytes @ 0x36
   723  0056                     	ds	20
   724  006A                     concat@c:
   725                           
   726                           ; 2 bytes @ 0x4A
   727  006A                     	ds	2
   728                           
   729                           	psect	maintext
   730  05BC                     __pmaintext:	
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 88 in file "Lab05.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : B00/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0
   753 ;;      Totals:         0       0       0       0       0
   754 ;;Total ram usage:        0 bytes
   755 ;; Hardware stack levels required when called:    6
   756 ;; This function calls:
   757 ;;		_Eusart
   758 ;;		_setup
   759 ;; This function is called by:
   760 ;;		Startup code after reset
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function _main
   766  05BC                     _main:
   767  05BC                     l1711:	
   768                           ;incstack = 0
   769                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   770                           
   771                           
   772                           ;Lab05.c: 89:     setup();
   773  05BC  120A  118A  24E2  120A  118A  	fcall	_setup
   774  05C1                     l1713:
   775                           
   776                           ;Lab05.c: 94:        PORTD = full;
   777  05C1  1683               	bsf	3,5	;RP0=1, select bank1
   778  05C2  1303               	bcf	3,6	;RP1=0, select bank1
   779  05C3  0825               	movf	_full^(0+128),w
   780  05C4  1283               	bcf	3,5	;RP0=0, select bank0
   781  05C5  1303               	bcf	3,6	;RP1=0, select bank0
   782  05C6  0088               	movwf	8	;volatile
   783  05C7                     l1715:
   784                           
   785                           ;Lab05.c: 95:        Eusart();
   786  05C7  120A  118A  215F  120A  118A  	fcall	_Eusart
   787  05CC  2DC1               	goto	l1713
   788  05CD  120A  118A  280C   	ljmp	start
   789  05D0                     __end_of_main:
   790                           
   791                           	psect	text1
   792  04E2                     __ptext1:	
   793 ;; *************** function _setup *****************
   794 ;; Defined at:
   795 ;;		line 102 in file "Lab05.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _setup
   825  04E2                     _setup:
   826  04E2                     l1383:	
   827                           ;incstack = 0
   828                           ; Regs used in _setup: [wreg+status,2]
   829                           
   830                           
   831                           ;Lab05.c: 103:     ANSEL = 0x00;
   832  04E2  1683               	bsf	3,5	;RP0=1, select bank3
   833  04E3  1703               	bsf	3,6	;RP1=1, select bank3
   834  04E4  0188               	clrf	8	;volatile
   835                           
   836                           ;Lab05.c: 104:     ANSELH = 0x00;
   837  04E5  0189               	clrf	9	;volatile
   838                           
   839                           ;Lab05.c: 106:     TRISA = 0x00;
   840  04E6  1683               	bsf	3,5	;RP0=1, select bank1
   841  04E7  1303               	bcf	3,6	;RP1=0, select bank1
   842  04E8  0185               	clrf	5	;volatile
   843  04E9                     l1385:
   844                           
   845                           ;Lab05.c: 107:     TRISB = 0x03;
   846  04E9  3003               	movlw	3
   847  04EA  0086               	movwf	6	;volatile
   848  04EB                     l1387:
   849                           
   850                           ;Lab05.c: 108:     TRISD = 0x00;
   851  04EB  0188               	clrf	8	;volatile
   852  04EC                     l1389:
   853                           
   854                           ;Lab05.c: 110:     PORTA = 0x00;
   855  04EC  1283               	bcf	3,5	;RP0=0, select bank0
   856  04ED  1303               	bcf	3,6	;RP1=0, select bank0
   857  04EE  0185               	clrf	5	;volatile
   858  04EF                     l1391:
   859                           
   860                           ;Lab05.c: 111:     PORTB = 0x00;
   861  04EF  0186               	clrf	6	;volatile
   862  04F0                     l1393:
   863                           
   864                           ;Lab05.c: 112:     PORTD = 0x00;
   865  04F0  0188               	clrf	8	;volatile
   866  04F1                     l1395:
   867                           
   868                           ;Lab05.c: 115:     OSCCONbits.IRCF2 = 1;
   869  04F1  1683               	bsf	3,5	;RP0=1, select bank1
   870  04F2  1303               	bcf	3,6	;RP1=0, select bank1
   871  04F3  170F               	bsf	15,6	;volatile
   872  04F4                     l1397:
   873                           
   874                           ;Lab05.c: 116:     OSCCONbits.IRCF1 = 1;
   875  04F4  168F               	bsf	15,5	;volatile
   876  04F5                     l1399:
   877                           
   878                           ;Lab05.c: 117:     OSCCONbits.IRCF0 = 1;
   879  04F5  160F               	bsf	15,4	;volatile
   880  04F6                     l1401:
   881                           
   882                           ;Lab05.c: 118:     OSCCONbits.SCS = 1;
   883  04F6  140F               	bsf	15,0	;volatile
   884  04F7                     l1403:
   885                           
   886                           ;Lab05.c: 121:     INTCONbits.GIE = 1;
   887  04F7  178B               	bsf	11,7	;volatile
   888  04F8                     l1405:
   889                           
   890                           ;Lab05.c: 122:     INTCONbits.PEIE = 1;
   891  04F8  170B               	bsf	11,6	;volatile
   892  04F9                     l1407:
   893                           
   894                           ;Lab05.c: 123:     INTCONbits.RBIE = 1;
   895  04F9  158B               	bsf	11,3	;volatile
   896  04FA                     l1409:
   897                           
   898                           ;Lab05.c: 125:     INTCONbits.RBIF = 0;
   899  04FA  100B               	bcf	11,0	;volatile
   900  04FB                     l1411:
   901                           
   902                           ;Lab05.c: 128:     IOCBbits.IOCB0 = 1;
   903  04FB  1416               	bsf	22,0	;volatile
   904  04FC                     l1413:
   905                           
   906                           ;Lab05.c: 129:     IOCBbits.IOCB1 = 1;
   907  04FC  1496               	bsf	22,1	;volatile
   908  04FD                     l1415:
   909                           
   910                           ;Lab05.c: 132:     TXSTAbits.SYNC = 0;
   911  04FD  1218               	bcf	24,4	;volatile
   912  04FE                     l1417:
   913                           
   914                           ;Lab05.c: 133:     TXSTAbits.BRGH = 1;
   915  04FE  1518               	bsf	24,2	;volatile
   916  04FF                     l1419:
   917                           
   918                           ;Lab05.c: 135:     BAUDCTLbits.BRG16 = 1;
   919  04FF  1683               	bsf	3,5	;RP0=1, select bank3
   920  0500  1703               	bsf	3,6	;RP1=1, select bank3
   921  0501  1587               	bsf	7,3	;volatile
   922  0502                     l1421:
   923                           
   924                           ;Lab05.c: 137:     SPBRG = 207;
   925  0502  30CF               	movlw	207
   926  0503  1683               	bsf	3,5	;RP0=1, select bank1
   927  0504  1303               	bcf	3,6	;RP1=0, select bank1
   928  0505  0099               	movwf	25	;volatile
   929                           
   930                           ;Lab05.c: 138:     SPBRGH = 0;
   931  0506  019A               	clrf	26	;volatile
   932  0507                     l1423:
   933                           
   934                           ;Lab05.c: 140:     RCSTAbits.SPEN = 1;
   935  0507  1283               	bcf	3,5	;RP0=0, select bank0
   936  0508  1303               	bcf	3,6	;RP1=0, select bank0
   937  0509  1798               	bsf	24,7	;volatile
   938  050A                     l1425:
   939                           
   940                           ;Lab05.c: 141:     RCSTAbits.RX9 = 0;
   941  050A  1318               	bcf	24,6	;volatile
   942  050B                     l1427:
   943                           
   944                           ;Lab05.c: 142:     RCSTAbits.CREN = 1;
   945  050B  1618               	bsf	24,4	;volatile
   946  050C                     l1429:
   947                           
   948                           ;Lab05.c: 144:     TXSTAbits.TXEN = 1;
   949  050C  1683               	bsf	3,5	;RP0=1, select bank1
   950  050D  1303               	bcf	3,6	;RP1=0, select bank1
   951  050E  1698               	bsf	24,5	;volatile
   952  050F                     l93:
   953  050F  0008               	return
   954  0510                     __end_of_setup:
   955                           
   956                           	psect	text2
   957  015F                     __ptext2:	
   958 ;; *************** function _Eusart *****************
   959 ;; Defined at:
   960 ;;		line 153 in file "Lab05.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0
   976 ;;      Temps:          0       0       5       0       0
   977 ;;      Totals:         0       0       5       0       0
   978 ;;Total ram usage:        5 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    5
   981 ;; This function calls:
   982 ;;		_concat
   983 ;;		_printf
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _Eusart
   991  015F                     _Eusart:
   992  015F                     l1673:	
   993                           ;incstack = 0
   994                           ; Regs used in _Eusart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   995                           
   996                           
   997                           ;Lab05.c: 154:     printf("\r------------------------\r");
   998  015F  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   999  0160  120A  118A  25A1  120A  118A  	fcall	_printf
  1000                           
  1001                           ;Lab05.c: 155:     printf("Valor del Contador: ");
  1002  0165  3072               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1003  0166  120A  118A  25A1  120A  118A  	fcall	_printf
  1004  016B                     l1675:
  1005                           
  1006                           ;Lab05.c: 156:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1007  016B  300B               	movlw	11
  1008  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1009  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1010  016E  00A2               	movwf	(??_Eusart^(0+128)+2)
  1011  016F  3026               	movlw	38
  1012  0170  00A1               	movwf	(??_Eusart^(0+128)+1)
  1013  0171  305D               	movlw	93
  1014  0172  00A0               	movwf	??_Eusart^(0+128)
  1015  0173                     u1347:
  1016  0173  0BA0               	decfsz	??_Eusart^(0+128),f
  1017  0174  2973               	goto	u1347
  1018  0175  0BA1               	decfsz	(??_Eusart^(0+128)+1),f
  1019  0176  2973               	goto	u1347
  1020  0177  0BA2               	decfsz	(??_Eusart^(0+128)+2),f
  1021  0178  2973               	goto	u1347
  1022  0179                     l1677:
  1023                           
  1024                           ;Lab05.c: 157:     printf("%d",contador);
  1025  0179  087A               	movf	_contador,w
  1026  017A  1683               	bsf	3,5	;RP0=1, select bank1
  1027  017B  1303               	bcf	3,6	;RP1=0, select bank1
  1028  017C  00A0               	movwf	??_Eusart^(0+128)
  1029  017D  01A1               	clrf	(??_Eusart^(0+128)+1)
  1030  017E  0820               	movf	??_Eusart^(0+128),w
  1031  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0181  00B4               	movwf	?_printf
  1034  0182  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0183  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0184  0821               	movf	(??_Eusart+1)^(0+128),w
  1037  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0187  00B5               	movwf	?_printf+1
  1040  0188  305A               	movlw	(low (((STR_8+22)-__stringbase)| (0+32768)))& (0+255)
  1041  0189  120A  118A  25A1  120A  118A  	fcall	_printf
  1042  018E                     l1679:
  1043                           
  1044                           ;Lab05.c: 158:     printf("\r------------------------\r");
  1045  018E  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1046  018F  120A  118A  25A1  120A  118A  	fcall	_printf
  1047  0194                     l1681:
  1048                           
  1049                           ;Lab05.c: 160:    printf("Ingresar Centena: Rango(0-2)\r");
  1050  0194  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1051  0195  120A  118A  25A1  120A  118A  	fcall	_printf
  1052  019A                     l103:
  1053  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1054  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1055  019C  1E8C               	btfss	12,5	;volatile
  1056  019D  299F               	goto	u1251
  1057  019E  29A0               	goto	u1250
  1058  019F                     u1251:
  1059  019F  299A               	goto	l103
  1060  01A0                     u1250:
  1061  01A0                     l1683:
  1062                           
  1063                           ;Lab05.c: 163:         cen = RCREG -48;
  1064  01A0  081A               	movf	26,w	;volatile
  1065  01A1  3ED0               	addlw	208
  1066  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1067  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  1068  01A4  00A0               	movwf	??_Eusart^(0+128)
  1069  01A5  0820               	movf	??_Eusart^(0+128),w
  1070  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1071  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1072  01A8  00ED               	movwf	_cen
  1073  01A9                     l1685:	
  1074                           ;Lab05.c: 165:        while(RCREG > '2'){
  1075                           
  1076                           
  1077                           ;Lab05.c: 165:        while(RCREG > '2'){
  1078  01A9  3033               	movlw	51
  1079  01AA  021A               	subwf	26,w	;volatile
  1080  01AB  1803               	skipnc
  1081  01AC  29AE               	goto	u1261
  1082  01AD  29AF               	goto	u1260
  1083  01AE                     u1261:
  1084  01AE  299A               	goto	l103
  1085  01AF                     u1260:
  1086  01AF                     l1687:
  1087                           
  1088                           ;Lab05.c: 169:     printf("Ingresar Decenas: \r");
  1089  01AF  3087               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1090  01B0  120A  118A  25A1  120A  118A  	fcall	_printf
  1091  01B5                     l110:
  1092  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1093  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1094  01B7  1E8C               	btfss	12,5	;volatile
  1095  01B8  29BA               	goto	u1271
  1096  01B9  29BB               	goto	u1270
  1097  01BA                     u1271:
  1098  01BA  29B5               	goto	l110
  1099  01BB                     u1270:
  1100  01BB                     l1689:
  1101                           
  1102                           ;Lab05.c: 172:          dec = RCREG -48;
  1103  01BB  081A               	movf	26,w	;volatile
  1104  01BC  3ED0               	addlw	208
  1105  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1106  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1107  01BF  00A0               	movwf	??_Eusart^(0+128)
  1108  01C0  0820               	movf	??_Eusart^(0+128),w
  1109  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1110  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1111  01C3  00EC               	movwf	_dec
  1112                           
  1113                           ;Lab05.c: 174:         if(cen == 2){
  1114  01C4  3002               	movlw	2
  1115  01C5  066D               	xorwf	_cen,w
  1116  01C6  1D03               	btfss	3,2
  1117  01C7  29C9               	goto	u1281
  1118  01C8  29CA               	goto	u1280
  1119  01C9                     u1281:
  1120  01C9  29D0               	goto	l1695
  1121  01CA                     u1280:
  1122  01CA                     l1693:
  1123                           
  1124                           ;Lab05.c: 175:            while(RCREG > '5'){
  1125  01CA  3036               	movlw	54
  1126  01CB  021A               	subwf	26,w	;volatile
  1127  01CC  1803               	skipnc
  1128  01CD  29CF               	goto	u1291
  1129  01CE  29D0               	goto	u1290
  1130  01CF                     u1291:
  1131  01CF  29B5               	goto	l110
  1132  01D0                     u1290:
  1133  01D0                     l1695:
  1134                           
  1135                           ;Lab05.c: 180:     printf("Ingresar Unidades: \r");
  1136  01D0  305D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1137  01D1  120A  118A  25A1  120A  118A  	fcall	_printf
  1138  01D6                     l118:
  1139  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1140  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1141  01D8  1E8C               	btfss	12,5	;volatile
  1142  01D9  29DB               	goto	u1301
  1143  01DA  29DC               	goto	u1300
  1144  01DB                     u1301:
  1145  01DB  29D6               	goto	l118
  1146  01DC                     u1300:
  1147  01DC                     l1697:
  1148                           
  1149                           ;Lab05.c: 183:         uni = RCREG - 48;
  1150  01DC  081A               	movf	26,w	;volatile
  1151  01DD  3ED0               	addlw	208
  1152  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1153  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1154  01E0  00A0               	movwf	??_Eusart^(0+128)
  1155  01E1  0820               	movf	??_Eusart^(0+128),w
  1156  01E2  00F9               	movwf	_uni
  1157                           
  1158                           ;Lab05.c: 185:        if(cen == 2 && dec == 5){
  1159  01E3  3002               	movlw	2
  1160  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1161  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1162  01E6  066D               	xorwf	_cen,w
  1163  01E7  1D03               	btfss	3,2
  1164  01E8  29EA               	goto	u1311
  1165  01E9  29EB               	goto	u1310
  1166  01EA                     u1311:
  1167  01EA  29F7               	goto	l1705
  1168  01EB                     u1310:
  1169  01EB                     l1699:
  1170  01EB  3005               	movlw	5
  1171  01EC  066C               	xorwf	_dec,w
  1172  01ED  1D03               	btfss	3,2
  1173  01EE  29F0               	goto	u1321
  1174  01EF  29F1               	goto	u1320
  1175  01F0                     u1321:
  1176  01F0  29F7               	goto	l1705
  1177  01F1                     u1320:
  1178  01F1                     l1703:
  1179                           
  1180                           ;Lab05.c: 186:            while(RCREG > '5'){
  1181  01F1  3036               	movlw	54
  1182  01F2  021A               	subwf	26,w	;volatile
  1183  01F3  1803               	skipnc
  1184  01F4  29F6               	goto	u1331
  1185  01F5  29F7               	goto	u1330
  1186  01F6                     u1331:
  1187  01F6  29D6               	goto	l118
  1188  01F7                     u1330:
  1189  01F7                     l1705:
  1190                           
  1191                           ;Lab05.c: 190:       con = concat(cen, dec);
  1192  01F7  086D               	movf	_cen,w
  1193  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1194  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1195  01FA  00A0               	movwf	??_Eusart^(0+128)
  1196  01FB  01A1               	clrf	(??_Eusart^(0+128)+1)
  1197  01FC  0820               	movf	??_Eusart^(0+128),w
  1198  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1199  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1200  01FF  00BD               	movwf	concat@a
  1201  0200  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0201  1303               	bcf	3,6	;RP1=0, select bank1
  1203  0202  0821               	movf	(??_Eusart+1)^(0+128),w
  1204  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0205  00BE               	movwf	concat@a+1
  1207  0206  086C               	movf	_dec,w
  1208  0207  1683               	bsf	3,5	;RP0=1, select bank1
  1209  0208  1303               	bcf	3,6	;RP1=0, select bank1
  1210  0209  00A2               	movwf	(??_Eusart+2)^(0+128)
  1211  020A  01A3               	clrf	((??_Eusart+2)^(0+128)+1)
  1212  020B  0822               	movf	(??_Eusart+2)^(0+128),w
  1213  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1214  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1215  020E  00BF               	movwf	concat@b
  1216  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1217  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1218  0211  0823               	movf	(??_Eusart+3)^(0+128),w
  1219  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0214  00C0               	movwf	concat@b+1
  1222  0215  120A  118A  2469  120A  118A  	fcall	_concat
  1223  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1224  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1225  021C  083D               	movf	?_concat,w
  1226  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1227  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1228  021F  00A4               	movwf	(??_Eusart+4)^(0+128)
  1229  0220  0824               	movf	(??_Eusart+4)^(0+128),w
  1230  0221  00F8               	movwf	_con
  1231                           
  1232                           ;Lab05.c: 191:       full = concat(con, uni);
  1233  0222  0878               	movf	_con,w
  1234  0223  00A0               	movwf	??_Eusart^(0+128)
  1235  0224  01A1               	clrf	(??_Eusart^(0+128)+1)
  1236  0225  0820               	movf	??_Eusart^(0+128),w
  1237  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0228  00BD               	movwf	concat@a
  1240  0229  1683               	bsf	3,5	;RP0=1, select bank1
  1241  022A  1303               	bcf	3,6	;RP1=0, select bank1
  1242  022B  0821               	movf	(??_Eusart+1)^(0+128),w
  1243  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1244  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1245  022E  00BE               	movwf	concat@a+1
  1246  022F  0879               	movf	_uni,w
  1247  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1248  0231  1303               	bcf	3,6	;RP1=0, select bank1
  1249  0232  00A2               	movwf	(??_Eusart+2)^(0+128)
  1250  0233  01A3               	clrf	((??_Eusart+2)^(0+128)+1)
  1251  0234  0822               	movf	(??_Eusart+2)^(0+128),w
  1252  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0237  00BF               	movwf	concat@b
  1255  0238  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0239  1303               	bcf	3,6	;RP1=0, select bank1
  1257  023A  0823               	movf	(??_Eusart+3)^(0+128),w
  1258  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1259  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1260  023D  00C0               	movwf	concat@b+1
  1261  023E  120A  118A  2469  120A  118A  	fcall	_concat
  1262  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0245  083E               	movf	?_concat+1,w
  1265  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0247  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0248  00A6               	movwf	(_full+1)^(0+128)
  1268  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1269  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1270  024B  083D               	movf	?_concat,w
  1271  024C  1683               	bsf	3,5	;RP0=1, select bank1
  1272  024D  1303               	bcf	3,6	;RP1=0, select bank1
  1273  024E  00A5               	movwf	_full^(0+128)
  1274  024F                     l1707:
  1275                           
  1276                           ;Lab05.c: 192:       _delay((unsigned long)((250)*(8000000/4000.0)));
  1277  024F  3003               	movlw	3
  1278  0250  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0251  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0252  00A2               	movwf	(??_Eusart^(0+128)+2)
  1281  0253  308A               	movlw	138
  1282  0254  00A1               	movwf	(??_Eusart^(0+128)+1)
  1283  0255  3055               	movlw	85
  1284  0256  00A0               	movwf	??_Eusart^(0+128)
  1285  0257                     u1357:
  1286  0257  0BA0               	decfsz	??_Eusart^(0+128),f
  1287  0258  2A57               	goto	u1357
  1288  0259  0BA1               	decfsz	(??_Eusart^(0+128)+1),f
  1289  025A  2A57               	goto	u1357
  1290  025B  0BA2               	decfsz	(??_Eusart^(0+128)+2),f
  1291  025C  2A57               	goto	u1357
  1292  025D                     l1709:
  1293                           
  1294                           ;Lab05.c: 193:     printf("El numero elegido es: %d", full);
  1295  025D  1683               	bsf	3,5	;RP0=1, select bank1
  1296  025E  1303               	bcf	3,6	;RP1=0, select bank1
  1297  025F  0826               	movf	(_full+1)^(0+128),w
  1298  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0262  00B5               	movwf	?_printf+1
  1301  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0265  0825               	movf	_full^(0+128),w
  1304  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0268  00B4               	movwf	?_printf
  1307  0269  3044               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1308  026A  120A  118A  25A1  120A  118A  	fcall	_printf
  1309  026F                     l125:
  1310  026F  0008               	return
  1311  0270                     __end_of_Eusart:
  1312                           
  1313                           	psect	text3
  1314  05A1                     __ptext3:	
  1315 ;; *************** function _printf *****************
  1316 ;; Defined at:
  1317 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  f               1    wreg     PTR const unsigned char 
  1320 ;;		 -> STR_8(25), STR_7(21), STR_6(20), STR_5(30), 
  1321 ;;		 -> STR_4(27), STR_3(3), STR_2(21), STR_1(27), 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  f               1   25[BANK0 ] PTR const unsigned char 
  1324 ;;		 -> STR_8(25), STR_7(21), STR_6(20), STR_5(30), 
  1325 ;;		 -> STR_4(27), STR_3(3), STR_2(21), STR_1(27), 
  1326 ;;  pb              2   26[BANK0 ] struct __prbuf
  1327 ;;  ap              1   24[BANK0 ] PTR void [1]
  1328 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2   20[BANK0 ] int 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1338 ;;      Params:         0       2       0       0       0
  1339 ;;      Locals:         0       4       0       0       0
  1340 ;;      Temps:          0       2       0       0       0
  1341 ;;      Totals:         0       8       0       0       0
  1342 ;;Total ram usage:        8 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    3
  1345 ;; This function calls:
  1346 ;;		__doprnt
  1347 ;; This function is called by:
  1348 ;;		_Eusart
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           
  1353                           ;psect for function _printf
  1354  05A1                     _printf:
  1355                           
  1356                           ;incstack = 0
  1357                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1358                           ;printf@f stored from wreg
  1359  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1360  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1361  05A3  00B9               	movwf	printf@f
  1362  05A4                     l1653:
  1363  05A4  01BA               	clrf	printf@pb
  1364  05A5                     l1655:
  1365  05A5  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  1366  05A6  00B6               	movwf	??_printf
  1367  05A7  0836               	movf	??_printf,w
  1368  05A8  00BB               	movwf	low ((printf@pb| 0+1))
  1369  05A9                     l1657:
  1370  05A9  3034               	movlw	(low (?_printf| 0))& (0+255)
  1371  05AA  00B6               	movwf	??_printf
  1372  05AB  0836               	movf	??_printf,w
  1373  05AC  00B8               	movwf	printf@ap
  1374  05AD                     l1659:
  1375                           
  1376                           ;	Return value of _printf is never used
  1377  05AD  0839               	movf	printf@f,w
  1378  05AE  00B6               	movwf	??_printf
  1379  05AF  0836               	movf	??_printf,w
  1380  05B0  00A9               	movwf	__doprnt@f
  1381  05B1  3038               	movlw	(low (printf@ap| 0))& (0+255)
  1382  05B2  00B7               	movwf	??_printf+1
  1383  05B3  0837               	movf	??_printf+1,w
  1384  05B4  00AA               	movwf	__doprnt@ap
  1385  05B5  303A               	movlw	(low (printf@pb| 0))& (0+255)
  1386  05B6  120A  118A  2029  120A  118A  	fcall	__doprnt
  1387  05BB                     l691:
  1388  05BB  0008               	return
  1389  05BC                     __end_of_printf:
  1390                           
  1391                           	psect	text4
  1392  0469                     __ptext4:	
  1393 ;; *************** function _concat *****************
  1394 ;; Defined at:
  1395 ;;		line 197 in file "Lab05.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  a               2   29[BANK0 ] int 
  1398 ;;  b               2   31[BANK0 ] int 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  s1             20   54[BANK0 ] unsigned char [20]
  1401 ;;  s2             20   34[BANK0 ] unsigned char [20]
  1402 ;;  c               2   74[BANK0 ] int 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  2   29[BANK0 ] int 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       4       0       0       0
  1413 ;;      Locals:         0      42       0       0       0
  1414 ;;      Temps:          0       1       0       0       0
  1415 ;;      Totals:         0      47       0       0       0
  1416 ;;Total ram usage:       47 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    4
  1419 ;; This function calls:
  1420 ;;		_atoi
  1421 ;;		_sprintf
  1422 ;;		_strcat
  1423 ;; This function is called by:
  1424 ;;		_Eusart
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _concat
  1430  0469                     _concat:
  1431  0469                     l1663:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _concat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1434                           
  1435                           
  1436                           ;Lab05.c: 197: int concat(int a, int b);Lab05.c: 198: {;Lab05.c: 200:     char s1[20];;L
      +                          ab05.c: 201:     char s2[20];;Lab05.c: 204:     sprintf(s1, "%d", a);
  1437  0469  305A               	movlw	(low (((STR_8+22)-__stringbase)| (0+32768)))& (0+255)
  1438  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1439  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1440  046C  00C1               	movwf	??_concat
  1441  046D  0841               	movf	??_concat,w
  1442  046E  00B4               	movwf	sprintf@f
  1443  046F  083E               	movf	concat@a+1,w
  1444  0470  00B6               	movwf	?_sprintf+2
  1445  0471  083D               	movf	concat@a,w
  1446  0472  00B5               	movwf	?_sprintf+1
  1447  0473  3056               	movlw	(low (concat@s1| 0))& (0+255)
  1448  0474  120A  118A  2564  120A  118A  	fcall	_sprintf
  1449                           
  1450                           ;Lab05.c: 205:     sprintf(s2, "%d", b);
  1451  0479  305A               	movlw	(low (((STR_8+22)-__stringbase)| (0+32768)))& (0+255)
  1452  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1453  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1454  047C  00C1               	movwf	??_concat
  1455  047D  0841               	movf	??_concat,w
  1456  047E  00B4               	movwf	sprintf@f
  1457  047F  0840               	movf	concat@b+1,w
  1458  0480  00B6               	movwf	?_sprintf+2
  1459  0481  083F               	movf	concat@b,w
  1460  0482  00B5               	movwf	?_sprintf+1
  1461  0483  3042               	movlw	(low (concat@s2| 0))& (0+255)
  1462  0484  120A  118A  2564  120A  118A  	fcall	_sprintf
  1463  0489                     l1665:
  1464                           
  1465                           ;Lab05.c: 208:     strcat(s1, s2);
  1466  0489  3042               	movlw	(low (concat@s2| 0))& (0+255)
  1467  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1468  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1469  048C  00C1               	movwf	??_concat
  1470  048D  0841               	movf	??_concat,w
  1471  048E  00F3               	movwf	strcat@from
  1472  048F  3056               	movlw	(low (concat@s1| 0))& (0+255)
  1473  0490  120A  118A  253B  120A  118A  	fcall	_strcat
  1474  0495                     l1667:
  1475                           
  1476                           ;Lab05.c: 212:     int c = atoi(s1);
  1477  0495  3056               	movlw	(low (concat@s1| 0))& (0+255)
  1478  0496  120A  118A  23A0  120A  118A  	fcall	_atoi
  1479  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1480  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1481  049D  0823               	movf	?_atoi+1,w
  1482  049E  00EB               	movwf	concat@c+1
  1483  049F  0822               	movf	?_atoi,w
  1484  04A0  00EA               	movwf	concat@c
  1485  04A1                     l1669:
  1486                           
  1487                           ;Lab05.c: 215:     return c;
  1488  04A1  086B               	movf	concat@c+1,w
  1489  04A2  00BE               	movwf	?_concat+1
  1490  04A3  086A               	movf	concat@c,w
  1491  04A4  00BD               	movwf	?_concat
  1492  04A5                     l128:
  1493  04A5  0008               	return
  1494  04A6                     __end_of_concat:
  1495                           
  1496                           	psect	text5
  1497  053B                     __ptext5:	
  1498 ;; *************** function _strcat *****************
  1499 ;; Defined at:
  1500 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  to              1    wreg     PTR unsigned char 
  1503 ;;		 -> concat@s1(20), 
  1504 ;;  from            1    3[COMMON] PTR const unsigned char 
  1505 ;;		 -> concat@s2(20), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  to              1    5[COMMON] PTR unsigned char 
  1508 ;;		 -> concat@s1(20), 
  1509 ;;  cp              1    6[COMMON] PTR unsigned char 
  1510 ;;		 -> concat@s1(20), 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      PTR unsigned char 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         1       0       0       0       0
  1521 ;;      Locals:         2       0       0       0       0
  1522 ;;      Temps:          1       0       0       0       0
  1523 ;;      Totals:         4       0       0       0       0
  1524 ;;Total ram usage:        4 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_concat
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           
  1535                           ;psect for function _strcat
  1536  053B                     _strcat:
  1537                           
  1538                           ;incstack = 0
  1539                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1540                           ;strcat@to stored from wreg
  1541  053B  00F5               	movwf	strcat@to
  1542  053C                     l1319:
  1543  053C  0875               	movf	strcat@to,w
  1544  053D  00F4               	movwf	??_strcat
  1545  053E  0874               	movf	??_strcat,w
  1546  053F  00F6               	movwf	strcat@cp
  1547  0540  2D45               	goto	l1323
  1548  0541                     l1321:
  1549  0541  3001               	movlw	1
  1550  0542  00F4               	movwf	??_strcat
  1551  0543  0874               	movf	??_strcat,w
  1552  0544  07F6               	addwf	strcat@cp,f
  1553  0545                     l1323:
  1554  0545  0876               	movf	strcat@cp,w
  1555  0546  0084               	movwf	4
  1556  0547  1383               	bcf	3,7	;select IRP bank0
  1557  0548  0800               	movf	0,w
  1558  0549  1D03               	btfss	3,2
  1559  054A  2D4C               	goto	u811
  1560  054B  2D4D               	goto	u810
  1561  054C                     u811:
  1562  054C  2D41               	goto	l1321
  1563  054D                     u810:
  1564  054D  2D56               	goto	l1327
  1565  054E                     l1325:
  1566  054E  3001               	movlw	1
  1567  054F  00F4               	movwf	??_strcat
  1568  0550  0874               	movf	??_strcat,w
  1569  0551  07F6               	addwf	strcat@cp,f
  1570  0552  3001               	movlw	1
  1571  0553  00F4               	movwf	??_strcat
  1572  0554  0874               	movf	??_strcat,w
  1573  0555  07F3               	addwf	strcat@from,f
  1574  0556                     l1327:
  1575  0556  0873               	movf	strcat@from,w
  1576  0557  0084               	movwf	4
  1577  0558  0800               	movf	0,w
  1578  0559  00F4               	movwf	??_strcat
  1579  055A  0876               	movf	strcat@cp,w
  1580  055B  0084               	movwf	4
  1581  055C  0874               	movf	??_strcat,w
  1582  055D  0080               	movwf	0
  1583  055E  0800               	movf	0,w
  1584  055F  1D03               	btfss	3,2
  1585  0560  2D62               	goto	u821
  1586  0561  2D63               	goto	u820
  1587  0562                     u821:
  1588  0562  2D4E               	goto	l1325
  1589  0563                     u820:
  1590  0563                     l745:
  1591  0563  0008               	return
  1592  0564                     __end_of_strcat:
  1593                           
  1594                           	psect	text6
  1595  0564                     __ptext6:	
  1596 ;; *************** function _sprintf *****************
  1597 ;; Defined at:
  1598 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  wh              1    wreg     PTR unsigned char 
  1601 ;;		 -> concat@s2(20), concat@s1(20), 
  1602 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  1603 ;;		 -> STR_10(3), STR_9(3), 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  wh              1   25[BANK0 ] PTR unsigned char 
  1606 ;;		 -> concat@s2(20), concat@s1(20), 
  1607 ;;  pb              2   27[BANK0 ] struct __prbuf
  1608 ;;  ap              1   26[BANK0 ] PTR void [1]
  1609 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  2   20[BANK0 ] int 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       3       0       0       0
  1620 ;;      Locals:         0       4       0       0       0
  1621 ;;      Temps:          0       2       0       0       0
  1622 ;;      Totals:         0       9       0       0       0
  1623 ;;Total ram usage:        9 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    3
  1626 ;; This function calls:
  1627 ;;		__doprnt
  1628 ;; This function is called by:
  1629 ;;		_concat
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _sprintf
  1635  0564                     _sprintf:
  1636                           
  1637                           ;incstack = 0
  1638                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1639                           ;sprintf@wh stored from wreg
  1640  0564  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0565  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0566  00B9               	movwf	sprintf@wh
  1643  0567                     l1607:
  1644  0567  0839               	movf	sprintf@wh,w
  1645  0568  00B7               	movwf	??_sprintf
  1646  0569  0837               	movf	??_sprintf,w
  1647  056A  00BB               	movwf	sprintf@pb
  1648  056B                     l1609:
  1649  056B  01BC               	clrf	low ((sprintf@pb| 0+1))
  1650  056C                     l1611:
  1651  056C  3035               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1652  056D  00B7               	movwf	??_sprintf
  1653  056E  0837               	movf	??_sprintf,w
  1654  056F  00BA               	movwf	sprintf@ap
  1655  0570                     l1613:
  1656  0570  0834               	movf	sprintf@f,w
  1657  0571  00B7               	movwf	??_sprintf
  1658  0572  0837               	movf	??_sprintf,w
  1659  0573  00A9               	movwf	__doprnt@f
  1660  0574  303A               	movlw	(low (sprintf@ap| 0))& (0+255)
  1661  0575  00B8               	movwf	??_sprintf+1
  1662  0576  0838               	movf	??_sprintf+1,w
  1663  0577  00AA               	movwf	__doprnt@ap
  1664  0578  303B               	movlw	(low (sprintf@pb| 0))& (0+255)
  1665  0579  120A  118A  2029  120A  118A  	fcall	__doprnt
  1666  057E                     l1615:
  1667  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1668  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0580  083B               	movf	sprintf@pb,w
  1670  0581  0084               	movwf	4
  1671  0582  1383               	bcf	3,7	;select IRP bank0
  1672  0583  0180               	clrf	0
  1673  0584                     l736:
  1674  0584  0008               	return
  1675  0585                     __end_of_sprintf:
  1676                           
  1677                           	psect	text7
  1678  0029                     __ptext7:	
  1679 ;; *************** function __doprnt *****************
  1680 ;; Defined at:
  1681 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  pb              1    wreg     PTR struct __prbuf
  1684 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1685 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1686 ;;		 -> STR_10(3), STR_9(3), STR_8(25), STR_7(21), 
  1687 ;;		 -> STR_6(20), STR_5(30), STR_4(27), STR_3(3), 
  1688 ;;		 -> STR_2(21), STR_1(27), 
  1689 ;;  ap              1   10[BANK0 ] PTR PTR void 
  1690 ;;		 -> sprintf@ap(1), printf@ap(1), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  pb              1   19[BANK0 ] PTR struct __prbuf
  1693 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1694 ;;  tmpval          4    0        struct .
  1695 ;;  val             2   16[BANK0 ] unsigned int 
  1696 ;;  cp              2    0        PTR const unsigned char 
  1697 ;;  len             2    0        unsigned int 
  1698 ;;  c               1   18[BANK0 ] unsigned char 
  1699 ;;  prec            1   15[BANK0 ] char 
  1700 ;;  flag            1   14[BANK0 ] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  2    9[BANK0 ] int 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       2       0       0       0
  1711 ;;      Locals:         0       6       0       0       0
  1712 ;;      Temps:          0       3       0       0       0
  1713 ;;      Totals:         0      11       0       0       0
  1714 ;;Total ram usage:       11 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    2
  1717 ;; This function calls:
  1718 ;;		Absolute function
  1719 ;;		___lwdiv
  1720 ;;		___lwmod
  1721 ;;		_putch
  1722 ;; This function is called by:
  1723 ;;		_printf
  1724 ;;		_sprintf
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function __doprnt
  1730  0029                     __doprnt:
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1734                           ;__doprnt@pb stored from wreg
  1735  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1736  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1737  002B  00B3               	movwf	__doprnt@pb
  1738  002C                     l1535:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  1741  002C  2948               	goto	l1597
  1742  002D                     l1537:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1745  002D  3025               	movlw	37
  1746  002E  0632               	xorwf	__doprnt@c,w
  1747  002F  1903               	btfsc	3,2
  1748  0030  2832               	goto	u1091
  1749  0031  2833               	goto	u1090
  1750  0032                     u1091:
  1751  0032  2859               	goto	l1547
  1752  0033                     u1090:
  1753  0033                     l1539:
  1754  0033  0A33               	incf	__doprnt@pb,w
  1755  0034  0084               	movwf	4
  1756  0035  1383               	bcf	3,7	;select IRP bank0
  1757  0036  0800               	movf	0,w
  1758  0037  1903               	btfsc	3,2
  1759  0038  283A               	goto	u1101
  1760  0039  283B               	goto	u1100
  1761  003A                     u1101:
  1762  003A  284A               	goto	l1543
  1763  003B                     u1100:
  1764  003B                     l1541:
  1765  003B  0832               	movf	__doprnt@c,w
  1766  003C  00AB               	movwf	??__doprnt
  1767  003D  082B               	movf	??__doprnt,w
  1768  003E  00F3               	movwf	putch@data
  1769  003F  0A33               	incf	__doprnt@pb,w
  1770  0040  0084               	movwf	4
  1771  0041  0800               	movf	0,w
  1772  0042  120A  118A  2020  120A  118A  	fcall	fptable
  1773  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0049  282C               	goto	l1535
  1776  004A                     l1543:
  1777  004A  0832               	movf	__doprnt@c,w
  1778  004B  00AB               	movwf	??__doprnt
  1779  004C  0833               	movf	__doprnt@pb,w
  1780  004D  0084               	movwf	4
  1781  004E  0800               	movf	0,w
  1782  004F  0084               	movwf	4
  1783  0050  082B               	movf	??__doprnt,w
  1784  0051  0080               	movwf	0
  1785  0052                     l1545:
  1786  0052  3001               	movlw	1
  1787  0053  00AB               	movwf	??__doprnt
  1788  0054  0833               	movf	__doprnt@pb,w
  1789  0055  0084               	movwf	4
  1790  0056  082B               	movf	??__doprnt,w
  1791  0057  0780               	addwf	0,f
  1792  0058  282C               	goto	l1535
  1793  0059                     l1547:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1796  0059  01AE               	clrf	__doprnt@flag
  1797  005A                     l1551:	
  1798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1799                           
  1800  005A  3001               	movlw	1
  1801  005B  07A9               	addwf	__doprnt@f,f
  1802  005C  30FF               	movlw	-1
  1803  005D  0729               	addwf	__doprnt@f,w
  1804  005E  0084               	movwf	4
  1805  005F  120A  118A  2300  120A  118A  	fcall	stringdir
  1806  0064  00B2               	movwf	__doprnt@c
  1807  0065  00AB               	movwf	??__doprnt
  1808  0066  01AC               	clrf	??__doprnt+1
  1809                           
  1810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1811                           ; Switch size 1, requested type "simple"
  1812                           ; Number of cases is 1, Range of values is 0 to 0
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; simple_byte            4     3 (average)
  1816                           ; direct_byte           11     8 (fixed)
  1817                           ; jumptable            260     6 (fixed)
  1818                           ;	Chosen strategy is simple_byte
  1819  0067  082C               	movf	??__doprnt+1,w
  1820  0068  3A00               	xorlw	0	; case 0
  1821  0069  1903               	skipnz
  1822  006A  286C               	goto	l1737
  1823  006B  2948               	goto	l1597
  1824  006C                     l1737:
  1825                           
  1826                           ; Switch size 1, requested type "simple"
  1827                           ; Number of cases is 3, Range of values is 0 to 105
  1828                           ; switch strategies available:
  1829                           ; Name         Instructions Cycles
  1830                           ; simple_byte           10     6 (average)
  1831                           ; jumptable            260     6 (fixed)
  1832                           ;	Chosen strategy is simple_byte
  1833  006C  082B               	movf	??__doprnt,w
  1834  006D  3A00               	xorlw	0	; case 0
  1835  006E  1903               	skipnz
  1836  006F  295C               	goto	l1599
  1837  0070  3A64               	xorlw	100	; case 100
  1838  0071  1903               	skipnz
  1839  0072  2877               	goto	l1553
  1840  0073  3A0D               	xorlw	13	; case 105
  1841  0074  1903               	skipnz
  1842  0075  2877               	goto	l1553
  1843  0076  2948               	goto	l1597
  1844  0077                     l1553:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1847  0077  082A               	movf	__doprnt@ap,w
  1848  0078  0084               	movwf	4
  1849  0079  1383               	bcf	3,7	;select IRP bank0
  1850  007A  0800               	movf	0,w
  1851  007B  00AB               	movwf	??__doprnt
  1852  007C  3002               	movlw	2
  1853  007D  0780               	addwf	0,f
  1854  007E  082B               	movf	??__doprnt,w
  1855  007F  0084               	movwf	4
  1856  0080  0800               	movf	0,w
  1857  0081  00B0               	movwf	__doprnt@val
  1858  0082  0A84               	incf	4,f
  1859  0083  0800               	movf	0,w
  1860  0084  00B1               	movwf	__doprnt@val+1
  1861  0085                     l1555:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1864  0085  1FB1               	btfss	__doprnt@val+1,7
  1865  0086  2888               	goto	u1111
  1866  0087  2889               	goto	u1110
  1867  0088                     u1111:
  1868  0088  2892               	goto	l1561
  1869  0089                     u1110:
  1870  0089                     l1557:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1873  0089  3003               	movlw	3
  1874  008A  00AB               	movwf	??__doprnt
  1875  008B  082B               	movf	??__doprnt,w
  1876  008C  04AE               	iorwf	__doprnt@flag,f
  1877  008D                     l1559:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1880  008D  09B0               	comf	__doprnt@val,f
  1881  008E  09B1               	comf	__doprnt@val+1,f
  1882  008F  0AB0               	incf	__doprnt@val,f
  1883  0090  1903               	skipnz
  1884  0091  0AB1               	incf	__doprnt@val+1,f
  1885  0092                     l1561:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1888  0092  01B2               	clrf	__doprnt@c
  1889  0093  0AB2               	incf	__doprnt@c,f
  1890  0094                     l1567:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1893  0094  0832               	movf	__doprnt@c,w
  1894  0095  00AB               	movwf	??__doprnt
  1895  0096  072B               	addwf	??__doprnt,w
  1896  0097  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1897  0098  0084               	movwf	4
  1898  0099  120A  118A  2300  120A  118A  	fcall	stringdir
  1899  009E  00AC               	movwf	??__doprnt+1
  1900  009F  120A  118A  2300  120A  118A  	fcall	stringdir
  1901  00A4  00AD               	movwf	??__doprnt+2
  1902  00A5  082D               	movf	??__doprnt+2,w
  1903  00A6  0231               	subwf	__doprnt@val+1,w
  1904  00A7  1D03               	skipz
  1905  00A8  28AB               	goto	u1125
  1906  00A9  082C               	movf	??__doprnt+1,w
  1907  00AA  0230               	subwf	__doprnt@val,w
  1908  00AB                     u1125:
  1909  00AB  1803               	skipnc
  1910  00AC  28AE               	goto	u1121
  1911  00AD  28AF               	goto	u1120
  1912  00AE                     u1121:
  1913  00AE  28B0               	goto	l1571
  1914  00AF                     u1120:
  1915  00AF  28BA               	goto	l1573
  1916  00B0                     l1571:
  1917  00B0  3001               	movlw	1
  1918  00B1  00AB               	movwf	??__doprnt
  1919  00B2  082B               	movf	??__doprnt,w
  1920  00B3  07B2               	addwf	__doprnt@c,f
  1921  00B4  3005               	movlw	5
  1922  00B5  0632               	xorwf	__doprnt@c,w
  1923  00B6  1D03               	btfss	3,2
  1924  00B7  28B9               	goto	u1131
  1925  00B8  28BA               	goto	u1130
  1926  00B9                     u1131:
  1927  00B9  2894               	goto	l1567
  1928  00BA                     u1130:
  1929  00BA                     l1573:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1932  00BA  082E               	movf	__doprnt@flag,w
  1933  00BB  3903               	andlw	3
  1934  00BC  1903               	btfsc	3,2
  1935  00BD  28BF               	goto	u1141
  1936  00BE  28C0               	goto	u1140
  1937  00BF                     u1141:
  1938  00BF  28E3               	goto	l1583
  1939  00C0                     u1140:
  1940  00C0                     l1575:
  1941  00C0  0A33               	incf	__doprnt@pb,w
  1942  00C1  0084               	movwf	4
  1943  00C2  1383               	bcf	3,7	;select IRP bank0
  1944  00C3  0800               	movf	0,w
  1945  00C4  1903               	btfsc	3,2
  1946  00C5  28C7               	goto	u1151
  1947  00C6  28C8               	goto	u1150
  1948  00C7                     u1151:
  1949  00C7  28D5               	goto	l1579
  1950  00C8                     u1150:
  1951  00C8                     l1577:
  1952  00C8  302D               	movlw	45
  1953  00C9  00AB               	movwf	??__doprnt
  1954  00CA  082B               	movf	??__doprnt,w
  1955  00CB  00F3               	movwf	putch@data
  1956  00CC  0A33               	incf	__doprnt@pb,w
  1957  00CD  0084               	movwf	4
  1958  00CE  0800               	movf	0,w
  1959  00CF  120A  118A  2020  120A  118A  	fcall	fptable
  1960  00D4  28E3               	goto	l1583
  1961  00D5                     l1579:
  1962  00D5  302D               	movlw	45
  1963  00D6  00AB               	movwf	??__doprnt
  1964  00D7  0833               	movf	__doprnt@pb,w
  1965  00D8  0084               	movwf	4
  1966  00D9  0800               	movf	0,w
  1967  00DA  0084               	movwf	4
  1968  00DB  082B               	movf	??__doprnt,w
  1969  00DC  0080               	movwf	0
  1970  00DD                     l1581:
  1971  00DD  3001               	movlw	1
  1972  00DE  00AB               	movwf	??__doprnt
  1973  00DF  0833               	movf	__doprnt@pb,w
  1974  00E0  0084               	movwf	4
  1975  00E1  082B               	movf	??__doprnt,w
  1976  00E2  0780               	addwf	0,f
  1977  00E3                     l1583:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1980  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1981  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1982  00E5  0832               	movf	__doprnt@c,w
  1983  00E6  00AB               	movwf	??__doprnt
  1984  00E7  082B               	movf	??__doprnt,w
  1985  00E8  00AF               	movwf	__doprnt@prec
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1988  00E9  293D               	goto	l1595
  1989  00EA                     l1585:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1992  00EA  300A               	movlw	10
  1993  00EB  00A3               	movwf	___lwmod@divisor
  1994  00EC  3000               	movlw	0
  1995  00ED  00A4               	movwf	___lwmod@divisor+1
  1996  00EE  082F               	movf	__doprnt@prec,w
  1997  00EF  00AB               	movwf	??__doprnt
  1998  00F0  072B               	addwf	??__doprnt,w
  1999  00F1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2000  00F2  0084               	movwf	4
  2001  00F3  120A  118A  2300  120A  118A  	fcall	stringdir
  2002  00F8  00F3               	movwf	___lwdiv@divisor
  2003  00F9  120A  118A  2300  120A  118A  	fcall	stringdir
  2004  00FE  00F4               	movwf	___lwdiv@divisor+1
  2005  00FF  0831               	movf	__doprnt@val+1,w
  2006  0100  00F6               	movwf	___lwdiv@dividend+1
  2007  0101  0830               	movf	__doprnt@val,w
  2008  0102  00F5               	movwf	___lwdiv@dividend
  2009  0103  120A  118A  2423  120A  118A  	fcall	___lwdiv
  2010  0108  0874               	movf	?___lwdiv+1,w
  2011  0109  1283               	bcf	3,5	;RP0=0, select bank0
  2012  010A  1303               	bcf	3,6	;RP1=0, select bank0
  2013  010B  00A6               	movwf	___lwmod@dividend+1
  2014  010C  0873               	movf	?___lwdiv,w
  2015  010D  00A5               	movwf	___lwmod@dividend
  2016  010E  120A  118A  24A6  120A  118A  	fcall	___lwmod
  2017  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0114  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0115  0823               	movf	?___lwmod,w
  2020  0116  3E30               	addlw	48
  2021  0117  00AC               	movwf	??__doprnt+1
  2022  0118  082C               	movf	??__doprnt+1,w
  2023  0119  00B2               	movwf	__doprnt@c
  2024  011A                     l1587:
  2025  011A  0A33               	incf	__doprnt@pb,w
  2026  011B  0084               	movwf	4
  2027  011C  1383               	bcf	3,7	;select IRP bank0
  2028  011D  0800               	movf	0,w
  2029  011E  1903               	btfsc	3,2
  2030  011F  2921               	goto	u1161
  2031  0120  2922               	goto	u1160
  2032  0121                     u1161:
  2033  0121  292F               	goto	l1591
  2034  0122                     u1160:
  2035  0122                     l1589:
  2036  0122  0832               	movf	__doprnt@c,w
  2037  0123  00AB               	movwf	??__doprnt
  2038  0124  082B               	movf	??__doprnt,w
  2039  0125  00F3               	movwf	putch@data
  2040  0126  0A33               	incf	__doprnt@pb,w
  2041  0127  0084               	movwf	4
  2042  0128  0800               	movf	0,w
  2043  0129  120A  118A  2020  120A  118A  	fcall	fptable
  2044  012E  293D               	goto	l1595
  2045  012F                     l1591:
  2046  012F  0832               	movf	__doprnt@c,w
  2047  0130  00AB               	movwf	??__doprnt
  2048  0131  0833               	movf	__doprnt@pb,w
  2049  0132  0084               	movwf	4
  2050  0133  0800               	movf	0,w
  2051  0134  0084               	movwf	4
  2052  0135  082B               	movf	??__doprnt,w
  2053  0136  0080               	movwf	0
  2054  0137                     l1593:
  2055  0137  3001               	movlw	1
  2056  0138  00AB               	movwf	??__doprnt
  2057  0139  0833               	movf	__doprnt@pb,w
  2058  013A  0084               	movwf	4
  2059  013B  082B               	movf	??__doprnt,w
  2060  013C  0780               	addwf	0,f
  2061  013D                     l1595:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2064  013D  30FF               	movlw	255
  2065  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2066  013F  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0140  00AB               	movwf	??__doprnt
  2068  0141  082B               	movf	??__doprnt,w
  2069  0142  07AF               	addwf	__doprnt@prec,f
  2070  0143  0A2F               	incf	__doprnt@prec,w
  2071  0144  1D03               	btfss	3,2
  2072  0145  2947               	goto	u1171
  2073  0146  2948               	goto	u1170
  2074  0147                     u1171:
  2075  0147  28EA               	goto	l1585
  2076  0148                     u1170:
  2077  0148                     l1597:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2080  0148  3001               	movlw	1
  2081  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2082  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2083  014B  07A9               	addwf	__doprnt@f,f
  2084  014C  30FF               	movlw	-1
  2085  014D  0729               	addwf	__doprnt@f,w
  2086  014E  0084               	movwf	4
  2087  014F  120A  118A  2300  120A  118A  	fcall	stringdir
  2088  0154  00AB               	movwf	??__doprnt
  2089  0155  082B               	movf	??__doprnt,w
  2090  0156  00B2               	movwf	__doprnt@c
  2091  0157  0832               	movf	__doprnt@c,w
  2092  0158  1D03               	btfss	3,2
  2093  0159  295B               	goto	u1181
  2094  015A  295C               	goto	u1180
  2095  015B                     u1181:
  2096  015B  282D               	goto	l1537
  2097  015C                     u1180:
  2098  015C                     l1599:
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2101  015C  01A9               	clrf	?__doprnt
  2102  015D  01AA               	clrf	?__doprnt+1
  2103  015E                     l729:
  2104  015E  0008               	return
  2105  015F                     __end_of__doprnt:
  2106                           
  2107                           	psect	text8
  2108  05E2                     __ptext8:	
  2109 ;; *************** function _putch *****************
  2110 ;; Defined at:
  2111 ;;		line 147 in file "Lab05.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  data            1    3[COMMON] unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         1       0       0       0       0
  2126 ;;      Locals:         0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0
  2128 ;;      Totals:         1       0       0       0       0
  2129 ;;Total ram usage:        1 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_printf
  2136 ;;		__doprnt
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _putch
  2142  05E2                     _putch:
  2143  05E2                     l1155:	
  2144                           ;incstack = 0
  2145                           ; Regs used in _putch: [wreg]
  2146                           
  2147  05E2                     l96:	
  2148                           ;Lab05.c: 148:     while (TXIF == 0);
  2149                           
  2150  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2151  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2152  05E4  1E0C               	btfss	12,4	;volatile
  2153  05E5  2DE7               	goto	u511
  2154  05E6  2DE8               	goto	u510
  2155  05E7                     u511:
  2156  05E7  2DE2               	goto	l96
  2157  05E8                     u510:
  2158  05E8                     l1157:
  2159                           
  2160                           ;Lab05.c: 149:     TXREG = data;
  2161  05E8  0873               	movf	putch@data,w
  2162  05E9  0099               	movwf	25	;volatile
  2163  05EA                     l99:
  2164  05EA  0008               	return
  2165  05EB                     __end_of_putch:
  2166                           
  2167                           	psect	text9
  2168  04A6                     __ptext9:	
  2169 ;; *************** function ___lwmod *****************
  2170 ;; Defined at:
  2171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  divisor         2    3[BANK0 ] unsigned int 
  2174 ;;  dividend        2    5[BANK0 ] unsigned int 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  counter         1    8[BANK0 ] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  2    3[BANK0 ] unsigned int 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         0       4       0       0       0
  2187 ;;      Locals:         0       1       0       0       0
  2188 ;;      Temps:          0       1       0       0       0
  2189 ;;      Totals:         0       6       0       0       0
  2190 ;;Total ram usage:        6 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		__doprnt
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function ___lwmod
  2202  04A6                     ___lwmod:
  2203  04A6                     l1187:	
  2204                           ;incstack = 0
  2205                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2206                           
  2207  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2208  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2209  04A8  0823               	movf	___lwmod@divisor,w
  2210  04A9  0424               	iorwf	___lwmod@divisor+1,w
  2211  04AA  1903               	btfsc	3,2
  2212  04AB  2CAD               	goto	u591
  2213  04AC  2CAE               	goto	u590
  2214  04AD                     u591:
  2215  04AD  2CDD               	goto	l1205
  2216  04AE                     u590:
  2217  04AE                     l1189:
  2218  04AE  01A8               	clrf	___lwmod@counter
  2219  04AF  0AA8               	incf	___lwmod@counter,f
  2220  04B0  2CBC               	goto	l1195
  2221  04B1                     l1191:
  2222  04B1  3001               	movlw	1
  2223  04B2                     u605:
  2224  04B2  1003               	clrc
  2225  04B3  0DA3               	rlf	___lwmod@divisor,f
  2226  04B4  0DA4               	rlf	___lwmod@divisor+1,f
  2227  04B5  3EFF               	addlw	-1
  2228  04B6  1D03               	skipz
  2229  04B7  2CB2               	goto	u605
  2230  04B8                     l1193:
  2231  04B8  3001               	movlw	1
  2232  04B9  00A7               	movwf	??___lwmod
  2233  04BA  0827               	movf	??___lwmod,w
  2234  04BB  07A8               	addwf	___lwmod@counter,f
  2235  04BC                     l1195:
  2236  04BC  1FA4               	btfss	___lwmod@divisor+1,7
  2237  04BD  2CBF               	goto	u611
  2238  04BE  2CC0               	goto	u610
  2239  04BF                     u611:
  2240  04BF  2CB1               	goto	l1191
  2241  04C0                     u610:
  2242  04C0                     l1197:
  2243  04C0  0824               	movf	___lwmod@divisor+1,w
  2244  04C1  0226               	subwf	___lwmod@dividend+1,w
  2245  04C2  1D03               	skipz
  2246  04C3  2CC6               	goto	u625
  2247  04C4  0823               	movf	___lwmod@divisor,w
  2248  04C5  0225               	subwf	___lwmod@dividend,w
  2249  04C6                     u625:
  2250  04C6  1C03               	skipc
  2251  04C7  2CC9               	goto	u621
  2252  04C8  2CCA               	goto	u620
  2253  04C9                     u621:
  2254  04C9  2CD0               	goto	l1201
  2255  04CA                     u620:
  2256  04CA                     l1199:
  2257  04CA  0823               	movf	___lwmod@divisor,w
  2258  04CB  02A5               	subwf	___lwmod@dividend,f
  2259  04CC  0824               	movf	___lwmod@divisor+1,w
  2260  04CD  1C03               	skipc
  2261  04CE  03A6               	decf	___lwmod@dividend+1,f
  2262  04CF  02A6               	subwf	___lwmod@dividend+1,f
  2263  04D0                     l1201:
  2264  04D0  3001               	movlw	1
  2265  04D1                     u635:
  2266  04D1  1003               	clrc
  2267  04D2  0CA4               	rrf	___lwmod@divisor+1,f
  2268  04D3  0CA3               	rrf	___lwmod@divisor,f
  2269  04D4  3EFF               	addlw	-1
  2270  04D5  1D03               	skipz
  2271  04D6  2CD1               	goto	u635
  2272  04D7                     l1203:
  2273  04D7  3001               	movlw	1
  2274  04D8  02A8               	subwf	___lwmod@counter,f
  2275  04D9  1D03               	btfss	3,2
  2276  04DA  2CDC               	goto	u641
  2277  04DB  2CDD               	goto	u640
  2278  04DC                     u641:
  2279  04DC  2CC0               	goto	l1197
  2280  04DD                     u640:
  2281  04DD                     l1205:
  2282  04DD  0826               	movf	___lwmod@dividend+1,w
  2283  04DE  00A4               	movwf	?___lwmod+1
  2284  04DF  0825               	movf	___lwmod@dividend,w
  2285  04E0  00A3               	movwf	?___lwmod
  2286  04E1                     l496:
  2287  04E1  0008               	return
  2288  04E2                     __end_of___lwmod:
  2289                           
  2290                           	psect	text10
  2291  0423                     __ptext10:	
  2292 ;; *************** function ___lwdiv *****************
  2293 ;; Defined at:
  2294 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  divisor         2    3[COMMON] unsigned int 
  2297 ;;  dividend        2    5[COMMON] unsigned int 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  quotient        2    1[BANK0 ] unsigned int 
  2300 ;;  counter         1    0[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  2    3[COMMON] unsigned int 
  2303 ;; Registers used:
  2304 ;;		wreg, status,2, status,0
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         4       0       0       0       0
  2311 ;;      Locals:         0       3       0       0       0
  2312 ;;      Temps:          1       0       0       0       0
  2313 ;;      Totals:         5       3       0       0       0
  2314 ;;Total ram usage:        8 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		__doprnt
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function ___lwdiv
  2326  0423                     ___lwdiv:
  2327  0423                     l1495:	
  2328                           ;incstack = 0
  2329                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2330                           
  2331  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0425  01A1               	clrf	___lwdiv@quotient
  2334  0426  01A2               	clrf	___lwdiv@quotient+1
  2335  0427                     l1497:
  2336  0427  0873               	movf	___lwdiv@divisor,w
  2337  0428  0474               	iorwf	___lwdiv@divisor+1,w
  2338  0429  1903               	btfsc	3,2
  2339  042A  2C2C               	goto	u981
  2340  042B  2C2D               	goto	u980
  2341  042C                     u981:
  2342  042C  2C64               	goto	l1517
  2343  042D                     u980:
  2344  042D                     l1499:
  2345  042D  01A0               	clrf	___lwdiv@counter
  2346  042E  0AA0               	incf	___lwdiv@counter,f
  2347  042F  2C3B               	goto	l1505
  2348  0430                     l1501:
  2349  0430  3001               	movlw	1
  2350  0431                     u995:
  2351  0431  1003               	clrc
  2352  0432  0DF3               	rlf	___lwdiv@divisor,f
  2353  0433  0DF4               	rlf	___lwdiv@divisor+1,f
  2354  0434  3EFF               	addlw	-1
  2355  0435  1D03               	skipz
  2356  0436  2C31               	goto	u995
  2357  0437                     l1503:
  2358  0437  3001               	movlw	1
  2359  0438  00F7               	movwf	??___lwdiv
  2360  0439  0877               	movf	??___lwdiv,w
  2361  043A  07A0               	addwf	___lwdiv@counter,f
  2362  043B                     l1505:
  2363  043B  1FF4               	btfss	___lwdiv@divisor+1,7
  2364  043C  2C3E               	goto	u1001
  2365  043D  2C3F               	goto	u1000
  2366  043E                     u1001:
  2367  043E  2C30               	goto	l1501
  2368  043F                     u1000:
  2369  043F                     l1507:
  2370  043F  3001               	movlw	1
  2371  0440                     u1015:
  2372  0440  1003               	clrc
  2373  0441  0DA1               	rlf	___lwdiv@quotient,f
  2374  0442  0DA2               	rlf	___lwdiv@quotient+1,f
  2375  0443  3EFF               	addlw	-1
  2376  0444  1D03               	skipz
  2377  0445  2C40               	goto	u1015
  2378  0446  0874               	movf	___lwdiv@divisor+1,w
  2379  0447  0276               	subwf	___lwdiv@dividend+1,w
  2380  0448  1D03               	skipz
  2381  0449  2C4C               	goto	u1025
  2382  044A  0873               	movf	___lwdiv@divisor,w
  2383  044B  0275               	subwf	___lwdiv@dividend,w
  2384  044C                     u1025:
  2385  044C  1C03               	skipc
  2386  044D  2C4F               	goto	u1021
  2387  044E  2C50               	goto	u1020
  2388  044F                     u1021:
  2389  044F  2C57               	goto	l1513
  2390  0450                     u1020:
  2391  0450                     l1509:
  2392  0450  0873               	movf	___lwdiv@divisor,w
  2393  0451  02F5               	subwf	___lwdiv@dividend,f
  2394  0452  0874               	movf	___lwdiv@divisor+1,w
  2395  0453  1C03               	skipc
  2396  0454  03F6               	decf	___lwdiv@dividend+1,f
  2397  0455  02F6               	subwf	___lwdiv@dividend+1,f
  2398  0456                     l1511:
  2399  0456  1421               	bsf	___lwdiv@quotient,0
  2400  0457                     l1513:
  2401  0457  3001               	movlw	1
  2402  0458                     u1035:
  2403  0458  1003               	clrc
  2404  0459  0CF4               	rrf	___lwdiv@divisor+1,f
  2405  045A  0CF3               	rrf	___lwdiv@divisor,f
  2406  045B  3EFF               	addlw	-1
  2407  045C  1D03               	skipz
  2408  045D  2C58               	goto	u1035
  2409  045E                     l1515:
  2410  045E  3001               	movlw	1
  2411  045F  02A0               	subwf	___lwdiv@counter,f
  2412  0460  1D03               	btfss	3,2
  2413  0461  2C63               	goto	u1041
  2414  0462  2C64               	goto	u1040
  2415  0463                     u1041:
  2416  0463  2C3F               	goto	l1507
  2417  0464                     u1040:
  2418  0464                     l1517:
  2419  0464  0822               	movf	___lwdiv@quotient+1,w
  2420  0465  00F4               	movwf	?___lwdiv+1
  2421  0466  0821               	movf	___lwdiv@quotient,w
  2422  0467  00F3               	movwf	?___lwdiv
  2423  0468                     l486:
  2424  0468  0008               	return
  2425  0469                     __end_of___lwdiv:
  2426                           
  2427                           	psect	text11
  2428  03A0                     __ptext11:	
  2429 ;; *************** function _atoi *****************
  2430 ;; Defined at:
  2431 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  s               1    wreg     PTR const unsigned char 
  2434 ;;		 -> concat@s1(20), 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  2437 ;;		 -> concat@s1(20), 
  2438 ;;  a               2    7[BANK0 ] int 
  2439 ;;  sign            1    6[BANK0 ] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2    2[BANK0 ] int 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2449 ;;      Params:         0       2       0       0       0
  2450 ;;      Locals:         0       4       0       0       0
  2451 ;;      Temps:          0       2       0       0       0
  2452 ;;      Totals:         0       8       0       0       0
  2453 ;;Total ram usage:        8 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    2
  2456 ;; This function calls:
  2457 ;;		___wmul
  2458 ;;		_isdigit
  2459 ;; This function is called by:
  2460 ;;		_concat
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _atoi
  2466  03A0                     _atoi:
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2470                           ;atoi@s stored from wreg
  2471  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2472  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2473  03A2  00A9               	movwf	atoi@s
  2474  03A3                     l1619:
  2475  03A3  2BA8               	goto	l1623
  2476  03A4                     l1621:
  2477  03A4  3001               	movlw	1
  2478  03A5  00A4               	movwf	??_atoi
  2479  03A6  0824               	movf	??_atoi,w
  2480  03A7  07A9               	addwf	atoi@s,f
  2481  03A8                     l1623:
  2482  03A8  0829               	movf	atoi@s,w
  2483  03A9  0084               	movwf	4
  2484  03AA  3020               	movlw	32
  2485  03AB  1383               	bcf	3,7	;select IRP bank0
  2486  03AC  0600               	xorwf	0,w
  2487  03AD  1903               	btfsc	3,2
  2488  03AE  2BB0               	goto	u1191
  2489  03AF  2BB1               	goto	u1190
  2490  03B0                     u1191:
  2491  03B0  2BA4               	goto	l1621
  2492  03B1                     u1190:
  2493  03B1                     l1625:
  2494  03B1  0829               	movf	atoi@s,w
  2495  03B2  0084               	movwf	4
  2496  03B3  3009               	movlw	9
  2497  03B4  0600               	xorwf	0,w
  2498  03B5  1903               	btfsc	3,2
  2499  03B6  2BB8               	goto	u1201
  2500  03B7  2BB9               	goto	u1200
  2501  03B8                     u1201:
  2502  03B8  2BA4               	goto	l1621
  2503  03B9                     u1200:
  2504  03B9                     l1627:
  2505  03B9  01A7               	clrf	atoi@a
  2506  03BA  01A8               	clrf	atoi@a+1
  2507  03BB  01A6               	clrf	atoi@sign
  2508  03BC                     l1629:
  2509  03BC  0829               	movf	atoi@s,w
  2510  03BD  0084               	movwf	4
  2511  03BE  302D               	movlw	45
  2512  03BF  0600               	xorwf	0,w
  2513  03C0  1D03               	btfss	3,2
  2514  03C1  2BC3               	goto	u1211
  2515  03C2  2BC4               	goto	u1210
  2516  03C3                     u1211:
  2517  03C3  2BCD               	goto	l1633
  2518  03C4                     u1210:
  2519  03C4                     l1631:
  2520  03C4  3001               	movlw	1
  2521  03C5  00A4               	movwf	??_atoi
  2522  03C6  0824               	movf	??_atoi,w
  2523  03C7  07A6               	addwf	atoi@sign,f
  2524  03C8  3001               	movlw	1
  2525  03C9  00A4               	movwf	??_atoi
  2526  03CA  0824               	movf	??_atoi,w
  2527  03CB  07A9               	addwf	atoi@s,f
  2528  03CC  2BFF               	goto	l1641
  2529  03CD                     l1633:
  2530  03CD  0829               	movf	atoi@s,w
  2531  03CE  0084               	movwf	4
  2532  03CF  302B               	movlw	43
  2533  03D0  0600               	xorwf	0,w
  2534  03D1  1D03               	btfss	3,2
  2535  03D2  2BD4               	goto	u1221
  2536  03D3  2BD5               	goto	u1220
  2537  03D4                     u1221:
  2538  03D4  2BFF               	goto	l1641
  2539  03D5                     u1220:
  2540  03D5                     l1635:
  2541  03D5  3001               	movlw	1
  2542  03D6  00A4               	movwf	??_atoi
  2543  03D7  0824               	movf	??_atoi,w
  2544  03D8  07A9               	addwf	atoi@s,f
  2545  03D9  2BFF               	goto	l1641
  2546  03DA                     l1637:
  2547  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2548  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2549  03DC  0829               	movf	atoi@s,w
  2550  03DD  0084               	movwf	4
  2551  03DE  0828               	movf	atoi@a+1,w
  2552  03DF  00F4               	movwf	___wmul@multiplier+1
  2553  03E0  0827               	movf	atoi@a,w
  2554  03E1  00F3               	movwf	___wmul@multiplier
  2555  03E2  300A               	movlw	10
  2556  03E3  00F5               	movwf	___wmul@multiplicand
  2557  03E4  3000               	movlw	0
  2558  03E5  00F6               	movwf	___wmul@multiplicand+1
  2559  03E6  120A  118A  2510  120A  118A  	fcall	___wmul
  2560  03EB  1383               	bcf	3,7	;select IRP bank0
  2561  03EC  0800               	movf	0,w
  2562  03ED  0773               	addwf	?___wmul,w
  2563  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2564  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2565  03F0  00A4               	movwf	??_atoi
  2566  03F1  3000               	movlw	0
  2567  03F2  1803               	skipnc
  2568  03F3  3001               	movlw	1
  2569  03F4  0774               	addwf	?___wmul+1,w
  2570  03F5  00A5               	movwf	??_atoi+1
  2571  03F6  0824               	movf	??_atoi,w
  2572  03F7  3ED0               	addlw	208
  2573  03F8  00A7               	movwf	atoi@a
  2574  03F9  0825               	movf	??_atoi+1,w
  2575  03FA  1803               	skipnc
  2576  03FB  3E01               	addlw	1
  2577  03FC  3EFF               	addlw	255
  2578  03FD  00A8               	movwf	atoi@a+1
  2579  03FE  2BD5               	goto	l1635
  2580  03FF                     l1641:
  2581  03FF  0829               	movf	atoi@s,w
  2582  0400  0084               	movwf	4
  2583  0401  0800               	movf	0,w
  2584  0402  120A  118A  25D0  120A  118A  	fcall	_isdigit
  2585  0407  1803               	btfsc	3,0
  2586  0408  2C0A               	goto	u1231
  2587  0409  2C0B               	goto	u1230
  2588  040A                     u1231:
  2589  040A  2BDA               	goto	l1637
  2590  040B                     u1230:
  2591  040B                     l1643:
  2592  040B  1283               	bcf	3,5	;RP0=0, select bank0
  2593  040C  1303               	bcf	3,6	;RP1=0, select bank0
  2594  040D  0826               	movf	atoi@sign,w
  2595  040E  1903               	btfsc	3,2
  2596  040F  2C11               	goto	u1241
  2597  0410  2C12               	goto	u1240
  2598  0411                     u1241:
  2599  0411  2C1E               	goto	l1649
  2600  0412                     u1240:
  2601  0412                     l1645:
  2602  0412  0927               	comf	atoi@a,w
  2603  0413  00A4               	movwf	??_atoi
  2604  0414  0928               	comf	atoi@a+1,w
  2605  0415  00A5               	movwf	??_atoi+1
  2606  0416  0AA4               	incf	??_atoi,f
  2607  0417  1903               	skipnz
  2608  0418  0AA5               	incf	??_atoi+1,f
  2609  0419  0824               	movf	??_atoi,w
  2610  041A  00A2               	movwf	?_atoi
  2611  041B  0825               	movf	??_atoi+1,w
  2612  041C  00A3               	movwf	?_atoi+1
  2613  041D  2C22               	goto	l677
  2614  041E                     l1649:
  2615  041E  0828               	movf	atoi@a+1,w
  2616  041F  00A3               	movwf	?_atoi+1
  2617  0420  0827               	movf	atoi@a,w
  2618  0421  00A2               	movwf	?_atoi
  2619  0422                     l677:
  2620  0422  0008               	return
  2621  0423                     __end_of_atoi:
  2622                           
  2623                           	psect	text12
  2624  05D0                     __ptext12:	
  2625 ;; *************** function _isdigit *****************
  2626 ;; Defined at:
  2627 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  c               1    wreg     unsigned char 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  c               1    4[COMMON] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;		None               void
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       0       0       0       0
  2642 ;;      Locals:         2       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0
  2644 ;;      Totals:         2       0       0       0       0
  2645 ;;Total ram usage:        2 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_atoi
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function _isdigit
  2657  05D0                     _isdigit:
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2661                           ;isdigit@c stored from wreg
  2662  05D0  00F4               	movwf	isdigit@c
  2663  05D1                     l1223:
  2664  05D1  01F3               	clrf	_isdigit$808
  2665  05D2                     l1225:
  2666  05D2  303A               	movlw	58
  2667  05D3  0274               	subwf	isdigit@c,w
  2668  05D4  1803               	skipnc
  2669  05D5  2DD7               	goto	u691
  2670  05D6  2DD8               	goto	u690
  2671  05D7                     u691:
  2672  05D7  2DE0               	goto	l1231
  2673  05D8                     u690:
  2674  05D8                     l1227:
  2675  05D8  3030               	movlw	48
  2676  05D9  0274               	subwf	isdigit@c,w
  2677  05DA  1C03               	skipc
  2678  05DB  2DDD               	goto	u701
  2679  05DC  2DDE               	goto	u700
  2680  05DD                     u701:
  2681  05DD  2DE0               	goto	l1231
  2682  05DE                     u700:
  2683  05DE                     l1229:
  2684  05DE  01F3               	clrf	_isdigit$808
  2685  05DF  0AF3               	incf	_isdigit$808,f
  2686  05E0                     l1231:
  2687  05E0  0C73               	rrf	_isdigit$808,w
  2688  05E1                     l682:
  2689  05E1  0008               	return
  2690  05E2                     __end_of_isdigit:
  2691                           
  2692                           	psect	text13
  2693  0510                     __ptext13:	
  2694 ;; *************** function ___wmul *****************
  2695 ;; Defined at:
  2696 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  multiplier      2    3[COMMON] unsigned int 
  2699 ;;  multiplicand    2    5[COMMON] unsigned int 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  product         2    0[BANK0 ] unsigned int 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2    3[COMMON] unsigned int 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         4       0       0       0       0
  2712 ;;      Locals:         0       2       0       0       0
  2713 ;;      Temps:          0       0       0       0       0
  2714 ;;      Totals:         4       2       0       0       0
  2715 ;;Total ram usage:        6 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_atoi
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function ___wmul
  2727  0510                     ___wmul:
  2728  0510                     l1521:	
  2729                           ;incstack = 0
  2730                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2731                           
  2732  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2734  0512  01A0               	clrf	___wmul@product
  2735  0513  01A1               	clrf	___wmul@product+1
  2736  0514                     l1523:
  2737  0514  1C73               	btfss	___wmul@multiplier,0
  2738  0515  2D17               	goto	u1051
  2739  0516  2D18               	goto	u1050
  2740  0517                     u1051:
  2741  0517  2D20               	goto	l214
  2742  0518                     u1050:
  2743  0518                     l1525:
  2744  0518  0875               	movf	___wmul@multiplicand,w
  2745  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2746  051A  1303               	bcf	3,6	;RP1=0, select bank0
  2747  051B  07A0               	addwf	___wmul@product,f
  2748  051C  1803               	skipnc
  2749  051D  0AA1               	incf	___wmul@product+1,f
  2750  051E  0876               	movf	___wmul@multiplicand+1,w
  2751  051F  07A1               	addwf	___wmul@product+1,f
  2752  0520                     l214:
  2753  0520  3001               	movlw	1
  2754  0521                     u1065:
  2755  0521  1003               	clrc
  2756  0522  0DF5               	rlf	___wmul@multiplicand,f
  2757  0523  0DF6               	rlf	___wmul@multiplicand+1,f
  2758  0524  3EFF               	addlw	-1
  2759  0525  1D03               	skipz
  2760  0526  2D21               	goto	u1065
  2761  0527                     l1527:
  2762  0527  3001               	movlw	1
  2763  0528                     u1075:
  2764  0528  1003               	clrc
  2765  0529  0CF4               	rrf	___wmul@multiplier+1,f
  2766  052A  0CF3               	rrf	___wmul@multiplier,f
  2767  052B  3EFF               	addlw	-1
  2768  052C  1D03               	skipz
  2769  052D  2D28               	goto	u1075
  2770  052E                     l1529:
  2771  052E  0873               	movf	___wmul@multiplier,w
  2772  052F  0474               	iorwf	___wmul@multiplier+1,w
  2773  0530  1D03               	btfss	3,2
  2774  0531  2D33               	goto	u1081
  2775  0532  2D34               	goto	u1080
  2776  0533                     u1081:
  2777  0533  2D14               	goto	l1523
  2778  0534                     u1080:
  2779  0534                     l1531:
  2780  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0536  0821               	movf	___wmul@product+1,w
  2783  0537  00F4               	movwf	?___wmul+1
  2784  0538  0820               	movf	___wmul@product,w
  2785  0539  00F3               	movwf	?___wmul
  2786  053A                     l216:
  2787  053A  0008               	return
  2788  053B                     __end_of___wmul:
  2789                           
  2790                           	psect	text14
  2791  0585                     __ptext14:	
  2792 ;; *************** function _isr *****************
  2793 ;; Defined at:
  2794 ;;		line 64 in file "Lab05.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0
  2810 ;;      Temps:          3       0       0       0       0
  2811 ;;      Totals:         3       0       0       0       0
  2812 ;;Total ram usage:        3 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		Interrupt level 1
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function _isr
  2823  0585                     _isr:
  2824  0585                     i1l1117:
  2825                           
  2826                           ;Lab05.c: 66:     if (INTCONbits.RBIF == 1){
  2827  0585  1C0B               	btfss	11,0	;volatile
  2828  0586  2D88               	goto	u48_21
  2829  0587  2D89               	goto	u48_20
  2830  0588                     u48_21:
  2831  0588  2D9A               	goto	i1l82
  2832  0589                     u48_20:
  2833  0589                     i1l1119:
  2834                           
  2835                           ;Lab05.c: 67:         if (PORTBbits.RB0 == 1){
  2836  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2837  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2838  058B  1C06               	btfss	6,0	;volatile
  2839  058C  2D8E               	goto	u49_21
  2840  058D  2D8F               	goto	u49_20
  2841  058E                     u49_21:
  2842  058E  2D93               	goto	i1l1123
  2843  058F                     u49_20:
  2844  058F                     i1l1121:
  2845                           
  2846                           ;Lab05.c: 68:             contador++;
  2847  058F  3001               	movlw	1
  2848  0590  00F0               	movwf	??_isr
  2849  0591  0870               	movf	??_isr,w
  2850  0592  07FA               	addwf	_contador,f
  2851  0593                     i1l1123:
  2852                           
  2853                           ;Lab05.c: 71:         if (PORTBbits.RB1 == 1){
  2854  0593  1C86               	btfss	6,1	;volatile
  2855  0594  2D96               	goto	u50_21
  2856  0595  2D97               	goto	u50_20
  2857  0596                     u50_21:
  2858  0596  2D99               	goto	i1l1127
  2859  0597                     u50_20:
  2860  0597                     i1l1125:
  2861                           
  2862                           ;Lab05.c: 72:             contador--;
  2863  0597  3001               	movlw	1
  2864  0598  02FA               	subwf	_contador,f
  2865  0599                     i1l1127:
  2866                           
  2867                           ;Lab05.c: 75:         INTCONbits.RBIF = 0;
  2868  0599  100B               	bcf	11,0	;volatile
  2869  059A                     i1l82:
  2870  059A  0872               	movf	??_isr+2,w
  2871  059B  008A               	movwf	10
  2872  059C  0E71               	swapf	??_isr+1,w
  2873  059D  0083               	movwf	3
  2874  059E  0EFE               	swapf	btemp,f
  2875  059F  0E7E               	swapf	btemp,w
  2876  05A0  0009               	retfie
  2877  05A1                     __end_of_isr:
  2878  0002                     
  2879                           	psect	intentry
  2880  0004                     __pintentry:	
  2881                           ;incstack = 0
  2882                           ; Regs used in _isr: [wreg+status,2+status,0]
  2883                           
  2884  0004                     interrupt_function:
  2885  007E                     saved_w	set	btemp
  2886  0004  00FE               	movwf	btemp
  2887  0005  0E03               	swapf	3,w
  2888  0006  00F1               	movwf	??_isr+1
  2889  0007  080A               	movf	10,w
  2890  0008  00F2               	movwf	??_isr+2
  2891  0009  120A  118A  2D85   	ljmp	_isr
  2892                           
  2893                           	psect	functab
  2894  0020                     __pfunctab:
  2895  0020                     __fptable:
  2896  0020                     fptable:
  2897  0020  00FF               	movwf	(btemp+1)& (0+127)
  2898  0021  3000               	movlw	high fptable
  2899  0022  008A               	movwf	10
  2900  0023  087F               	movf	(btemp+1)& (0+127),w
  2901  0024  0782               	addwf	2,f
  2902  0025                     fpbase:
  2903  0025  2825               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2904  0026                     fp__putch:
  2905  0026  120A  118A  2DE2   	ljmp	_putch
  2906  0029                     __end_of__fptable:
  2907  007E                     btemp	set	126	;btemp
  2908  007E                     wtemp0	set	126
  2909                           
  2910                           	psect	config
  2911                           
  2912                           ;Config register CONFIG1 @ 0x2007
  2913                           ;	Oscillator Selection bits
  2914                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2915                           ;	Watchdog Timer Enable bit
  2916                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2917                           ;	Power-up Timer Enable bit
  2918                           ;	PWRTE = OFF, PWRT disabled
  2919                           ;	RE3/MCLR pin function select bit
  2920                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2921                           ;	Code Protection bit
  2922                           ;	CP = OFF, Program memory code protection is disabled
  2923                           ;	Data Code Protection bit
  2924                           ;	CPD = OFF, Data memory code protection is disabled
  2925                           ;	Brown Out Reset Selection bits
  2926                           ;	BOREN = OFF, BOR disabled
  2927                           ;	Internal External Switchover bit
  2928                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2929                           ;	Fail-Safe Clock Monitor Enabled bit
  2930                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2931                           ;	Low Voltage Programming Enable bit
  2932                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2933                           ;	In-Circuit Debugger Mode bit
  2934                           ;	DEBUG = 0x1, unprogrammed default
  2935  2007                     	org	8199
  2936  2007  20D4               	dw	8404
  2937                           
  2938                           ;Config register CONFIG2 @ 0x2008
  2939                           ;	Brown-out Reset Selection bit
  2940                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2941                           ;	Flash Program Memory Self Write Enable bits
  2942                           ;	WRT = OFF, Write protection off
  2943  2008                     	org	8200
  2944  2008  3FFF               	dw	16383

Data Sizes:
    Strings     144
    Constant    10
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     76      78
    BANK1            80      5       9
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[25]), STR_7(CODE[21]), 
		 -> STR_6(CODE[20]), STR_5(CODE[30]), STR_4(CODE[27]), STR_3(CODE[3]), 
		 -> STR_2(CODE[21]), STR_1(CODE[27]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_8(CODE[25]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[30]), 
		 -> STR_4(CODE[27]), STR_3(CODE[3]), STR_2(CODE[21]), STR_1(CODE[27]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S810__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S810__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _Eusart->_concat
    _printf->__doprnt
    _concat->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Eusart

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7312
                             _Eusart
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Eusart                                               5     5      0    7312
                                              0 BANK1      5     5      0
                             _concat
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2811
                                             20 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _concat                                              47    43      4    4501
                                             29 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2851
                                             20 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2336
                                              9 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              3 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     754
                                              2 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Eusart
     _concat
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      62       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       9       7       11.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      62      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 16 18:54:37 2021

                      pc 0002                       l93 050F                       l96 05E2  
                     l99 05EA                       fsr 0004      ___wmul@multiplicand 0075  
                    l110 01B5                      l103 019A                      l125 026F  
                    l214 0520                      l118 01D6                      l216 053A  
                    l128 04A5                      l486 0468                      l496 04E1  
                    l736 0584                      l729 015E                      l745 0563  
                    l682 05E1                      l691 05BB                      l677 0422  
                    u510 05E8                      u511 05E7                      u610 04C0  
                    u611 04BF                      u700 05DE                      u620 04CA  
                    u701 05DD                      u621 04C9                      u605 04B2  
                    u640 04DD                      u641 04DC                      u625 04C6  
                    u810 054D                      u635 04D1                      u811 054C  
                    u820 0563                      u821 0562                      u590 04AE  
                    u591 04AD                      u690 05D8                      u691 05D7  
                    u980 042D                      u981 042C                      u995 0431  
                    _ada 00A8                      _dec 006C                      _cen 006D  
                    _con 0078                      _isr 0585                      _var 00A7  
                    fsr0 0004                      _uni 0079                      indf 0000  
                   l1201 04D0                     l1203 04D7                     l1205 04DD  
                   l1231 05E0                     l1223 05D1                     l1225 05D2  
                   l1321 0541                     l1401 04F6                     l1227 05D8  
                   l1155 05E2                     l1323 0545                     l1411 04FB  
                   l1403 04F7                     l1229 05DE                     l1501 0430  
                   l1157 05E8                     l1325 054E                     l1421 0502  
                   l1413 04FC                     l1405 04F8                     l1511 0456  
                   l1503 0437                     l1191 04B1                     l1327 0556  
                   l1319 053C                     l1423 0507                     l1415 04FD  
                   l1407 04F9                     l1521 0510                     l1513 0457  
                   l1505 043B                     l1193 04B8                     l1425 050A  
                   l1417 04FE                     l1409 04FA                     l1531 0534  
                   l1523 0514                     l1515 045E                     l1507 043F  
                   l1195 04BC                     l1187 04A6                     l1611 056C  
                   l1427 050B                     l1419 04FF                     l1525 0518  
                   l1621 03A4                     l1509 0450                     l1517 0464  
                   l1197 04C0                     l1189 04AE                     l1541 003B  
                   l1613 0570                     l1429 050C                     l1527 0527  
                   l1631 03C4                     l1623 03A8                     l1199 04CA  
                   l1551 005A                     l1543 004A                     l1535 002C  
                   l1615 057E                     l1607 0567                     l1703 01F1  
                   l1391 04EF                     l1383 04E2                     l1711 05BC  
                   l1529 052E                     l1641 03FF                     l1633 03CD  
                   l1625 03B1                     l1561 0092                     l1553 0077  
                   l1545 0052                     l1537 002D                     l1609 056B  
                   l1705 01F7                     l1393 04F0                     l1385 04E9  
                   l1713 05C1                     l1643 040B                     l1635 03D5  
                   l1627 03B9                     l1619 03A3                     l1571 00B0  
                   l1555 0085                     l1539 0033                     l1547 0059  
                   l1707 024F                     l1395 04F1                     l1387 04EB  
                   l1715 05C7                     l1645 0412                     l1637 03DA  
                   l1629 03BC                     l1581 00DD                     l1573 00BA  
                   l1557 0089                     l1653 05A4                     l1709 025D  
                   l1397 04F4                     l1389 04EC                     l1495 0423  
                   l1591 012F                     l1575 00C0                     l1583 00E3  
                   l1567 0094                     l1559 008D                     l1663 0469  
                   l1655 05A5                     l1399 04F5                     l1649 041E  
                   l1497 0427                     l1593 0137                     l1585 00EA  
                   l1577 00C8                     l1737 006C                     l1665 0489  
                   l1657 05A9                     l1681 0194                     l1673 015F  
                   l1499 042D                     l1587 011A                     l1595 013D  
                   l1579 00D5                     l1667 0495                     l1659 05AD  
                   l1683 01A0                     l1675 016B                     l1589 0122  
                   l1597 0148                     l1669 04A1                     l1693 01CA  
                   l1685 01A9                     l1677 0179                     l1599 015C  
                   l1695 01D0                     l1687 01AF                     l1679 018E  
                   l1697 01DC                     l1689 01BB                     l1699 01EB  
                   ?_isr 0070                     STR_1 032E                     STR_2 0377  
                   STR_3 035F                     STR_4 032E                     STR_5 0310  
                   STR_6 038C                     STR_7 0362                     STR_8 0349  
                   STR_9 035F                     u1000 043F                     u1001 043E  
                   u1020 0450                     u1100 003B                     u1021 044F  
                   u1101 003A                     u1110 0089                     u1015 0440  
                   u1111 0088                     u1200 03B9                     u1040 0464  
                   u1120 00AF                     u1201 03B8                     u1041 0463  
                   u1025 044C                     u1121 00AE                     u1050 0518  
                   u1210 03C4                     u1130 00BA                     u1051 0517  
                   u1211 03C3                     u1035 0458                     u1131 00B9  
                   u1220 03D5                     u1140 00C0                     u1300 01DC  
                   u1221 03D4                     u1141 00BF                     u1125 00AB  
                   u1301 01DB                     u1230 040B                     u1150 00C8  
                   u1310 01EB                     u1231 040A                     u1151 00C7  
                   u1311 01EA                     u1080 0534                     u1240 0412  
                   u1160 0122                     u1320 01F1                     u1081 0533  
                   u1065 0521                     u1241 0411                     u1161 0121  
                   u1321 01F0                     u1170 0148                     u1090 0033  
                   u1330 01F7                     u1250 01A0                     u1075 0528  
                   u1171 0147                     u1091 0032                     u1331 01F6  
                   u1251 019F                     u1180 015C                     u1260 01AF  
                   u1181 015B                     u1261 01AE                     u1190 03B1  
                   u1270 01BB                     u1191 03B0                     u1271 01BA  
                   u1280 01CA                     u1281 01C9                     u1290 01D0  
                   u1291 01CF                     u1347 0173                     u1357 0257  
                   _RCIF 0065                     i1l82 059A                     _TXIF 0064  
                   _atoi 03A0                     _main 05BC                     _full 00A5  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_atoi 0022                    ?_main 0070                    STR_10 035F  
                  _ANSEL 0188          __end_of___lwdiv 0469          __end_of___lwmod 04E2  
                  _RCREG 001A                    u50_20 0597                    u50_21 0596  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    u48_20 0589                    u48_21 0588  
        __end_of__doprnt 015F                    u49_20 058F                    u49_21 058E  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019          __end_of_dpowers 0310          __end_of_isdigit 05E2  
                  atoi@a 0027                    _setup 04E2                    atoi@s 0029  
                  _putch 05E2                    fpbase 0025                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 0585  
        __initialization 000F             __end_of_atoi 0423             __end_of_main 05D0  
                 ??_atoi 0024                   ??_main 0078                   ?_setup 0070  
                 ?_putch 0073                   _ANSELH 0189                   i1l1121 058F  
                 i1l1123 0593                   i1l1125 0597                   i1l1117 0585  
                 i1l1127 0599                   i1l1119 0589                   _SPBRGH 009A  
       __end_of__fptable 0029                   _Eusart 015F                   ___wmul 0510  
              ??___lwdiv 0077                ??___lwmod 0027                   _concat 0469  
              ??__doprnt 002B             __doprnt@flag 002E                   _printf 05A1  
           __doprnt@prec 002F                   _strcat 053B                   fptable 0020  
                 fptotal 0002                ??_isdigit 0073                   saved_w 007E  
              ??_sprintf 0037  __end_of__initialization 001C           __pcstackCOMMON 0070  
          __end_of_setup 0510            __end_of_putch 05EB               __doprnt@ap 002A  
             __doprnt@pb 0033                  ??_setup 0073                  ??_putch 0074  
             __pbssBANK0 006C               __pbssBANK1 00A5                  ?_Eusart 0070  
             __pmaintext 05BC                  ?___wmul 0073               __pintentry 0004  
                ?_concat 003D                  ?_printf 0034                  ?_strcat 0073  
             __stringtab 0300          __size_of_Eusart 0111          __size_of___wmul 002B  
                ___lwdiv 0423                  ___lwmod 04A6          __size_of_concat 003D  
                __doprnt 0029                  __ptext1 04E2                  __ptext2 015F  
                __ptext3 05A1                  __ptext4 0469                  __ptext5 053B  
                __ptext6 0564                  __ptext7 0029                  __ptext8 05E2  
                __ptext9 04A6          __size_of_printf 001B          __size_of_strcat 0029  
                _dpowers 0306                  _isdigit 05D0             __size_of_isr 001C  
                concat@a 003D                  concat@b 003F                  concat@c 006A  
                _sprintf 0564     end_of_initialization 001C                _RCSTAbits 0018  
                printf@f 0039                _PORTBbits 0006                _TXSTAbits 0098  
         __end_of_Eusart 0270           __end_of___wmul 053B              _BAUDCTLbits 0187  
         __end_of_concat 04A6           __end_of_printf 05BC           __end_of_strcat 0564  
    start_initialization 000F              __end_of_isr 05A1                 ??_Eusart 00A0  
               ??___wmul 0077              __doprnt@val 0030                 ??_concat 0041  
               ??_printf 0036                 ??_strcat 0074              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of__fptable 0009                __doprnt@c 0032                __doprnt@f 0029  
       ___lwdiv@dividend 0075                __pfunctab 0020                 ?___lwdiv 0073  
               ?___lwmod 0023                 ?__doprnt 0029                __pstrings 0300  
               ?_isdigit 0070         ___lwdiv@quotient 0021                 ?_sprintf 0034  
         __size_of_setup 002E           __size_of_putch 0009        interrupt_function 0004  
         ___wmul@product 0020                 _IOCBbits 0096              __stringbase 0305  
      ___wmul@multiplier 0073         __size_of___lwdiv 0046         __size_of___lwmod 003C  
       __size_of__doprnt 0136       __end_of__stringtab 0306              _isdigit$808 0073  
               __fptable 0020               strcat@from 0073         __size_of_isdigit 0012  
        ___lwdiv@divisor 0073          ___lwdiv@counter 0020                 __ptext10 0423  
               __ptext11 03A0                 __ptext12 05D0                 __ptext13 0510  
               __ptext14 0585                 _contador 007A         __size_of_sprintf 0021  
          __size_of_atoi 0083            __size_of_main 0014                 concat@s1 0056  
               concat@s2 0042                 atoi@sign 0026                 fp__putch 0026  
              putch@data 0073               _INTCONbits 000B                 isdigit@c 0074  
               intlevel1 0020                sprintf@ap 003A                sprintf@pb 003B  
              sprintf@wh 0039         ___lwmod@dividend 0025                stringcode 0300  
             _OSCCONbits 008F                 printf@ap 0038                 printf@pb 003A  
               sprintf@f 0034                 strcat@cp 0076                 strcat@to 0075  
        ___lwmod@divisor 0023          ___lwmod@counter 0028                 stringdir 0300  
               stringtab 0300  
