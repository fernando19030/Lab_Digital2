

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 19 20:24:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	idataBANK0
   291  012C                     __pidataBANK0:
   292                           
   293                           ;initializer for _tabla
   294  012C  343F               	retlw	63
   295  012D  3406               	retlw	6
   296  012E  345B               	retlw	91
   297  012F  344F               	retlw	79
   298  0130  3466               	retlw	102
   299  0131  346D               	retlw	109
   300  0132  347D               	retlw	125
   301  0133  3407               	retlw	7
   302  0134  347F               	retlw	127
   303  0135  3467               	retlw	103
   304  0136  3477               	retlw	119
   305  0137  347C               	retlw	124
   306  0138  3439               	retlw	57
   307  0139  345E               	retlw	94
   308  013A  3479               	retlw	121
   309  013B  3471               	retlw	113
   310  0009                     _PORTE	set	9
   311  0008                     _PORTD	set	8
   312  0006                     _PORTB	set	6
   313  0005                     _PORTA	set	5
   314  0009                     _PORTEbits	set	9
   315  001E                     _ADRESH	set	30
   316  001F                     _ADCON0bits	set	31
   317  000C                     _PIR1bits	set	12
   318  0007                     _PORTC	set	7
   319  0001                     _TMR0	set	1
   320  000B                     _INTCONbits	set	11
   321  0006                     _PORTBbits	set	6
   322  0031                     _RB1	set	49
   323  0030                     _RB0	set	48
   324  0058                     _RBIF	set	88
   325  005A                     _T0IF	set	90
   326  009F                     _ADCON1bits	set	159
   327  0081                     _OPTION_REGbits	set	129
   328  0096                     _IOCBbits	set	150
   329  008C                     _PIE1bits	set	140
   330  008F                     _OSCCONbits	set	143
   331  0089                     _TRISE	set	137
   332  0085                     _TRISA	set	133
   333  0088                     _TRISD	set	136
   334  0087                     _TRISC	set	135
   335  0086                     _TRISB	set	134
   336  0189                     _ANSELH	set	393
   337  0188                     _ANSEL	set	392
   338                           
   339                           	psect	cinit
   340  0011                     start_initialization:	
   341                           ; #config settings
   342                           
   343  0011                     __initialization:
   344                           
   345                           ; Initialize objects allocated to BANK0
   346  0011  1383               	bcf	3,7	;select IRP bank0
   347  0012  3030               	movlw	low (__pdataBANK0+16)
   348  0013  00FD               	movwf	btemp+-1
   349  0014  3001               	movlw	high __pidataBANK0
   350  0015  00FE               	movwf	btemp
   351  0016  302C               	movlw	low __pidataBANK0
   352  0017  00FF               	movwf	btemp+1
   353  0018  3020               	movlw	low __pdataBANK0
   354  0019  0084               	movwf	4
   355  001A  120A  118A  211D  120A  118A  	fcall	init_ram0
   356                           
   357                           ; Clear objects allocated to COMMON
   358  001F  01F6               	clrf	__pbssCOMMON& (0+127)
   359  0020  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   360  0021  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   361  0022  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   362  0023  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   363  0024                     end_of_initialization:	
   364                           ;End of C runtime variable initialization code
   365                           
   366  0024                     __end_of__initialization:
   367  0024  0183               	clrf	3
   368  0025  120A  118A  28D6   	ljmp	_main	;jump to C main() function
   369                           
   370                           	psect	bssCOMMON
   371  0076                     __pbssCOMMON:
   372  0076                     _parte_alta:
   373  0076                     	ds	1
   374  0077                     _parte_baja:
   375  0077                     	ds	1
   376  0078                     _ADC:
   377  0078                     	ds	1
   378  0079                     _contador:
   379  0079                     	ds	1
   380  007A                     _flags:
   381  007A                     	ds	1
   382                           
   383                           	psect	dataBANK0
   384  0020                     __pdataBANK0:
   385  0020                     _tabla:
   386  0020                     	ds	16
   387                           
   388                           	psect	inittext
   389  0119                     init_fetch0:	
   390                           ;	Called with low address in FSR and high address in W
   391                           
   392  0119  087E               	movf	btemp,w
   393  011A  008A               	movwf	10
   394  011B  087F               	movf	btemp+1,w
   395  011C  0082               	movwf	2
   396  011D                     init_ram0:	
   397                           ;Called with:
   398                           ;	high address of idata address in btemp 
   399                           ;	low address of idata address in btemp+1 
   400                           ;	low address of data in FSR
   401                           ;	high address + 1 of data in btemp-1
   402                           
   403  011D  120A  118A  2119  120A  118A  	fcall	init_fetch0
   404  0122  0080               	movwf	0
   405  0123  0A84               	incf	4,f
   406  0124  0804               	movf	4,w
   407  0125  067D               	xorwf	btemp+-1,w
   408  0126  1903               	btfsc	3,2
   409  0127  3400               	retlw	0
   410  0128  0AFF               	incf	btemp+1,f
   411  0129  1903               	btfsc	3,2
   412  012A  0AFE               	incf	btemp,f
   413  012B  291D               	goto	init_ram0
   414                           
   415                           	psect	cstackCOMMON
   416  0070                     __pcstackCOMMON:
   417  0070                     ?_segmentos:
   418  0070                     ??_segmentos:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_transfer_ADC:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_transfer_ADC:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_setup:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_nibbles:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_isr:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_main:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     segmentos@dato:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     transfer_ADC@dato:
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	1
   449  0072                     ??_isr:
   450                           
   451                           ; 1 bytes @ 0x2
   452  0072                     	ds	4
   453                           
   454                           	psect	cstackBANK0
   455  0030                     __pcstackBANK0:
   456  0030                     ??_setup:
   457  0030                     ??_nibbles:	
   458                           ; 1 bytes @ 0x0
   459                           
   460                           
   461                           ; 1 bytes @ 0x0
   462  0030                     	ds	2
   463  0032                     nibbles@dato:
   464                           
   465                           ; 1 bytes @ 0x2
   466  0032                     	ds	1
   467  0033                     ??_main:
   468                           
   469                           ; 1 bytes @ 0x3
   470  0033                     	ds	1
   471                           
   472                           	psect	maintext
   473  00D6                     __pmaintext:	
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 130 in file "Lab01.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B00/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          0       1       0       0       0
   496 ;;      Totals:         0       1       0       0       0
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels required when called:    3
   499 ;; This function calls:
   500 ;;		_nibbles
   501 ;;		_setup
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _main
   509  00D6                     _main:
   510  00D6                     l1076:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   513                           
   514                           
   515                           ;Lab01.c: 131:     setup();
   516  00D6  120A  118A  2086  120A  118A  	fcall	_setup
   517  00DB                     l1078:
   518                           
   519                           ;Lab01.c: 132:     ADCON0bits.GO = 1;
   520  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   521  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   522  00DD  149F               	bsf	31,1	;volatile
   523  00DE                     l1080:
   524                           
   525                           ;Lab01.c: 139:     {;Lab01.c: 140:         if (ADCON0bits.GO == 0){
   526  00DE  189F               	btfsc	31,1	;volatile
   527  00DF  28E1               	goto	u151
   528  00E0  28E2               	goto	u150
   529  00E1                     u151:
   530  00E1  28EC               	goto	l1086
   531  00E2                     u150:
   532  00E2                     l1082:
   533                           
   534                           ;Lab01.c: 141:             _delay((unsigned long)((200)*(8000000/4000000.0)));
   535  00E2  3084               	movlw	132
   536  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   537  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   538  00E5  00B3               	movwf	??_main
   539  00E6                     u177:
   540  00E6  0BB3               	decfsz	??_main,f
   541  00E7  28E6               	goto	u177
   542  00E8  0000               	nop
   543  00E9                     l1084:
   544                           
   545                           ;Lab01.c: 142:             ADCON0bits.GO = 1;
   546  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   547  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   548  00EB  149F               	bsf	31,1	;volatile
   549  00EC                     l1086:
   550                           
   551                           ;Lab01.c: 145:         nibbles(ADC);
   552  00EC  0878               	movf	_ADC,w
   553  00ED  120A  118A  2103  120A  118A  	fcall	_nibbles
   554  00F2                     l1088:
   555                           
   556                           ;Lab01.c: 147:         if (ADC > contador) {
   557  00F2  0878               	movf	_ADC,w
   558  00F3  0279               	subwf	_contador,w
   559  00F4  1803               	skipnc
   560  00F5  28F7               	goto	u161
   561  00F6  28F8               	goto	u160
   562  00F7                     u161:
   563  00F7  28FC               	goto	l98
   564  00F8                     u160:
   565  00F8                     l1090:
   566                           
   567                           ;Lab01.c: 148:             PORTEbits.RE0 = 1;
   568  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   569  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   570  00FA  1409               	bsf	9,0	;volatile
   571                           
   572                           ;Lab01.c: 149:         }
   573  00FB  28DE               	goto	l1080
   574  00FC                     l98:	
   575                           ;Lab01.c: 151:         else {
   576                           
   577                           
   578                           ;Lab01.c: 152:             PORTEbits.RE0 = 0;
   579  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   580  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   581  00FE  1009               	bcf	9,0	;volatile
   582  00FF  28DE               	goto	l1080
   583  0100  120A  118A  280E   	ljmp	start
   584  0103                     __end_of_main:
   585                           
   586                           	psect	text1
   587  0086                     __ptext1:	
   588 ;; *************** function _setup *****************
   589 ;; Defined at:
   590 ;;		line 165 in file "Lab01.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0
   606 ;;      Temps:          0       1       0       0       0
   607 ;;      Totals:         0       1       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    2
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _setup
   620  0086                     _setup:
   621  0086                     l992:	
   622                           ;incstack = 0
   623                           ; Regs used in _setup: [wreg+status,2+status,0]
   624                           
   625                           
   626                           ;Lab01.c: 167:     ANSEL = 0X01;
   627  0086  3001               	movlw	1
   628  0087  1683               	bsf	3,5	;RP0=1, select bank3
   629  0088  1703               	bsf	3,6	;RP1=1, select bank3
   630  0089  0088               	movwf	8	;volatile
   631  008A                     l994:
   632                           
   633                           ;Lab01.c: 168:     ANSELH = 0X00;
   634  008A  0189               	clrf	9	;volatile
   635  008B                     l996:
   636                           
   637                           ;Lab01.c: 170:     TRISB = 0X03;
   638  008B  3003               	movlw	3
   639  008C  1683               	bsf	3,5	;RP0=1, select bank1
   640  008D  1303               	bcf	3,6	;RP1=0, select bank1
   641  008E  0086               	movwf	6	;volatile
   642                           
   643                           ;Lab01.c: 171:     TRISC = 0X00;
   644  008F  0187               	clrf	7	;volatile
   645                           
   646                           ;Lab01.c: 172:     TRISD = 0X00;
   647  0090  0188               	clrf	8	;volatile
   648  0091                     l998:
   649                           
   650                           ;Lab01.c: 173:     TRISA = 0X01;
   651  0091  3001               	movlw	1
   652  0092  0085               	movwf	5	;volatile
   653  0093                     l1000:
   654                           
   655                           ;Lab01.c: 174:     TRISE = 0X00;
   656  0093  0189               	clrf	9	;volatile
   657  0094                     l1002:
   658                           
   659                           ;Lab01.c: 176:     PORTA = 0X00;
   660  0094  1283               	bcf	3,5	;RP0=0, select bank0
   661  0095  1303               	bcf	3,6	;RP1=0, select bank0
   662  0096  0185               	clrf	5	;volatile
   663  0097                     l1004:
   664                           
   665                           ;Lab01.c: 177:     PORTB = 0X00;
   666  0097  0186               	clrf	6	;volatile
   667  0098                     l1006:
   668                           
   669                           ;Lab01.c: 178:     PORTC = 0X00;
   670  0098  0187               	clrf	7	;volatile
   671  0099                     l1008:
   672                           
   673                           ;Lab01.c: 179:     PORTD = 0X00;
   674  0099  0188               	clrf	8	;volatile
   675  009A                     l1010:
   676                           
   677                           ;Lab01.c: 180:     PORTE = 0X00;
   678  009A  0189               	clrf	9	;volatile
   679  009B                     l1012:
   680                           
   681                           ;Lab01.c: 183:     OSCCONbits.IRCF2 = 1;
   682  009B  1683               	bsf	3,5	;RP0=1, select bank1
   683  009C  1303               	bcf	3,6	;RP1=0, select bank1
   684  009D  170F               	bsf	15,6	;volatile
   685  009E                     l1014:
   686                           
   687                           ;Lab01.c: 184:     OSCCONbits.IRCF1 = 1;
   688  009E  168F               	bsf	15,5	;volatile
   689  009F                     l1016:
   690                           
   691                           ;Lab01.c: 185:     OSCCONbits.IRCF0 = 1;
   692  009F  160F               	bsf	15,4	;volatile
   693  00A0                     l1018:
   694                           
   695                           ;Lab01.c: 186:     OSCCONbits.SCS = 1;
   696  00A0  140F               	bsf	15,0	;volatile
   697  00A1                     l1020:
   698                           
   699                           ;Lab01.c: 189:     INTCONbits.GIE = 1;
   700  00A1  178B               	bsf	11,7	;volatile
   701  00A2                     l1022:
   702                           
   703                           ;Lab01.c: 190:     INTCONbits.PEIE = 1;
   704  00A2  170B               	bsf	11,6	;volatile
   705  00A3                     l1024:
   706                           
   707                           ;Lab01.c: 191:     INTCONbits.T0IE = 1;
   708  00A3  168B               	bsf	11,5	;volatile
   709  00A4                     l1026:
   710                           
   711                           ;Lab01.c: 192:     INTCONbits.RBIE = 1;
   712  00A4  158B               	bsf	11,3	;volatile
   713  00A5                     l1028:
   714                           
   715                           ;Lab01.c: 193:     PIE1bits.ADIE = 1;
   716  00A5  170C               	bsf	12,6	;volatile
   717  00A6                     l1030:
   718                           
   719                           ;Lab01.c: 195:     INTCONbits.T0IF = 0;
   720  00A6  110B               	bcf	11,2	;volatile
   721  00A7                     l1032:
   722                           
   723                           ;Lab01.c: 196:     INTCONbits.RBIF = 0;
   724  00A7  100B               	bcf	11,0	;volatile
   725  00A8                     l1034:
   726                           
   727                           ;Lab01.c: 197:     PIR1bits.ADIF = 0;
   728  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   729  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   730  00AA  130C               	bcf	12,6	;volatile
   731  00AB                     l1036:
   732                           
   733                           ;Lab01.c: 200:     IOCBbits.IOCB0 = 1;
   734  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   735  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   736  00AD  1416               	bsf	22,0	;volatile
   737  00AE                     l1038:
   738                           
   739                           ;Lab01.c: 201:     IOCBbits.IOCB1 = 1;
   740  00AE  1496               	bsf	22,1	;volatile
   741  00AF                     l1040:
   742                           
   743                           ;Lab01.c: 204:     OPTION_REGbits.PSA = 0;
   744  00AF  1181               	bcf	1,3	;volatile
   745  00B0                     l1042:
   746                           
   747                           ;Lab01.c: 205:     OPTION_REGbits.T0CS = 0;
   748  00B0  1281               	bcf	1,5	;volatile
   749  00B1                     l1044:
   750                           
   751                           ;Lab01.c: 206:     OPTION_REGbits.PS2 = 1;
   752  00B1  1501               	bsf	1,2	;volatile
   753  00B2                     l1046:
   754                           
   755                           ;Lab01.c: 207:     OPTION_REGbits.PS1 = 1;
   756  00B2  1481               	bsf	1,1	;volatile
   757  00B3                     l1048:
   758                           
   759                           ;Lab01.c: 208:     OPTION_REGbits.PS0 = 1;
   760  00B3  1401               	bsf	1,0	;volatile
   761  00B4                     l1050:
   762                           
   763                           ;Lab01.c: 209:     TMR0 = 217;
   764  00B4  30D9               	movlw	217
   765  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   766  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   767  00B7  0081               	movwf	1	;volatile
   768  00B8                     l1052:
   769                           
   770                           ;Lab01.c: 212:     ADCON1bits.ADFM = 0;
   771  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   772  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   773  00BA  139F               	bcf	31,7	;volatile
   774  00BB                     l1054:
   775                           
   776                           ;Lab01.c: 213:     ADCON1bits.VCFG0 = 0;
   777  00BB  121F               	bcf	31,4	;volatile
   778  00BC                     l1056:
   779                           
   780                           ;Lab01.c: 214:     ADCON1bits.VCFG1 = 0;
   781  00BC  129F               	bcf	31,5	;volatile
   782  00BD                     l1058:
   783                           
   784                           ;Lab01.c: 216:     ADCON0bits.ADCS1 = 1;
   785  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   786  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   787  00BF  179F               	bsf	31,7	;volatile
   788  00C0                     l1060:
   789                           
   790                           ;Lab01.c: 217:     ADCON0bits.CHS = 0;
   791  00C0  30C3               	movlw	-61
   792  00C1  059F               	andwf	31,f	;volatile
   793  00C2                     l1062:
   794                           
   795                           ;Lab01.c: 218:     _delay((unsigned long)((200)*(8000000/4000000.0)));
   796  00C2  3084               	movlw	132
   797  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   798  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   799  00C5  00B0               	movwf	??_setup
   800  00C6                     u187:
   801  00C6  0BB0               	decfsz	??_setup,f
   802  00C7  28C6               	goto	u187
   803  00C8  0000               	nop
   804  00C9                     l1064:
   805                           
   806                           ;Lab01.c: 219:     ADCON0bits.ADON = 1;
   807  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   808  00CA  1303               	bcf	3,6	;RP1=0, select bank0
   809  00CB  141F               	bsf	31,0	;volatile
   810  00CC                     l1066:
   811                           
   812                           ;Lab01.c: 220:     _delay((unsigned long)((200)*(8000000/4000000.0)));
   813  00CC  3084               	movlw	132
   814  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   815  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   816  00CF  00B0               	movwf	??_setup
   817  00D0                     u197:
   818  00D0  0BB0               	decfsz	??_setup,f
   819  00D1  28D0               	goto	u197
   820  00D2  0000               	nop
   821  00D3                     l1068:
   822                           
   823                           ;Lab01.c: 223:     flags = 0X00;
   824  00D3  01FA               	clrf	_flags
   825  00D4                     l1070:
   826                           
   827                           ;Lab01.c: 224:     contador = 0X00;
   828  00D4  01F9               	clrf	_contador
   829  00D5                     l105:
   830  00D5  0008               	return
   831  00D6                     __end_of_setup:
   832                           
   833                           	psect	text2
   834  0103                     __ptext2:	
   835 ;; *************** function _nibbles *****************
   836 ;; Defined at:
   837 ;;		line 101 in file "Librerias.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  dato            1    wreg     unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  dato            1    2[BANK0 ] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       1       0       0       0
   853 ;;      Temps:          0       2       0       0       0
   854 ;;      Totals:         0       3       0       0       0
   855 ;;Total ram usage:        3 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    2
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _nibbles
   867  0103                     _nibbles:
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _nibbles: [wreg+status,2+status,0]
   871                           ;nibbles@dato stored from wreg
   872  0103  1283               	bcf	3,5	;RP0=0, select bank0
   873  0104  1303               	bcf	3,6	;RP1=0, select bank0
   874  0105  00B2               	movwf	nibbles@dato
   875  0106                     l1072:
   876                           
   877                           ;Librerias.c: 102:     parte_baja = dato & 0x0F;
   878  0106  0832               	movf	nibbles@dato,w
   879  0107  390F               	andlw	15
   880  0108  00B0               	movwf	??_nibbles
   881  0109  0830               	movf	??_nibbles,w
   882  010A  00F7               	movwf	_parte_baja
   883  010B                     l1074:
   884                           
   885                           ;Librerias.c: 103:     parte_alta = (dato >> 4) & 0x0F;
   886  010B  0832               	movf	nibbles@dato,w
   887  010C  00B0               	movwf	??_nibbles
   888  010D  3004               	movlw	4
   889  010E                     u145:
   890  010E  1003               	clrc
   891  010F  0CB0               	rrf	??_nibbles,f
   892  0110  3EFF               	addlw	-1
   893  0111  1D03               	skipz
   894  0112  290E               	goto	u145
   895  0113  0830               	movf	??_nibbles,w
   896  0114  390F               	andlw	15
   897  0115  00B1               	movwf	??_nibbles+1
   898  0116  0831               	movf	??_nibbles+1,w
   899  0117  00F6               	movwf	_parte_alta
   900  0118                     l163:
   901  0118  0008               	return
   902  0119                     __end_of_nibbles:
   903                           
   904                           	psect	text3
   905  0028                     __ptext3:	
   906 ;; *************** function _isr *****************
   907 ;; Defined at:
   908 ;;		line 72 in file "Lab01.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0
   924 ;;      Temps:          4       0       0       0       0
   925 ;;      Totals:         4       0       0       0       0
   926 ;;Total ram usage:        4 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    1
   929 ;; This function calls:
   930 ;;		_segmentos
   931 ;;		_transfer_ADC
   932 ;; This function is called by:
   933 ;;		Interrupt level 1
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function _isr
   939  0028                     _isr:
   940  0028                     i1l846:
   941                           
   942                           ;Lab01.c: 75:     if (T0IF == 1)
   943  0028  1D0B               	btfss	11,2	;volatile
   944  0029  282B               	goto	u2_21
   945  002A  282C               	goto	u2_20
   946  002B                     u2_21:
   947  002B  284C               	goto	i1l864
   948  002C                     u2_20:
   949  002C                     i1l848:
   950                           
   951                           ;Lab01.c: 76:     {;Lab01.c: 77:         PORTBbits.RB2 = 0;
   952  002C  1283               	bcf	3,5	;RP0=0, select bank0
   953  002D  1303               	bcf	3,6	;RP1=0, select bank0
   954  002E  1106               	bcf	6,2	;volatile
   955                           
   956                           ;Lab01.c: 78:         PORTBbits.RB3 = 0;
   957  002F  1186               	bcf	6,3	;volatile
   958                           
   959                           ;Lab01.c: 80:         INTCONbits.T0IF = 0;
   960  0030  110B               	bcf	11,2	;volatile
   961  0031                     i1l850:
   962                           
   963                           ;Lab01.c: 81:         TMR0 = 217;
   964  0031  30D9               	movlw	217
   965  0032  0081               	movwf	1	;volatile
   966  0033                     i1l852:
   967                           
   968                           ;Lab01.c: 83:         if (flags == 1) {
   969  0033  037A               	decf	_flags,w
   970  0034  1D03               	btfss	3,2
   971  0035  2837               	goto	u3_21
   972  0036  2838               	goto	u3_20
   973  0037                     u3_21:
   974  0037  2842               	goto	i1l84
   975  0038                     u3_20:
   976  0038                     i1l854:
   977                           
   978                           ;Lab01.c: 84:            PORTBbits.RB2 = 0;
   979  0038  1106               	bcf	6,2	;volatile
   980                           
   981                           ;Lab01.c: 85:            PORTBbits.RB3 = 1;
   982  0039  1586               	bsf	6,3	;volatile
   983  003A                     i1l856:
   984                           
   985                           ;Lab01.c: 86:            segmentos(parte_baja);
   986  003A  0877               	movf	_parte_baja,w
   987  003B  120A  118A  213C  120A  118A  	fcall	_segmentos
   988  0040                     i1l858:
   989                           
   990                           ;Lab01.c: 87:            flags = 0;
   991  0040  01FA               	clrf	_flags
   992                           
   993                           ;Lab01.c: 88:         }
   994  0041  284C               	goto	i1l864
   995  0042                     i1l84:	
   996                           ;Lab01.c: 90:         else {
   997                           
   998                           
   999                           ;Lab01.c: 91:            PORTBbits.RB3 = 0;
  1000  0042  1186               	bcf	6,3	;volatile
  1001                           
  1002                           ;Lab01.c: 92:            PORTBbits.RB2 = 1;
  1003  0043  1506               	bsf	6,2	;volatile
  1004  0044                     i1l860:
  1005                           
  1006                           ;Lab01.c: 93:            segmentos(parte_alta);
  1007  0044  0876               	movf	_parte_alta,w
  1008  0045  120A  118A  213C  120A  118A  	fcall	_segmentos
  1009  004A                     i1l862:
  1010                           
  1011                           ;Lab01.c: 94:            flags = 1;
  1012  004A  01FA               	clrf	_flags
  1013  004B  0AFA               	incf	_flags,f
  1014  004C                     i1l864:
  1015                           
  1016                           ;Lab01.c: 99:     if (RBIF == 1){
  1017  004C  1C0B               	btfss	11,0	;volatile
  1018  004D  284F               	goto	u4_21
  1019  004E  2850               	goto	u4_20
  1020  004F                     u4_21:
  1021  004F  2865               	goto	i1l880
  1022  0050                     u4_20:
  1023  0050                     i1l866:
  1024                           
  1025                           ;Lab01.c: 100:         if (RB0 == 1){
  1026  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0052  1C06               	btfss	6,0	;volatile
  1029  0053  2855               	goto	u5_21
  1030  0054  2856               	goto	u5_20
  1031  0055                     u5_21:
  1032  0055  285C               	goto	i1l872
  1033  0056                     u5_20:
  1034  0056                     i1l868:
  1035                           
  1036                           ;Lab01.c: 101:             contador++;
  1037  0056  3001               	movlw	1
  1038  0057  00F2               	movwf	??_isr
  1039  0058  0872               	movf	??_isr,w
  1040  0059  07F9               	addwf	_contador,f
  1041  005A                     i1l870:
  1042                           
  1043                           ;Lab01.c: 102:             PORTC = contador;
  1044  005A  0879               	movf	_contador,w
  1045  005B  0087               	movwf	7	;volatile
  1046  005C                     i1l872:
  1047                           
  1048                           ;Lab01.c: 105:         if (RB1 == 1){
  1049  005C  1C86               	btfss	6,1	;volatile
  1050  005D  285F               	goto	u6_21
  1051  005E  2860               	goto	u6_20
  1052  005F                     u6_21:
  1053  005F  2864               	goto	i1l878
  1054  0060                     u6_20:
  1055  0060                     i1l874:
  1056                           
  1057                           ;Lab01.c: 106:             contador--;
  1058  0060  3001               	movlw	1
  1059  0061  02F9               	subwf	_contador,f
  1060  0062                     i1l876:
  1061                           
  1062                           ;Lab01.c: 107:             PORTC = contador;
  1063  0062  0879               	movf	_contador,w
  1064  0063  0087               	movwf	7	;volatile
  1065  0064                     i1l878:
  1066                           
  1067                           ;Lab01.c: 110:         INTCONbits.RBIF = 0;
  1068  0064  100B               	bcf	11,0	;volatile
  1069  0065                     i1l880:
  1070                           
  1071                           ;Lab01.c: 114:     if (PIR1bits.ADIF) {
  1072  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0067  1F0C               	btfss	12,6	;volatile
  1075  0068  286A               	goto	u7_21
  1076  0069  286B               	goto	u7_20
  1077  006A                     u7_21:
  1078  006A  287D               	goto	i1l91
  1079  006B                     u7_20:
  1080  006B                     i1l882:
  1081                           
  1082                           ;Lab01.c: 115:         if (ADCON0bits.CHS == 0) {
  1083  006B  0C1F               	rrf	31,w	;volatile
  1084  006C  00F2               	movwf	??_isr
  1085  006D  0C72               	rrf	??_isr,w
  1086  006E  390F               	andlw	15
  1087  006F  3A00               	xorlw	0
  1088  0070  1D03               	skipz
  1089  0071  2873               	goto	u8_21
  1090  0072  2874               	goto	u8_20
  1091  0073                     u8_21:
  1092  0073  287A               	goto	i1l886
  1093  0074                     u8_20:
  1094  0074                     i1l884:
  1095                           
  1096                           ;Lab01.c: 117:             transfer_ADC(ADRESH);
  1097  0074  081E               	movf	30,w	;volatile
  1098  0075  120A  118A  2146  120A  118A  	fcall	_transfer_ADC
  1099  007A                     i1l886:
  1100                           
  1101                           ;Lab01.c: 120:         PIR1bits.ADIF = 0;
  1102  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1103  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1104  007C  130C               	bcf	12,6	;volatile
  1105  007D                     i1l91:
  1106  007D  0875               	movf	??_isr+3,w
  1107  007E  008A               	movwf	10
  1108  007F  0874               	movf	??_isr+2,w
  1109  0080  0084               	movwf	4
  1110  0081  0E73               	swapf	??_isr+1,w
  1111  0082  0083               	movwf	3
  1112  0083  0EFE               	swapf	btemp,f
  1113  0084  0E7E               	swapf	btemp,w
  1114  0085  0009               	retfie
  1115  0086                     __end_of_isr:
  1116                           
  1117                           	psect	intentry
  1118  0004                     __pintentry:	
  1119                           ;incstack = 0
  1120                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1121                           
  1122  0004                     interrupt_function:
  1123  007E                     saved_w	set	btemp
  1124  0004  00FE               	movwf	btemp
  1125  0005  0E03               	swapf	3,w
  1126  0006  00F3               	movwf	??_isr+1
  1127  0007  0804               	movf	4,w
  1128  0008  00F4               	movwf	??_isr+2
  1129  0009  080A               	movf	10,w
  1130  000A  00F5               	movwf	??_isr+3
  1131  000B  120A  118A  2828   	ljmp	_isr
  1132                           
  1133                           	psect	text4
  1134  0146                     __ptext4:	
  1135 ;; *************** function _transfer_ADC *****************
  1136 ;; Defined at:
  1137 ;;		line 97 in file "Librerias.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  dato            1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  dato            1    1[COMMON] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         0       0       0       0       0
  1152 ;;      Locals:         1       0       0       0       0
  1153 ;;      Temps:          1       0       0       0       0
  1154 ;;      Totals:         2       0       0       0       0
  1155 ;;Total ram usage:        2 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_isr
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _transfer_ADC
  1166  0146                     _transfer_ADC:
  1167                           
  1168                           ;incstack = 0
  1169                           ; Regs used in _transfer_ADC: [wreg]
  1170                           ;transfer_ADC@dato stored from wreg
  1171  0146  00F1               	movwf	transfer_ADC@dato
  1172  0147                     i1l760:
  1173                           
  1174                           ;Librerias.c: 98:     ADC = dato;
  1175  0147  0871               	movf	transfer_ADC@dato,w
  1176  0148  00F0               	movwf	??_transfer_ADC
  1177  0149  0870               	movf	??_transfer_ADC,w
  1178  014A  00F8               	movwf	_ADC
  1179  014B                     i1l160:
  1180  014B  0008               	return
  1181  014C                     __end_of_transfer_ADC:
  1182                           
  1183                           	psect	text5
  1184  013C                     __ptext5:	
  1185 ;; *************** function _segmentos *****************
  1186 ;; Defined at:
  1187 ;;		line 106 in file "Librerias.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  dato            1    wreg     unsigned char 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  dato            1    0[COMMON] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       0       0       0       0
  1202 ;;      Locals:         1       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0
  1204 ;;      Totals:         1       0       0       0       0
  1205 ;;Total ram usage:        1 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_isr
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           
  1215                           ;psect for function _segmentos
  1216  013C                     _segmentos:
  1217                           
  1218                           ;incstack = 0
  1219                           ; Regs used in _segmentos: [wreg-fsr0h+status,2+status,0]
  1220                           ;segmentos@dato stored from wreg
  1221  013C  00F0               	movwf	segmentos@dato
  1222  013D                     i1l758:
  1223                           
  1224                           ;Librerias.c: 108:     PORTD = tabla[dato];
  1225  013D  0870               	movf	segmentos@dato,w
  1226  013E  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1227  013F  0084               	movwf	4
  1228  0140  1383               	bcf	3,7	;select IRP bank0
  1229  0141  0800               	movf	0,w
  1230  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0144  0088               	movwf	8	;volatile
  1233  0145                     i1l166:
  1234  0145  0008               	return
  1235  0146                     __end_of_segmentos:
  1236  007E                     btemp	set	126	;btemp
  1237  007E                     wtemp0	set	126
  1238                           
  1239                           	psect	config
  1240                           
  1241                           ;Config register CONFIG1 @ 0x2007
  1242                           ;	Oscillator Selection bits
  1243                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1244                           ;	Watchdog Timer Enable bit
  1245                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1246                           ;	Power-up Timer Enable bit
  1247                           ;	PWRTE = ON, PWRT enabled
  1248                           ;	RE3/MCLR pin function select bit
  1249                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1250                           ;	Code Protection bit
  1251                           ;	CP = OFF, Program memory code protection is disabled
  1252                           ;	Data Code Protection bit
  1253                           ;	CPD = OFF, Data memory code protection is disabled
  1254                           ;	Brown Out Reset Selection bits
  1255                           ;	BOREN = OFF, BOR disabled
  1256                           ;	Internal External Switchover bit
  1257                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1258                           ;	Fail-Safe Clock Monitor Enabled bit
  1259                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1260                           ;	Low Voltage Programming Enable bit
  1261                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1262                           ;	In-Circuit Debugger Mode bit
  1263                           ;	DEBUG = 0x1, unprogrammed default
  1264  2007                     	org	8199
  1265  2007  30C4               	dw	12484
  1266                           
  1267                           ;Config register CONFIG2 @ 0x2008
  1268                           ;	Brown-out Reset Selection bit
  1269                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1270                           ;	Flash Program Memory Self Write Enable bits
  1271                           ;	WRT = OFF, Write protection off
  1272  2008                     	org	8200
  1273  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      4      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_transfer_ADC

Critical Paths under _main in BANK0

    _main->_nibbles

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      62
                                              3 BANK0      1     1      0
                            _nibbles
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _nibbles                                              3     3      0      62
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0      30
                                              2 COMMON     4     4      0
                          _segmentos
                       _transfer_ADC
 ---------------------------------------------------------------------------------
 (3) _transfer_ADC                                         2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _segmentos                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nibbles
   _setup

 _isr (ROOT)
   _segmentos
   _transfer_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 19 20:24:27 2021

                      pc 0002                       l98 00FC                       fsr 0004  
                    l105 00D5                      l163 0118                      _ADC 0078  
                    l992 0086                      l994 008A                      l996 008B  
                    l998 0091                      _RB0 0030                      _RB1 0031  
                    u150 00E2                      u151 00E1                      u160 00F8  
                    u145 010E                      u161 00F7                      u177 00E6  
                    u187 00C6                      u197 00D0                      _isr 0028  
                    fsr0 0004                      indf 0000             _transfer_ADC 0146  
                   l1000 0093                     l1010 009A                     l1002 0094  
                   l1020 00A1                     l1012 009B                     l1004 0097  
                   l1030 00A6                     l1022 00A2                     l1014 009E  
                   l1006 0098                     l1040 00AF                     l1032 00A7  
                   l1024 00A3                     l1016 009F                     l1008 0099  
                   l1050 00B4                     l1042 00B0                     l1034 00A8  
                   l1026 00A4                     l1018 00A0                     l1060 00C0  
                   l1052 00B8                     l1044 00B1                     l1036 00AB  
                   l1028 00A5                     l1070 00D4                     l1062 00C2  
                   l1054 00BB                     l1046 00B2                     l1038 00AE  
                   l1072 0106                     l1064 00C9                     l1056 00BC  
                   l1048 00B3                     l1080 00DE                     l1074 010B  
                   l1066 00CC                     l1058 00BD                     l1090 00F8  
                   l1082 00E2                     l1068 00D3                     l1084 00E9  
                   l1076 00D6                     l1086 00EC                     l1078 00DB  
                   l1088 00F2                     ?_isr 0070                     _T0IF 005A  
                   _RBIF 0058                     i1l91 007D                     i1l84 0042  
                   _TMR0 0001                     u2_20 002C                     u2_21 002B  
                   u3_20 0038                     u3_21 0037                     u4_20 0050  
                   u4_21 004F                     u5_20 0056                     u5_21 0055  
                   u6_20 0060                     u6_21 005F                     u7_20 006B  
                   u7_21 006A                     u8_20 0074                     u8_21 0073  
                   _main 00D6                     btemp 007E                     start 000E  
                  ??_isr 0072                    ?_main 0070                    _ANSEL 0188  
                  i1l160 014B                    i1l166 0145                    i1l760 0147  
                  i1l850 0031                    i1l860 0044                    i1l852 0033  
                  i1l758 013D                    i1l870 005A                    i1l862 004A  
                  i1l854 0038                    i1l846 0028                    i1l872 005C  
                  i1l880 0065                    i1l856 003A                    i1l848 002C  
                  i1l864 004C                    i1l882 006B                    i1l874 0060  
                  i1l866 0050                    i1l858 0040                    i1l884 0074  
                  i1l876 0062                    i1l868 0056                    i1l886 007A  
                  i1l878 0064                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _flags 007A  
        __end_of_nibbles 0119                    _tabla 0020                    _setup 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0103                   ??_main 0033  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
            nibbles@dato 0032         transfer_ADC@dato 0071                ??_nibbles 0030  
                 saved_w 007E  __end_of__initialization 0024           __pcstackCOMMON 0070  
           __pidataBANK0 012C            __end_of_setup 00D6           _OPTION_REGbits 0081  
                ??_setup 0030               __pmaintext 00D6               __pintentry 0004  
     __size_of_segmentos 000A                  __ptext1 0086                  __ptext2 0103  
                __ptext3 0028                  __ptext4 0146                  __ptext5 013C  
                _nibbles 0103             __size_of_isr 005E               _parte_baja 0077  
             _parte_alta 0076     end_of_initialization 0024        __end_of_segmentos 0146  
              _PORTBbits 0006                _PORTEbits 0009            segmentos@dato 0070  
    start_initialization 0011            ?_transfer_ADC 0070              __end_of_isr 0086  
             init_fetch0 0119              __pdataBANK0 0020           ??_transfer_ADC 0070  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0030  
               ?_nibbles 0070           __size_of_setup 0050        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                _segmentos 013C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
             ?_segmentos 0070     __end_of_transfer_ADC 014C         __size_of_nibbles 0016  
               _contador 0079            __size_of_main 002D               _INTCONbits 000B  
               init_ram0 011D                 intlevel1 0000              ??_segmentos 0070  
             _OSCCONbits 008F    __size_of_transfer_ADC 0006  
