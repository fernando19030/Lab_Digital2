

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 18 16:38:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	nvBANK0
   216  0035                     __pnvBANK0:
   217  0035                     _uni:
   218  0035                     	ds	1
   219  0036                     _dec:
   220  0036                     	ds	1
   221  0037                     _cen:
   222  0037                     	ds	1
   223  001A                     _RCREG	set	26
   224  0019                     _TXREG	set	25
   225  0018                     _RCSTAbits	set	24
   226  0006                     _PORTB	set	6
   227  0005                     _PORTA	set	5
   228  0008                     _PORTD	set	8
   229  000C                     _PIR1bits	set	12
   230  0006                     _PORTBbits	set	6
   231  000B                     _INTCONbits	set	11
   232  009A                     _SPBRGH	set	154
   233  0099                     _SPBRG	set	153
   234  0098                     _TXSTAbits	set	152
   235  0096                     _IOCBbits	set	150
   236  008F                     _OSCCONbits	set	143
   237  0088                     _TRISD	set	136
   238  0086                     _TRISB	set	134
   239  0085                     _TRISA	set	133
   240  0187                     _BAUDCTLbits	set	391
   241  0189                     _ANSELH	set	393
   242  0188                     _ANSEL	set	392
   243                           
   244                           	psect	cinit
   245  000F                     start_initialization:	
   246                           ; #config settings
   247                           
   248  000F                     __initialization:
   249                           
   250                           ; Clear objects allocated to BANK0
   251  000F  1283               	bcf	3,5	;RP0=0, select bank0
   252  0010  1303               	bcf	3,6	;RP1=0, select bank0
   253  0011  01AF               	clrf	__pbssBANK0& (0+127)
   254  0012  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   255  0013  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   256  0014  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   257  0015  01B3               	clrf	(__pbssBANK0+4)& (0+127)
   258  0016  01B4               	clrf	(__pbssBANK0+5)& (0+127)
   259  0017                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  0017                     __end_of__initialization:
   263  0017  0183               	clrf	3
   264  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssBANK0
   267  002F                     __pbssBANK0:
   268  002F                     _ada:
   269  002F                     	ds	1
   270  0030                     _posicion:
   271  0030                     	ds	1
   272  0031                     _ingreso:
   273  0031                     	ds	1
   274  0032                     _contador:
   275  0032                     	ds	1
   276  0033                     _entrante:
   277  0033                     	ds	2
   278                           
   279                           	psect	cstackCOMMON
   280  0070                     __pcstackCOMMON:
   281  0070                     ?_setup:
   282  0070                     ?_USART_Rx:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_USART_Tx:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_isr:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ??_isr:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 1 bytes @ 0x0
   299  0070                     	ds	3
   300  0073                     ??_setup:
   301  0073                     ??_USART_Rx:	
   302                           ; 1 bytes @ 0x3
   303                           
   304  0073                     ??_USART_Tx:	
   305                           ; 1 bytes @ 0x3
   306                           
   307  0073                     ?___bmul:	
   308                           ; 1 bytes @ 0x3
   309                           
   310  0073                     ?___awmod:	
   311                           ; 1 bytes @ 0x3
   312                           
   313  0073                     USART_Tx@data:	
   314                           ; 2 bytes @ 0x3
   315                           
   316  0073                     ___bmul@multiplicand:	
   317                           ; 1 bytes @ 0x3
   318                           
   319  0073                     ___awmod@divisor:	
   320                           ; 1 bytes @ 0x3
   321                           
   322                           
   323                           ; 2 bytes @ 0x3
   324  0073                     	ds	1
   325  0074                     ??___bmul:
   326                           
   327                           ; 1 bytes @ 0x4
   328  0074                     	ds	1
   329  0075                     ___bmul@product:
   330  0075                     ___awmod@dividend:	
   331                           ; 1 bytes @ 0x5
   332                           
   333                           
   334                           ; 2 bytes @ 0x5
   335  0075                     	ds	1
   336  0076                     ___bmul@multiplier:
   337                           
   338                           ; 1 bytes @ 0x6
   339  0076                     	ds	1
   340  0077                     ??___awmod:
   341                           
   342                           ; 1 bytes @ 0x7
   343  0077                     	ds	1
   344  0078                     ___awmod@counter:
   345                           
   346                           ; 1 bytes @ 0x8
   347  0078                     	ds	1
   348  0079                     ___awmod@sign:
   349                           
   350                           ; 1 bytes @ 0x9
   351  0079                     	ds	1
   352  007A                     ??_unidades:
   353  007A                     ??___awdiv:	
   354                           ; 1 bytes @ 0xA
   355                           
   356                           
   357                           ; 1 bytes @ 0xA
   358  007A                     	ds	1
   359                           
   360                           	psect	cstackBANK0
   361  0020                     __pcstackBANK0:
   362  0020                     ?_unidades:
   363  0020                     ?___awdiv:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0020                     unidades@dato:	
   367                           ; 2 bytes @ 0x0
   368                           
   369  0020                     ___awdiv@divisor:	
   370                           ; 2 bytes @ 0x0
   371                           
   372                           
   373                           ; 2 bytes @ 0x0
   374  0020                     	ds	2
   375  0022                     ___awdiv@dividend:
   376  0022                     _unidades$969:	
   377                           ; 2 bytes @ 0x2
   378                           
   379                           
   380                           ; 2 bytes @ 0x2
   381  0022                     	ds	2
   382  0024                     unidades@out:
   383  0024                     ___awdiv@counter:	
   384                           ; 1 bytes @ 0x4
   385                           
   386                           
   387                           ; 1 bytes @ 0x4
   388  0024                     	ds	1
   389  0025                     ___awdiv@sign:
   390                           
   391                           ; 1 bytes @ 0x5
   392  0025                     	ds	1
   393  0026                     ___awdiv@quotient:
   394                           
   395                           ; 2 bytes @ 0x6
   396  0026                     	ds	2
   397  0028                     ?_centenas:
   398  0028                     ?_decenas:	
   399                           ; 1 bytes @ 0x8
   400                           
   401  0028                     centenas@dato:	
   402                           ; 1 bytes @ 0x8
   403                           
   404  0028                     decenas@dato:	
   405                           ; 2 bytes @ 0x8
   406                           
   407                           
   408                           ; 2 bytes @ 0x8
   409  0028                     	ds	2
   410  002A                     ??_centenas:
   411  002A                     ??_decenas:	
   412                           ; 1 bytes @ 0xA
   413                           
   414                           
   415                           ; 1 bytes @ 0xA
   416  002A                     	ds	1
   417  002B                     centenas@out:
   418  002B                     decenas@out:	
   419                           ; 1 bytes @ 0xB
   420                           
   421                           
   422                           ; 1 bytes @ 0xB
   423  002B                     	ds	1
   424  002C                     ??_main:
   425                           
   426                           ; 1 bytes @ 0xC
   427  002C                     	ds	3
   428                           
   429                           	psect	maintext
   430  001B                     __pmaintext:	
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   433 ;;
   434 ;; *************** function _main *****************
   435 ;; Defined at:
   436 ;;		line 94 in file "Lab05.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : B00/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          0       3       0       0       0
   453 ;;      Totals:         0       3       0       0       0
   454 ;;Total ram usage:        3 bytes
   455 ;; Hardware stack levels required when called:    3
   456 ;; This function calls:
   457 ;;		_USART_Rx
   458 ;;		_USART_Tx
   459 ;;		___bmul
   460 ;;		_centenas
   461 ;;		_decenas
   462 ;;		_setup
   463 ;;		_unidades
   464 ;; This function is called by:
   465 ;;		Startup code after reset
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           
   470                           ;psect for function _main
   471  001B                     _main:
   472  001B                     l1117:	
   473                           ;incstack = 0
   474                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   475                           
   476                           
   477                           ;Lab05.c: 95:     setup();
   478  001B  120A  118A  219A  120A  118A  	fcall	_setup
   479  0020                     l81:	
   480                           ;Lab05.c: 99:     while(1){
   481                           
   482                           
   483                           ;Lab05.c: 100:         cen = centenas(contador);
   484  0020  1283               	bcf	3,5	;RP0=0, select bank0
   485  0021  1303               	bcf	3,6	;RP1=0, select bank0
   486  0022  0832               	movf	_contador,w
   487  0023  00AC               	movwf	??_main
   488  0024  01AD               	clrf	??_main+1
   489  0025  082C               	movf	??_main,w
   490  0026  00A8               	movwf	centenas@dato
   491  0027  082D               	movf	??_main+1,w
   492  0028  00A9               	movwf	centenas@dato+1
   493  0029  120A  118A  2234  120A  118A  	fcall	_centenas
   494  002E  1283               	bcf	3,5	;RP0=0, select bank0
   495  002F  1303               	bcf	3,6	;RP1=0, select bank0
   496  0030  00AE               	movwf	??_main+2
   497  0031  082E               	movf	??_main+2,w
   498  0032  00B7               	movwf	_cen
   499                           
   500                           ;Lab05.c: 101:         dec = decenas(contador);
   501  0033  0832               	movf	_contador,w
   502  0034  00AC               	movwf	??_main
   503  0035  01AD               	clrf	??_main+1
   504  0036  082C               	movf	??_main,w
   505  0037  00A8               	movwf	decenas@dato
   506  0038  082D               	movf	??_main+1,w
   507  0039  00A9               	movwf	decenas@dato+1
   508  003A  120A  118A  21F2  120A  118A  	fcall	_decenas
   509  003F  1283               	bcf	3,5	;RP0=0, select bank0
   510  0040  1303               	bcf	3,6	;RP1=0, select bank0
   511  0041  00AE               	movwf	??_main+2
   512  0042  082E               	movf	??_main+2,w
   513  0043  00B6               	movwf	_dec
   514                           
   515                           ;Lab05.c: 102:         uni = unidades(contador);
   516  0044  0832               	movf	_contador,w
   517  0045  00AC               	movwf	??_main
   518  0046  01AD               	clrf	??_main+1
   519  0047  082C               	movf	??_main,w
   520  0048  00A0               	movwf	unidades@dato
   521  0049  082D               	movf	??_main+1,w
   522  004A  00A1               	movwf	unidades@dato+1
   523  004B  120A  118A  21C8  120A  118A  	fcall	_unidades
   524  0050  1283               	bcf	3,5	;RP0=0, select bank0
   525  0051  1303               	bcf	3,6	;RP1=0, select bank0
   526  0052  00AE               	movwf	??_main+2
   527  0053  082E               	movf	??_main+2,w
   528  0054  00B5               	movwf	_uni
   529  0055                     l1119:
   530                           
   531                           ;Lab05.c: 103:         cen += 48;
   532  0055  3030               	movlw	48
   533  0056  00AC               	movwf	??_main
   534  0057  082C               	movf	??_main,w
   535  0058  07B7               	addwf	_cen,f
   536  0059                     l1121:
   537                           
   538                           ;Lab05.c: 104:         dec += 48;
   539  0059  3030               	movlw	48
   540  005A  00AC               	movwf	??_main
   541  005B  082C               	movf	??_main,w
   542  005C  07B6               	addwf	_dec,f
   543  005D                     l1123:
   544                           
   545                           ;Lab05.c: 105:         uni += 48;
   546  005D  3030               	movlw	48
   547  005E  00AC               	movwf	??_main
   548  005F  082C               	movf	??_main,w
   549  0060  07B5               	addwf	_uni,f
   550  0061                     l1125:
   551                           
   552                           ;Lab05.c: 106:         if (PIR1bits.RCIF == 1){
   553  0061  1E8C               	btfss	12,5	;volatile
   554  0062  2864               	goto	u571
   555  0063  2865               	goto	u570
   556  0064                     u571:
   557  0064  28D3               	goto	l1153
   558  0065                     u570:
   559  0065                     l1127:
   560                           
   561                           ;Lab05.c: 107:             ingreso = USART_Rx();
   562  0065  120A  118A  226C  120A  118A  	fcall	_USART_Rx
   563  006A  1283               	bcf	3,5	;RP0=0, select bank0
   564  006B  1303               	bcf	3,6	;RP1=0, select bank0
   565  006C  00AC               	movwf	??_main
   566  006D  082C               	movf	??_main,w
   567  006E  00B1               	movwf	_ingreso
   568  006F                     l1129:
   569                           
   570                           ;Lab05.c: 109:             if(ingreso == 's'){
   571  006F  3073               	movlw	115
   572  0070  0631               	xorwf	_ingreso,w
   573  0071  1D03               	btfss	3,2
   574  0072  2874               	goto	u581
   575  0073  2875               	goto	u580
   576  0074                     u581:
   577  0074  288B               	goto	l1133
   578  0075                     u580:
   579  0075                     l1131:
   580                           
   581                           ;Lab05.c: 110:                 USART_Tx(cen);
   582  0075  0837               	movf	_cen,w
   583  0076  120A  118A  2260  120A  118A  	fcall	_USART_Tx
   584                           
   585                           ;Lab05.c: 111:                 USART_Tx(dec);
   586  007B  1283               	bcf	3,5	;RP0=0, select bank0
   587  007C  1303               	bcf	3,6	;RP1=0, select bank0
   588  007D  0836               	movf	_dec,w
   589  007E  120A  118A  2260  120A  118A  	fcall	_USART_Tx
   590                           
   591                           ;Lab05.c: 112:                 USART_Tx(uni);
   592  0083  1283               	bcf	3,5	;RP0=0, select bank0
   593  0084  1303               	bcf	3,6	;RP1=0, select bank0
   594  0085  0835               	movf	_uni,w
   595  0086  120A  118A  2260  120A  118A  	fcall	_USART_Tx
   596  008B                     l1133:
   597                           
   598                           ;Lab05.c: 115:             if(ingreso > 47 && ingreso < 58){
   599  008B  3030               	movlw	48
   600  008C  1283               	bcf	3,5	;RP0=0, select bank0
   601  008D  1303               	bcf	3,6	;RP1=0, select bank0
   602  008E  0231               	subwf	_ingreso,w
   603  008F  1C03               	skipc
   604  0090  2892               	goto	u591
   605  0091  2893               	goto	u590
   606  0092                     u591:
   607  0092  28D3               	goto	l1153
   608  0093                     u590:
   609  0093                     l1135:
   610  0093  303A               	movlw	58
   611  0094  0231               	subwf	_ingreso,w
   612  0095  1803               	skipnc
   613  0096  2898               	goto	u601
   614  0097  2899               	goto	u600
   615  0098                     u601:
   616  0098  28D3               	goto	l1153
   617  0099                     u600:
   618  0099                     l1137:
   619                           
   620                           ;Lab05.c: 116:                 entrante[posicion] = ingreso;
   621  0099  0831               	movf	_ingreso,w
   622  009A  00AC               	movwf	??_main
   623  009B  0830               	movf	_posicion,w
   624  009C  3E33               	addlw	(low (_entrante| 0))& (0+255)
   625  009D  0084               	movwf	4
   626  009E  082C               	movf	??_main,w
   627  009F  1383               	bcf	3,7	;select IRP bank0
   628  00A0  0080               	movwf	0
   629  00A1                     l1139:
   630                           
   631                           ;Lab05.c: 117:                 posicion++;
   632  00A1  3001               	movlw	1
   633  00A2  00AC               	movwf	??_main
   634  00A3  082C               	movf	??_main,w
   635  00A4  07B0               	addwf	_posicion,f
   636  00A5                     l1141:
   637                           
   638                           ;Lab05.c: 119:                 if (posicion > 2){
   639  00A5  3003               	movlw	3
   640  00A6  0230               	subwf	_posicion,w
   641  00A7  1C03               	skipc
   642  00A8  28AA               	goto	u611
   643  00A9  28AB               	goto	u610
   644  00AA                     u611:
   645  00AA  28D3               	goto	l1153
   646  00AB                     u610:
   647  00AB                     l1143:
   648                           
   649                           ;Lab05.c: 120:                     posicion = 0;
   650  00AB  01B0               	clrf	_posicion
   651  00AC                     l1145:
   652                           
   653                           ;Lab05.c: 121:                     ada = (entrante[0] - 48) * 100;
   654  00AC  3064               	movlw	100
   655  00AD  00AC               	movwf	??_main
   656  00AE  082C               	movf	??_main,w
   657  00AF  00F3               	movwf	___bmul@multiplicand
   658  00B0  0833               	movf	_entrante,w
   659  00B1  3ED0               	addlw	208
   660  00B2  120A  118A  224B  120A  118A  	fcall	___bmul
   661  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   662  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   663  00B9  00AD               	movwf	??_main+1
   664  00BA  082D               	movf	??_main+1,w
   665  00BB  00AF               	movwf	_ada
   666  00BC                     l1147:
   667                           
   668                           ;Lab05.c: 122:                     ada +=(entrante[1] - 48) *10;
   669  00BC  300A               	movlw	10
   670  00BD  00AC               	movwf	??_main
   671  00BE  082C               	movf	??_main,w
   672  00BF  00F3               	movwf	___bmul@multiplicand
   673  00C0  0834               	movf	_entrante+1,w
   674  00C1  3ED0               	addlw	208
   675  00C2  120A  118A  224B  120A  118A  	fcall	___bmul
   676  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   677  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   678  00C9  00AD               	movwf	??_main+1
   679  00CA  082D               	movf	??_main+1,w
   680  00CB  07AF               	addwf	_ada,f
   681  00CC                     l1149:
   682                           
   683                           ;Lab05.c: 123:                     ada +=(entrante[2] - 48);
   684  00CC  0835               	movf	_entrante+2,w
   685  00CD  3ED0               	addlw	208
   686  00CE  00AC               	movwf	??_main
   687  00CF  082C               	movf	??_main,w
   688  00D0  07AF               	addwf	_ada,f
   689  00D1                     l1151:
   690                           
   691                           ;Lab05.c: 124:                     PORTD = ada;
   692  00D1  082F               	movf	_ada,w
   693  00D2  0088               	movwf	8	;volatile
   694  00D3                     l1153:
   695                           
   696                           ;Lab05.c: 129:         ingreso = 0;
   697  00D3  01B1               	clrf	_ingreso
   698  00D4  2820               	goto	l81
   699  00D5  120A  118A  280C   	ljmp	start
   700  00D8                     __end_of_main:
   701                           
   702                           	psect	text1
   703  01C8                     __ptext1:	
   704 ;; *************** function _unidades *****************
   705 ;; Defined at:
   706 ;;		line 195 in file "Lab05.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  dato            2    0[BANK0 ] int 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  out             1    4[BANK0 ] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      unsigned char 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       2       0       0       0
   721 ;;      Locals:         0       3       0       0       0
   722 ;;      Temps:          1       0       0       0       0
   723 ;;      Totals:         1       5       0       0       0
   724 ;;Total ram usage:        6 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    2
   727 ;; This function calls:
   728 ;;		___awmod
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _unidades
   736  01C8                     _unidades:
   737  01C8                     l1077:	
   738                           ;incstack = 0
   739                           ; Regs used in _unidades: [wreg+status,2+status,0+pclath+cstack]
   740                           
   741                           
   742                           ;Lab05.c: 196:     char out;;Lab05.c: 197:     out = (dato % 100) % 10;
   743  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   744  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   745  01CA  0821               	movf	unidades@dato+1,w
   746  01CB  00F6               	movwf	___awmod@dividend+1
   747  01CC  0820               	movf	unidades@dato,w
   748  01CD  00F5               	movwf	___awmod@dividend
   749  01CE  3064               	movlw	100
   750  01CF  00F3               	movwf	___awmod@divisor
   751  01D0  3000               	movlw	0
   752  01D1  00F4               	movwf	___awmod@divisor+1
   753  01D2  120A  118A  2141  120A  118A  	fcall	___awmod
   754  01D7  0874               	movf	?___awmod+1,w
   755  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   756  01D9  1303               	bcf	3,6	;RP1=0, select bank0
   757  01DA  00A3               	movwf	_unidades$969+1
   758  01DB  0873               	movf	?___awmod,w
   759  01DC  00A2               	movwf	_unidades$969
   760                           
   761                           ;Lab05.c: 196:     char out;;Lab05.c: 197:     out = (dato % 100) % 10;
   762  01DD  300A               	movlw	10
   763  01DE  00F3               	movwf	___awmod@divisor
   764  01DF  3000               	movlw	0
   765  01E0  00F4               	movwf	___awmod@divisor+1
   766  01E1  0823               	movf	_unidades$969+1,w
   767  01E2  00F6               	movwf	___awmod@dividend+1
   768  01E3  0822               	movf	_unidades$969,w
   769  01E4  00F5               	movwf	___awmod@dividend
   770  01E5  120A  118A  2141  120A  118A  	fcall	___awmod
   771  01EA  0873               	movf	?___awmod,w
   772  01EB  00FA               	movwf	??_unidades
   773  01EC  087A               	movf	??_unidades,w
   774  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   775  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   776  01EF  00A4               	movwf	unidades@out
   777  01F0                     l1079:
   778                           
   779                           ;Lab05.c: 198:     return out;
   780  01F0  0824               	movf	unidades@out,w
   781  01F1                     l100:
   782  01F1  0008               	return
   783  01F2                     __end_of_unidades:
   784                           
   785                           	psect	text2
   786  019A                     __ptext2:	
   787 ;; *************** function _setup *****************
   788 ;; Defined at:
   789 ;;		line 139 in file "Lab05.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _setup
   819  019A                     _setup:
   820  019A                     l1017:	
   821                           ;incstack = 0
   822                           ; Regs used in _setup: [wreg+status,2]
   823                           
   824                           
   825                           ;Lab05.c: 140:     ANSEL = 0x00;
   826  019A  1683               	bsf	3,5	;RP0=1, select bank3
   827  019B  1703               	bsf	3,6	;RP1=1, select bank3
   828  019C  0188               	clrf	8	;volatile
   829                           
   830                           ;Lab05.c: 141:     ANSELH = 0x00;
   831  019D  0189               	clrf	9	;volatile
   832                           
   833                           ;Lab05.c: 143:     TRISA = 0x00;
   834  019E  1683               	bsf	3,5	;RP0=1, select bank1
   835  019F  1303               	bcf	3,6	;RP1=0, select bank1
   836  01A0  0185               	clrf	5	;volatile
   837  01A1                     l1019:
   838                           
   839                           ;Lab05.c: 144:     TRISB = 0x03;
   840  01A1  3003               	movlw	3
   841  01A2  0086               	movwf	6	;volatile
   842  01A3                     l1021:
   843                           
   844                           ;Lab05.c: 145:     TRISD = 0x00;
   845  01A3  0188               	clrf	8	;volatile
   846  01A4                     l1023:
   847                           
   848                           ;Lab05.c: 147:     PORTA = 0x00;
   849  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   850  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   851  01A6  0185               	clrf	5	;volatile
   852  01A7                     l1025:
   853                           
   854                           ;Lab05.c: 148:     PORTB = 0x00;
   855  01A7  0186               	clrf	6	;volatile
   856  01A8                     l1027:
   857                           
   858                           ;Lab05.c: 149:     PORTD = 0x00;
   859  01A8  0188               	clrf	8	;volatile
   860  01A9                     l1029:
   861                           
   862                           ;Lab05.c: 152:     OSCCONbits.IRCF2 = 1;
   863  01A9  1683               	bsf	3,5	;RP0=1, select bank1
   864  01AA  1303               	bcf	3,6	;RP1=0, select bank1
   865  01AB  170F               	bsf	15,6	;volatile
   866  01AC                     l1031:
   867                           
   868                           ;Lab05.c: 153:     OSCCONbits.IRCF1 = 1;
   869  01AC  168F               	bsf	15,5	;volatile
   870  01AD                     l1033:
   871                           
   872                           ;Lab05.c: 154:     OSCCONbits.IRCF0 = 1;
   873  01AD  160F               	bsf	15,4	;volatile
   874  01AE                     l1035:
   875                           
   876                           ;Lab05.c: 155:     OSCCONbits.SCS = 1;
   877  01AE  140F               	bsf	15,0	;volatile
   878  01AF                     l1037:
   879                           
   880                           ;Lab05.c: 158:     INTCONbits.GIE = 1;
   881  01AF  178B               	bsf	11,7	;volatile
   882  01B0                     l1039:
   883                           
   884                           ;Lab05.c: 159:     INTCONbits.PEIE = 1;
   885  01B0  170B               	bsf	11,6	;volatile
   886  01B1                     l1041:
   887                           
   888                           ;Lab05.c: 160:     INTCONbits.RBIE = 1;
   889  01B1  158B               	bsf	11,3	;volatile
   890  01B2                     l1043:
   891                           
   892                           ;Lab05.c: 162:     INTCONbits.RBIF = 0;
   893  01B2  100B               	bcf	11,0	;volatile
   894  01B3                     l1045:
   895                           
   896                           ;Lab05.c: 165:     IOCBbits.IOCB0 = 1;
   897  01B3  1416               	bsf	22,0	;volatile
   898  01B4                     l1047:
   899                           
   900                           ;Lab05.c: 166:     IOCBbits.IOCB1 = 1;
   901  01B4  1496               	bsf	22,1	;volatile
   902  01B5                     l1049:
   903                           
   904                           ;Lab05.c: 169:     TXSTAbits.SYNC = 0;
   905  01B5  1218               	bcf	24,4	;volatile
   906  01B6                     l1051:
   907                           
   908                           ;Lab05.c: 170:     TXSTAbits.BRGH = 1;
   909  01B6  1518               	bsf	24,2	;volatile
   910  01B7                     l1053:
   911                           
   912                           ;Lab05.c: 172:     BAUDCTLbits.BRG16 = 1;
   913  01B7  1683               	bsf	3,5	;RP0=1, select bank3
   914  01B8  1703               	bsf	3,6	;RP1=1, select bank3
   915  01B9  1587               	bsf	7,3	;volatile
   916  01BA                     l1055:
   917                           
   918                           ;Lab05.c: 174:     SPBRG = 207;
   919  01BA  30CF               	movlw	207
   920  01BB  1683               	bsf	3,5	;RP0=1, select bank1
   921  01BC  1303               	bcf	3,6	;RP1=0, select bank1
   922  01BD  0099               	movwf	25	;volatile
   923                           
   924                           ;Lab05.c: 175:     SPBRGH = 0;
   925  01BE  019A               	clrf	26	;volatile
   926  01BF                     l1057:
   927                           
   928                           ;Lab05.c: 177:     RCSTAbits.SPEN = 1;
   929  01BF  1283               	bcf	3,5	;RP0=0, select bank0
   930  01C0  1303               	bcf	3,6	;RP1=0, select bank0
   931  01C1  1798               	bsf	24,7	;volatile
   932  01C2                     l1059:
   933                           
   934                           ;Lab05.c: 178:     RCSTAbits.RX9 = 0;
   935  01C2  1318               	bcf	24,6	;volatile
   936  01C3                     l1061:
   937                           
   938                           ;Lab05.c: 179:     RCSTAbits.CREN = 1;
   939  01C3  1618               	bsf	24,4	;volatile
   940  01C4                     l1063:
   941                           
   942                           ;Lab05.c: 181:     TXSTAbits.TXEN = 1;
   943  01C4  1683               	bsf	3,5	;RP0=1, select bank1
   944  01C5  1303               	bcf	3,6	;RP1=0, select bank1
   945  01C6  1698               	bsf	24,5	;volatile
   946  01C7                     l91:
   947  01C7  0008               	return
   948  01C8                     __end_of_setup:
   949                           
   950                           	psect	text3
   951  01F2                     __ptext3:	
   952 ;; *************** function _decenas *****************
   953 ;; Defined at:
   954 ;;		line 189 in file "Lab05.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  dato            2    8[BANK0 ] int 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  out             1   11[BANK0 ] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      unsigned char 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0, pclath, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       2       0       0       0
   969 ;;      Locals:         0       1       0       0       0
   970 ;;      Temps:          0       1       0       0       0
   971 ;;      Totals:         0       4       0       0       0
   972 ;;Total ram usage:        4 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    2
   975 ;; This function calls:
   976 ;;		___awdiv
   977 ;;		___awmod
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           
   984                           ;psect for function _decenas
   985  01F2                     _decenas:
   986  01F2                     l1071:	
   987                           ;incstack = 0
   988                           ; Regs used in _decenas: [wreg+status,2+status,0+pclath+cstack]
   989                           
   990                           
   991                           ;Lab05.c: 190:     char out;;Lab05.c: 191:     out = (dato % 100) / 10;
   992  01F2  300A               	movlw	10
   993  01F3  1283               	bcf	3,5	;RP0=0, select bank0
   994  01F4  1303               	bcf	3,6	;RP1=0, select bank0
   995  01F5  00A0               	movwf	___awdiv@divisor
   996  01F6  3000               	movlw	0
   997  01F7  00A1               	movwf	___awdiv@divisor+1
   998  01F8  0829               	movf	decenas@dato+1,w
   999  01F9  00F6               	movwf	___awmod@dividend+1
  1000  01FA  0828               	movf	decenas@dato,w
  1001  01FB  00F5               	movwf	___awmod@dividend
  1002  01FC  3064               	movlw	100
  1003  01FD  00F3               	movwf	___awmod@divisor
  1004  01FE  3000               	movlw	0
  1005  01FF  00F4               	movwf	___awmod@divisor+1
  1006  0200  120A  118A  2141  120A  118A  	fcall	___awmod
  1007  0205  0874               	movf	?___awmod+1,w
  1008  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0208  00A3               	movwf	___awdiv@dividend+1
  1011  0209  0873               	movf	?___awmod,w
  1012  020A  00A2               	movwf	___awdiv@dividend
  1013  020B  120A  118A  20D8  120A  118A  	fcall	___awdiv
  1014  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0212  0820               	movf	?___awdiv,w
  1017  0213  00AA               	movwf	??_decenas
  1018  0214  082A               	movf	??_decenas,w
  1019  0215  00AB               	movwf	decenas@out
  1020  0216                     l1073:
  1021                           
  1022                           ;Lab05.c: 192:     return out;
  1023  0216  082B               	movf	decenas@out,w
  1024  0217                     l97:
  1025  0217  0008               	return
  1026  0218                     __end_of_decenas:
  1027                           
  1028                           	psect	text4
  1029  0141                     __ptext4:	
  1030 ;; *************** function ___awmod *****************
  1031 ;; Defined at:
  1032 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  divisor         2    3[COMMON] int 
  1035 ;;  dividend        2    5[COMMON] int 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  sign            1    9[COMMON] unsigned char 
  1038 ;;  counter         1    8[COMMON] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  2    3[COMMON] int 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2, status,0
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         4       0       0       0       0
  1049 ;;      Locals:         2       0       0       0       0
  1050 ;;      Temps:          1       0       0       0       0
  1051 ;;      Totals:         7       0       0       0       0
  1052 ;;Total ram usage:        7 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_decenas
  1059 ;;		_unidades
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function ___awmod
  1065  0141                     ___awmod:
  1066  0141                     l979:	
  1067                           ;incstack = 0
  1068                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1069                           
  1070  0141  01F9               	clrf	___awmod@sign
  1071  0142                     l981:
  1072  0142  1FF6               	btfss	___awmod@dividend+1,7
  1073  0143  2945               	goto	u421
  1074  0144  2946               	goto	u420
  1075  0145                     u421:
  1076  0145  294D               	goto	l987
  1077  0146                     u420:
  1078  0146                     l983:
  1079  0146  09F5               	comf	___awmod@dividend,f
  1080  0147  09F6               	comf	___awmod@dividend+1,f
  1081  0148  0AF5               	incf	___awmod@dividend,f
  1082  0149  1903               	skipnz
  1083  014A  0AF6               	incf	___awmod@dividend+1,f
  1084  014B                     l985:
  1085  014B  01F9               	clrf	___awmod@sign
  1086  014C  0AF9               	incf	___awmod@sign,f
  1087  014D                     l987:
  1088  014D  1FF4               	btfss	___awmod@divisor+1,7
  1089  014E  2950               	goto	u431
  1090  014F  2951               	goto	u430
  1091  0150                     u431:
  1092  0150  2956               	goto	l991
  1093  0151                     u430:
  1094  0151                     l989:
  1095  0151  09F3               	comf	___awmod@divisor,f
  1096  0152  09F4               	comf	___awmod@divisor+1,f
  1097  0153  0AF3               	incf	___awmod@divisor,f
  1098  0154  1903               	skipnz
  1099  0155  0AF4               	incf	___awmod@divisor+1,f
  1100  0156                     l991:
  1101  0156  0873               	movf	___awmod@divisor,w
  1102  0157  0474               	iorwf	___awmod@divisor+1,w
  1103  0158  1903               	btfsc	3,2
  1104  0159  295B               	goto	u441
  1105  015A  295C               	goto	u440
  1106  015B                     u441:
  1107  015B  298B               	goto	l1009
  1108  015C                     u440:
  1109  015C                     l993:
  1110  015C  01F8               	clrf	___awmod@counter
  1111  015D  0AF8               	incf	___awmod@counter,f
  1112  015E  296A               	goto	l999
  1113  015F                     l995:
  1114  015F  3001               	movlw	1
  1115  0160                     u455:
  1116  0160  1003               	clrc
  1117  0161  0DF3               	rlf	___awmod@divisor,f
  1118  0162  0DF4               	rlf	___awmod@divisor+1,f
  1119  0163  3EFF               	addlw	-1
  1120  0164  1D03               	skipz
  1121  0165  2960               	goto	u455
  1122  0166                     l997:
  1123  0166  3001               	movlw	1
  1124  0167  00F7               	movwf	??___awmod
  1125  0168  0877               	movf	??___awmod,w
  1126  0169  07F8               	addwf	___awmod@counter,f
  1127  016A                     l999:
  1128  016A  1FF4               	btfss	___awmod@divisor+1,7
  1129  016B  296D               	goto	u461
  1130  016C  296E               	goto	u460
  1131  016D                     u461:
  1132  016D  295F               	goto	l995
  1133  016E                     u460:
  1134  016E                     l1001:
  1135  016E  0874               	movf	___awmod@divisor+1,w
  1136  016F  0276               	subwf	___awmod@dividend+1,w
  1137  0170  1D03               	skipz
  1138  0171  2974               	goto	u475
  1139  0172  0873               	movf	___awmod@divisor,w
  1140  0173  0275               	subwf	___awmod@dividend,w
  1141  0174                     u475:
  1142  0174  1C03               	skipc
  1143  0175  2977               	goto	u471
  1144  0176  2978               	goto	u470
  1145  0177                     u471:
  1146  0177  297E               	goto	l1005
  1147  0178                     u470:
  1148  0178                     l1003:
  1149  0178  0873               	movf	___awmod@divisor,w
  1150  0179  02F5               	subwf	___awmod@dividend,f
  1151  017A  0874               	movf	___awmod@divisor+1,w
  1152  017B  1C03               	skipc
  1153  017C  03F6               	decf	___awmod@dividend+1,f
  1154  017D  02F6               	subwf	___awmod@dividend+1,f
  1155  017E                     l1005:
  1156  017E  3001               	movlw	1
  1157  017F                     u485:
  1158  017F  1003               	clrc
  1159  0180  0CF4               	rrf	___awmod@divisor+1,f
  1160  0181  0CF3               	rrf	___awmod@divisor,f
  1161  0182  3EFF               	addlw	-1
  1162  0183  1D03               	skipz
  1163  0184  297F               	goto	u485
  1164  0185                     l1007:
  1165  0185  3001               	movlw	1
  1166  0186  02F8               	subwf	___awmod@counter,f
  1167  0187  1D03               	btfss	3,2
  1168  0188  298A               	goto	u491
  1169  0189  298B               	goto	u490
  1170  018A                     u491:
  1171  018A  296E               	goto	l1001
  1172  018B                     u490:
  1173  018B                     l1009:
  1174  018B  0879               	movf	___awmod@sign,w
  1175  018C  1903               	btfsc	3,2
  1176  018D  298F               	goto	u501
  1177  018E  2990               	goto	u500
  1178  018F                     u501:
  1179  018F  2995               	goto	l1013
  1180  0190                     u500:
  1181  0190                     l1011:
  1182  0190  09F5               	comf	___awmod@dividend,f
  1183  0191  09F6               	comf	___awmod@dividend+1,f
  1184  0192  0AF5               	incf	___awmod@dividend,f
  1185  0193  1903               	skipnz
  1186  0194  0AF6               	incf	___awmod@dividend+1,f
  1187  0195                     l1013:
  1188  0195  0876               	movf	___awmod@dividend+1,w
  1189  0196  00F4               	movwf	?___awmod+1
  1190  0197  0875               	movf	___awmod@dividend,w
  1191  0198  00F3               	movwf	?___awmod
  1192  0199                     l367:
  1193  0199  0008               	return
  1194  019A                     __end_of___awmod:
  1195                           
  1196                           	psect	text5
  1197  0234                     __ptext5:	
  1198 ;; *************** function _centenas *****************
  1199 ;; Defined at:
  1200 ;;		line 184 in file "Lab05.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  dato            2    8[BANK0 ] int 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  out             1   11[BANK0 ] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      unsigned char 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, pclath, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       2       0       0       0
  1215 ;;      Locals:         0       1       0       0       0
  1216 ;;      Temps:          0       1       0       0       0
  1217 ;;      Totals:         0       4       0       0       0
  1218 ;;Total ram usage:        4 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    2
  1221 ;; This function calls:
  1222 ;;		___awdiv
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _centenas
  1230  0234                     _centenas:
  1231  0234                     l1065:	
  1232                           ;incstack = 0
  1233                           ; Regs used in _centenas: [wreg+status,2+status,0+pclath+cstack]
  1234                           
  1235                           
  1236                           ;Lab05.c: 185:     char out = dato / 100;
  1237  0234  3064               	movlw	100
  1238  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0237  00A0               	movwf	___awdiv@divisor
  1241  0238  3000               	movlw	0
  1242  0239  00A1               	movwf	___awdiv@divisor+1
  1243  023A  0829               	movf	centenas@dato+1,w
  1244  023B  00A3               	movwf	___awdiv@dividend+1
  1245  023C  0828               	movf	centenas@dato,w
  1246  023D  00A2               	movwf	___awdiv@dividend
  1247  023E  120A  118A  20D8  120A  118A  	fcall	___awdiv
  1248  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0245  0820               	movf	?___awdiv,w
  1251  0246  00AA               	movwf	??_centenas
  1252  0247  082A               	movf	??_centenas,w
  1253  0248  00AB               	movwf	centenas@out
  1254  0249                     l1067:
  1255                           
  1256                           ;Lab05.c: 186:     return out;
  1257  0249  082B               	movf	centenas@out,w
  1258  024A                     l94:
  1259  024A  0008               	return
  1260  024B                     __end_of_centenas:
  1261                           
  1262                           	psect	text6
  1263  00D8                     __ptext6:	
  1264 ;; *************** function ___awdiv *****************
  1265 ;; Defined at:
  1266 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  divisor         2    0[BANK0 ] int 
  1269 ;;  dividend        2    2[BANK0 ] int 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  quotient        2    6[BANK0 ] int 
  1272 ;;  sign            1    5[BANK0 ] unsigned char 
  1273 ;;  counter         1    4[BANK0 ] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  2    0[BANK0 ] int 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         0       4       0       0       0
  1284 ;;      Locals:         0       4       0       0       0
  1285 ;;      Temps:          1       0       0       0       0
  1286 ;;      Totals:         1       8       0       0       0
  1287 ;;Total ram usage:        9 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_centenas
  1294 ;;		_decenas
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function ___awdiv
  1300  00D8                     ___awdiv:
  1301  00D8                     l935:	
  1302                           ;incstack = 0
  1303                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1304                           
  1305  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1306  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1307  00DA  01A5               	clrf	___awdiv@sign
  1308  00DB                     l937:
  1309  00DB  1FA1               	btfss	___awdiv@divisor+1,7
  1310  00DC  28DE               	goto	u321
  1311  00DD  28DF               	goto	u320
  1312  00DE                     u321:
  1313  00DE  28E6               	goto	l943
  1314  00DF                     u320:
  1315  00DF                     l939:
  1316  00DF  09A0               	comf	___awdiv@divisor,f
  1317  00E0  09A1               	comf	___awdiv@divisor+1,f
  1318  00E1  0AA0               	incf	___awdiv@divisor,f
  1319  00E2  1903               	skipnz
  1320  00E3  0AA1               	incf	___awdiv@divisor+1,f
  1321  00E4                     l941:
  1322  00E4  01A5               	clrf	___awdiv@sign
  1323  00E5  0AA5               	incf	___awdiv@sign,f
  1324  00E6                     l943:
  1325  00E6  1FA3               	btfss	___awdiv@dividend+1,7
  1326  00E7  28E9               	goto	u331
  1327  00E8  28EA               	goto	u330
  1328  00E9                     u331:
  1329  00E9  28F3               	goto	l949
  1330  00EA                     u330:
  1331  00EA                     l945:
  1332  00EA  09A2               	comf	___awdiv@dividend,f
  1333  00EB  09A3               	comf	___awdiv@dividend+1,f
  1334  00EC  0AA2               	incf	___awdiv@dividend,f
  1335  00ED  1903               	skipnz
  1336  00EE  0AA3               	incf	___awdiv@dividend+1,f
  1337  00EF                     l947:
  1338  00EF  3001               	movlw	1
  1339  00F0  00FA               	movwf	??___awdiv
  1340  00F1  087A               	movf	??___awdiv,w
  1341  00F2  06A5               	xorwf	___awdiv@sign,f
  1342  00F3                     l949:
  1343  00F3  01A6               	clrf	___awdiv@quotient
  1344  00F4  01A7               	clrf	___awdiv@quotient+1
  1345  00F5                     l951:
  1346  00F5  0820               	movf	___awdiv@divisor,w
  1347  00F6  0421               	iorwf	___awdiv@divisor+1,w
  1348  00F7  1903               	btfsc	3,2
  1349  00F8  28FA               	goto	u341
  1350  00F9  28FB               	goto	u340
  1351  00FA                     u341:
  1352  00FA  2932               	goto	l971
  1353  00FB                     u340:
  1354  00FB                     l953:
  1355  00FB  01A4               	clrf	___awdiv@counter
  1356  00FC  0AA4               	incf	___awdiv@counter,f
  1357  00FD  2909               	goto	l959
  1358  00FE                     l955:
  1359  00FE  3001               	movlw	1
  1360  00FF                     u355:
  1361  00FF  1003               	clrc
  1362  0100  0DA0               	rlf	___awdiv@divisor,f
  1363  0101  0DA1               	rlf	___awdiv@divisor+1,f
  1364  0102  3EFF               	addlw	-1
  1365  0103  1D03               	skipz
  1366  0104  28FF               	goto	u355
  1367  0105                     l957:
  1368  0105  3001               	movlw	1
  1369  0106  00FA               	movwf	??___awdiv
  1370  0107  087A               	movf	??___awdiv,w
  1371  0108  07A4               	addwf	___awdiv@counter,f
  1372  0109                     l959:
  1373  0109  1FA1               	btfss	___awdiv@divisor+1,7
  1374  010A  290C               	goto	u361
  1375  010B  290D               	goto	u360
  1376  010C                     u361:
  1377  010C  28FE               	goto	l955
  1378  010D                     u360:
  1379  010D                     l961:
  1380  010D  3001               	movlw	1
  1381  010E                     u375:
  1382  010E  1003               	clrc
  1383  010F  0DA6               	rlf	___awdiv@quotient,f
  1384  0110  0DA7               	rlf	___awdiv@quotient+1,f
  1385  0111  3EFF               	addlw	-1
  1386  0112  1D03               	skipz
  1387  0113  290E               	goto	u375
  1388  0114  0821               	movf	___awdiv@divisor+1,w
  1389  0115  0223               	subwf	___awdiv@dividend+1,w
  1390  0116  1D03               	skipz
  1391  0117  291A               	goto	u385
  1392  0118  0820               	movf	___awdiv@divisor,w
  1393  0119  0222               	subwf	___awdiv@dividend,w
  1394  011A                     u385:
  1395  011A  1C03               	skipc
  1396  011B  291D               	goto	u381
  1397  011C  291E               	goto	u380
  1398  011D                     u381:
  1399  011D  2925               	goto	l967
  1400  011E                     u380:
  1401  011E                     l963:
  1402  011E  0820               	movf	___awdiv@divisor,w
  1403  011F  02A2               	subwf	___awdiv@dividend,f
  1404  0120  0821               	movf	___awdiv@divisor+1,w
  1405  0121  1C03               	skipc
  1406  0122  03A3               	decf	___awdiv@dividend+1,f
  1407  0123  02A3               	subwf	___awdiv@dividend+1,f
  1408  0124                     l965:
  1409  0124  1426               	bsf	___awdiv@quotient,0
  1410  0125                     l967:
  1411  0125  3001               	movlw	1
  1412  0126                     u395:
  1413  0126  1003               	clrc
  1414  0127  0CA1               	rrf	___awdiv@divisor+1,f
  1415  0128  0CA0               	rrf	___awdiv@divisor,f
  1416  0129  3EFF               	addlw	-1
  1417  012A  1D03               	skipz
  1418  012B  2926               	goto	u395
  1419  012C                     l969:
  1420  012C  3001               	movlw	1
  1421  012D  02A4               	subwf	___awdiv@counter,f
  1422  012E  1D03               	btfss	3,2
  1423  012F  2931               	goto	u401
  1424  0130  2932               	goto	u400
  1425  0131                     u401:
  1426  0131  290D               	goto	l961
  1427  0132                     u400:
  1428  0132                     l971:
  1429  0132  0825               	movf	___awdiv@sign,w
  1430  0133  1903               	btfsc	3,2
  1431  0134  2936               	goto	u411
  1432  0135  2937               	goto	u410
  1433  0136                     u411:
  1434  0136  293C               	goto	l975
  1435  0137                     u410:
  1436  0137                     l973:
  1437  0137  09A6               	comf	___awdiv@quotient,f
  1438  0138  09A7               	comf	___awdiv@quotient+1,f
  1439  0139  0AA6               	incf	___awdiv@quotient,f
  1440  013A  1903               	skipnz
  1441  013B  0AA7               	incf	___awdiv@quotient+1,f
  1442  013C                     l975:
  1443  013C  0827               	movf	___awdiv@quotient+1,w
  1444  013D  00A1               	movwf	?___awdiv+1
  1445  013E  0826               	movf	___awdiv@quotient,w
  1446  013F  00A0               	movwf	?___awdiv
  1447  0140                     l354:
  1448  0140  0008               	return
  1449  0141                     __end_of___awdiv:
  1450                           
  1451                           	psect	text7
  1452  024B                     __ptext7:	
  1453 ;; *************** function ___bmul *****************
  1454 ;; Defined at:
  1455 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  multiplier      1    wreg     unsigned char 
  1458 ;;  multiplicand    1    3[COMMON] unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  multiplier      1    6[COMMON] unsigned char 
  1461 ;;  product         1    5[COMMON] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         1       0       0       0       0
  1472 ;;      Locals:         2       0       0       0       0
  1473 ;;      Temps:          1       0       0       0       0
  1474 ;;      Totals:         4       0       0       0       0
  1475 ;;Total ram usage:        4 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    1
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function ___bmul
  1487  024B                     ___bmul:
  1488                           
  1489                           ;incstack = 0
  1490                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1491                           ;___bmul@multiplier stored from wreg
  1492  024B  00F6               	movwf	___bmul@multiplier
  1493  024C                     l1091:
  1494  024C  01F5               	clrf	___bmul@product
  1495  024D                     l1093:
  1496  024D  1C76               	btfss	___bmul@multiplier,0
  1497  024E  2A50               	goto	u521
  1498  024F  2A51               	goto	u520
  1499  0250                     u521:
  1500  0250  2A55               	goto	l1097
  1501  0251                     u520:
  1502  0251                     l1095:
  1503  0251  0873               	movf	___bmul@multiplicand,w
  1504  0252  00F4               	movwf	??___bmul
  1505  0253  0874               	movf	??___bmul,w
  1506  0254  07F5               	addwf	___bmul@product,f
  1507  0255                     l1097:
  1508  0255  1003               	clrc
  1509  0256  0DF3               	rlf	___bmul@multiplicand,f
  1510  0257                     l1099:
  1511  0257  1003               	clrc
  1512  0258  0CF6               	rrf	___bmul@multiplier,f
  1513  0259  0876               	movf	___bmul@multiplier,w
  1514  025A  1D03               	btfss	3,2
  1515  025B  2A5D               	goto	u531
  1516  025C  2A5E               	goto	u530
  1517  025D                     u531:
  1518  025D  2A4D               	goto	l1093
  1519  025E                     u530:
  1520  025E                     l1101:
  1521  025E  0875               	movf	___bmul@product,w
  1522  025F                     l227:
  1523  025F  0008               	return
  1524  0260                     __end_of___bmul:
  1525                           
  1526                           	psect	text8
  1527  0260                     __ptext8:	
  1528 ;; *************** function _USART_Tx *****************
  1529 ;; Defined at:
  1530 ;;		line 201 in file "Lab05.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  data            1    wreg     unsigned char 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  data            1    3[COMMON] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       0       0       0       0
  1545 ;;      Locals:         1       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0
  1547 ;;      Totals:         1       0       0       0       0
  1548 ;;Total ram usage:        1 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;;		_USART_Cadena
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _USART_Tx
  1561  0260                     _USART_Tx:
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _USART_Tx: [wreg]
  1565                           ;USART_Tx@data stored from wreg
  1566  0260  00F3               	movwf	USART_Tx@data
  1567  0261                     l1087:
  1568  0261                     l103:	
  1569                           ;Lab05.c: 202:     while(TXSTAbits.TRMT == 0);
  1570                           
  1571  0261  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0262  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0263  1C98               	btfss	24,1	;volatile
  1574  0264  2A66               	goto	u511
  1575  0265  2A67               	goto	u510
  1576  0266                     u511:
  1577  0266  2A61               	goto	l103
  1578  0267                     u510:
  1579  0267                     l1089:
  1580                           
  1581                           ;Lab05.c: 203:     TXREG = data;
  1582  0267  0873               	movf	USART_Tx@data,w
  1583  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1585  026A  0099               	movwf	25	;volatile
  1586  026B                     l106:
  1587  026B  0008               	return
  1588  026C                     __end_of_USART_Tx:
  1589                           
  1590                           	psect	text9
  1591  026C                     __ptext9:	
  1592 ;; *************** function _USART_Rx *****************
  1593 ;; Defined at:
  1594 ;;		line 206 in file "Lab05.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _USART_Rx
  1624  026C                     _USART_Rx:
  1625  026C                     l1083:	
  1626                           ;incstack = 0
  1627                           ; Regs used in _USART_Rx: [wreg]
  1628                           
  1629                           
  1630                           ;Lab05.c: 207:     return RCREG;
  1631  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1632  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1633  026E  081A               	movf	26,w	;volatile
  1634  026F                     l109:
  1635  026F  0008               	return
  1636  0270                     __end_of_USART_Rx:
  1637                           
  1638                           	psect	text10
  1639  0218                     __ptext10:	
  1640 ;; *************** function _isr *****************
  1641 ;; Defined at:
  1642 ;;		line 70 in file "Lab05.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0
  1658 ;;      Temps:          3       0       0       0       0
  1659 ;;      Totals:         3       0       0       0       0
  1660 ;;Total ram usage:        3 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		Interrupt level 1
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _isr
  1671  0218                     _isr:
  1672  0218                     i1l1105:
  1673                           
  1674                           ;Lab05.c: 72:     if (INTCONbits.RBIF == 1){
  1675  0218  1C0B               	btfss	11,0	;volatile
  1676  0219  2A1B               	goto	u54_21
  1677  021A  2A1C               	goto	u54_20
  1678  021B                     u54_21:
  1679  021B  2A2D               	goto	i1l76
  1680  021C                     u54_20:
  1681  021C                     i1l1107:
  1682                           
  1683                           ;Lab05.c: 73:         if (PORTBbits.RB0 == 1){
  1684  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1685  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1686  021E  1C06               	btfss	6,0	;volatile
  1687  021F  2A21               	goto	u55_21
  1688  0220  2A22               	goto	u55_20
  1689  0221                     u55_21:
  1690  0221  2A26               	goto	i1l1111
  1691  0222                     u55_20:
  1692  0222                     i1l1109:
  1693                           
  1694                           ;Lab05.c: 74:             contador++;
  1695  0222  3001               	movlw	1
  1696  0223  00F0               	movwf	??_isr
  1697  0224  0870               	movf	??_isr,w
  1698  0225  07B2               	addwf	_contador,f
  1699  0226                     i1l1111:
  1700                           
  1701                           ;Lab05.c: 77:         if (PORTBbits.RB1 == 1){
  1702  0226  1C86               	btfss	6,1	;volatile
  1703  0227  2A29               	goto	u56_21
  1704  0228  2A2A               	goto	u56_20
  1705  0229                     u56_21:
  1706  0229  2A2C               	goto	i1l1115
  1707  022A                     u56_20:
  1708  022A                     i1l1113:
  1709                           
  1710                           ;Lab05.c: 78:             contador--;
  1711  022A  3001               	movlw	1
  1712  022B  02B2               	subwf	_contador,f
  1713  022C                     i1l1115:
  1714                           
  1715                           ;Lab05.c: 81:         INTCONbits.RBIF = 0;
  1716  022C  100B               	bcf	11,0	;volatile
  1717  022D                     i1l76:
  1718  022D  0872               	movf	??_isr+2,w
  1719  022E  008A               	movwf	10
  1720  022F  0E71               	swapf	??_isr+1,w
  1721  0230  0083               	movwf	3
  1722  0231  0EFE               	swapf	btemp,f
  1723  0232  0E7E               	swapf	btemp,w
  1724  0233  0009               	retfie
  1725  0234                     __end_of_isr:
  1726  007E                     btemp	set	126	;btemp
  1727  007E                     wtemp0	set	126
  1728                           
  1729                           	psect	intentry
  1730  0004                     __pintentry:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _isr: [wreg+status,2+status,0]
  1733                           
  1734  0004                     interrupt_function:
  1735  007E                     saved_w	set	btemp
  1736  0004  00FE               	movwf	btemp
  1737  0005  0E03               	swapf	3,w
  1738  0006  00F1               	movwf	??_isr+1
  1739  0007  080A               	movf	10,w
  1740  0008  00F2               	movwf	??_isr+2
  1741  0009  120A  118A  2A18   	ljmp	_isr
  1742                           
  1743                           	psect	config
  1744                           
  1745                           ;Config register CONFIG1 @ 0x2007
  1746                           ;	Oscillator Selection bits
  1747                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1748                           ;	Watchdog Timer Enable bit
  1749                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1750                           ;	Power-up Timer Enable bit
  1751                           ;	PWRTE = OFF, PWRT disabled
  1752                           ;	RE3/MCLR pin function select bit
  1753                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1754                           ;	Code Protection bit
  1755                           ;	CP = OFF, Program memory code protection is disabled
  1756                           ;	Data Code Protection bit
  1757                           ;	CPD = OFF, Data memory code protection is disabled
  1758                           ;	Brown Out Reset Selection bits
  1759                           ;	BOREN = OFF, BOR disabled
  1760                           ;	Internal External Switchover bit
  1761                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1762                           ;	Fail-Safe Clock Monitor Enabled bit
  1763                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1764                           ;	Low Voltage Programming Enable bit
  1765                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1766                           ;	In-Circuit Debugger Mode bit
  1767                           ;	DEBUG = 0x1, unprogrammed default
  1768  2007                     	org	8199
  1769  2007  20D4               	dw	8404
  1770                           
  1771                           ;Config register CONFIG2 @ 0x2008
  1772                           ;	Brown-out Reset Selection bit
  1773                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1774                           ;	Flash Program Memory Self Write Enable bits
  1775                           ;	WRT = OFF, Write protection off
  1776  2008                     	org	8200
  1777  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     15      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_unidades
    _unidades->___awmod
    _decenas->___awdiv
    _centenas->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_centenas
    _main->_decenas
    _decenas->___awdiv
    _centenas->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3364
                                             12 BANK0      3     3      0
                           _USART_Rx
                           _USART_Tx
                             ___bmul
                           _centenas
                            _decenas
                              _setup
                           _unidades
 ---------------------------------------------------------------------------------
 (1) _unidades                                             6     4      2     896
                                             10 COMMON     1     1      0
                                              0 BANK0      5     3      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decenas                                              4     2      2    1477
                                              8 BANK0      4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _centenas                                             4     2      2     725
                                              8 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Rx
   _USART_Tx
   ___bmul
   _centenas
     ___awdiv
       ___awmod (ARG)
   _decenas
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _setup
   _unidades
     ___awmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 18 16:38:25 2021

         ___bmul@product 0075                       l81 0020                       l91 01C7  
                     l94 024A                       l97 0217             ___awdiv@sign 0025  
                    l100 01F1                      l103 0261                      l106 026B  
                    l109 026F                      l227 025F                      l354 0140  
                    l367 0199                      l941 00E4                      l951 00F5  
                    l943 00E6                      l935 00D8                      l961 010D  
                    l953 00FB                      l945 00EA                      l937 00DB  
                    l963 011E                      l955 00FE                      l971 0132  
                    l947 00EF                      l939 00DF                      l973 0137  
                    l965 0124                      l957 0105                      l949 00F3  
                    l981 0142                      l975 013C                      l967 0125  
                    l959 0109                      l991 0156                      l983 0146  
                    l969 012C                      l993 015C                      l985 014B  
                    l995 015F                      l987 014D                      l979 0141  
                    l997 0166                      l989 0151                      l999 016A  
                    u400 0132                      u320 00DF                      u401 0131  
                    u321 00DE                      u410 0137                      u330 00EA  
                    u411 0136                      u331 00E9                      u340 00FB  
                    u500 0190                      u420 0146                      u341 00FA  
                    u501 018F                      u421 0145                      u510 0267  
                    u430 0151                      u511 0266                      u431 0150  
                    u520 0251                      u360 010D                      u440 015C  
                    u600 0099                      u521 0250                      u361 010C  
                    u441 015B                      u601 0098                      u530 025E  
                    u610 00AB                      u531 025D                      u355 00FF  
                    u611 00AA                      u380 011E                      u460 016E  
                    u381 011D                      u461 016D                      u470 0178  
                    u375 010E                      u471 0177                      u455 0160  
                    u385 011A                      u490 018B                      u570 0065  
                    u395 0126                      u491 018A                      u475 0174  
                    u571 0064                      u580 0075                      u485 017F  
                    u581 0074                      u590 0093                      u591 0092  
                    _ada 002F                      _dec 0036                      _cen 0037  
                    _isr 0218                      fsr0 0004                      _uni 0035  
                    indf 0000             ___awmod@sign 0079                     l1001 016E  
                   l1011 0190                     l1003 0178                     l1101 025E  
                   l1013 0195                     l1005 017E                     l1021 01A3  
                   l1007 0185                     l1031 01AC                     l1023 01A4  
                   l1009 018B                     l1041 01B1                     l1033 01AD  
                   l1025 01A7                     l1017 019A                     l1121 0059  
                   l1051 01B6                     l1043 01B2                     l1035 01AE  
                   l1027 01A8                     l1019 01A1                     l1131 0075  
                   l1123 005D                     l1061 01C3                     l1053 01B7  
                   l1045 01B3                     l1037 01AF                     l1029 01A9  
                   l1141 00A5                     l1133 008B                     l1125 0061  
                   l1117 001B                     l1071 01F2                     l1063 01C4  
                   l1055 01BA                     l1047 01B4                     l1039 01B0  
                   l1151 00D1                     l1143 00AB                     l1135 0093  
                   l1127 0065                     l1119 0055                     l1065 0234  
                   l1073 0216                     l1057 01BF                     l1049 01B5  
                   l1145 00AC                     l1137 0099                     l1129 006F  
                   l1153 00D3                     l1083 026C                     l1091 024C  
                   l1067 0249                     l1059 01C2                     l1147 00BC  
                   l1139 00A1                     l1093 024D                     l1077 01C8  
                   l1149 00CC                     l1087 0261                     l1095 0251  
                   l1079 01F0                     l1089 0267                     l1097 0255  
                   l1099 0257                     ?_isr 0070                     i1l76 022D  
                   _main 001B                     btemp 007E                     start 000C  
      ___bmul@multiplier 0076                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 0141          __end_of___awmod 019A                    _ANSEL 0188  
        ___awdiv@divisor 0020          ___awdiv@counter 0024                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    u54_20 021C                    u54_21 021B  
                  u55_20 0222                    u55_21 0221                    u56_20 022A  
                  u56_21 0229                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088          __end_of_decenas 0218                    _TXREG 0019  
           unidades@dato 0020                    _setup 019A         __end_of_USART_Rx 0270  
       __end_of_USART_Tx 026C             USART_Tx@data 0073                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00D8                   ??_main 002C         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1111 0226  
                 i1l1113 022A                   i1l1105 0218                   i1l1115 022C  
                 i1l1107 021C                   i1l1109 0222                   _SPBRGH 009A  
       __end_of_centenas 024B                   ___bmul 024B                ??___awdiv 007A  
              ??___awmod 0077                ??_decenas 002A         ___awdiv@quotient 0026  
        ___awmod@divisor 0073          ___awmod@counter 0078                   saved_w 007E  
       __end_of_unidades 01F2  __end_of__initialization 0017      ___bmul@multiplicand 0073  
         __pcstackCOMMON 0070            __end_of_setup 01C8                ?_USART_Rx 0070  
              ?_USART_Tx 0070                  ??_setup 0073               __pbssBANK0 002F  
             __pmaintext 001B                  ?___bmul 0073               __pintentry 0004  
             ??_USART_Rx 0073               ??_USART_Tx 0073                ?_centenas 0028  
             decenas@out 002B          __size_of___bmul 0015                  ___awdiv 00D8  
                ___awmod 0141                ?_unidades 0020                  _decenas 01F2  
                __ptext1 01C8                  __ptext2 019A                  __ptext3 01F2  
                __ptext4 0141                  __ptext5 0234                  __ptext6 00D8  
                __ptext7 024B                  __ptext8 0260                  __ptext9 026C  
                _ingreso 0031             __size_of_isr 001C         ___awmod@dividend 0075  
             ??_centenas 002A     end_of_initialization 0017                _RCSTAbits 0018  
             ??_unidades 007A                _PORTBbits 0006                _TXSTAbits 0098  
         __end_of___bmul 0260              _BAUDCTLbits 0187              unidades@out 0024  
      __size_of_USART_Rx 0004        __size_of_USART_Tx 000C      start_initialization 000F  
            __end_of_isr 0234                 ??___bmul 0074                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_centenas 0017                __pnvBANK0 0035  
               ?___awdiv 0020                 ?___awmod 0073                 ?_decenas 0028  
      __size_of_unidades 002A           __size_of_setup 002E        interrupt_function 0004  
               _IOCBbits 0096                 _PIR1bits 000C                 _USART_Rx 026C  
               _USART_Tx 0260              decenas@dato 0028         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of_decenas 0026             centenas@dato 0028  
               _centenas 0234                 __ptext10 0218                 _contador 0032  
               _entrante 0033            __size_of_main 00BD                 _posicion 0030  
               _unidades 01C8               _INTCONbits 000B                 intlevel1 0000  
            centenas@out 002B               _OSCCONbits 008F             _unidades$969 0022  
