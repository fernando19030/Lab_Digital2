

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 20:50:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  000B                     _INTCONbits	set	11
   290  001E                     _ADRESH	set	30
   291  001F                     _ADCON0bits	set	31
   292  0008                     _PORTD	set	8
   293  0006                     _PORTB	set	6
   294  000C                     _PIR1bits	set	12
   295  0094                     _SSPSTATbits	set	148
   296  0094                     _SSPSTAT	set	148
   297  009F                     _ADCON1bits	set	159
   298  008C                     _PIE1bits	set	140
   299  008F                     _OSCCONbits	set	143
   300  0085                     _TRISAbits	set	133
   301  0088                     _TRISD	set	136
   302  0086                     _TRISB	set	134
   303  0085                     _TRISA	set	133
   304  043B                     _TRISC3	set	1083
   305  043D                     _TRISC5	set	1085
   306  0189                     _ANSELH	set	393
   307  0188                     _ANSEL	set	392
   308                           
   309                           	psect	cinit
   310  0011                     start_initialization:	
   311                           ; #config settings
   312                           
   313  0011                     __initialization:
   314                           
   315                           ; Clear objects allocated to COMMON
   316  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   317  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   318  0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   319  0014  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   320  0015                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  0015                     __end_of__initialization:
   324  0015  0183               	clrf	3
   325  0016  120A  118A  28BC   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328  0077                     __pbssCOMMON:
   329  0077                     _comando:
   330  0077                     	ds	1
   331  0078                     _ADC2:
   332  0078                     	ds	1
   333  0079                     _ADC1:
   334  0079                     	ds	1
   335  007A                     _temporal:
   336  007A                     	ds	1
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:
   340  0070                     ?_spiRead:
   341  0070                     ??_spiRead:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_spiWrite:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_spiWrite:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_setup:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_isr:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_main:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_spiReceiveWait:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ??_spiReceiveWait:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     spiWrite@dat:	
   366                           ; 1 bytes @ 0x0
   367                           
   368                           
   369                           ; 1 bytes @ 0x0
   370  0070                     	ds	1
   371  0071                     ??_isr:
   372                           
   373                           ; 1 bytes @ 0x1
   374  0071                     	ds	5
   375  0076                     isr@comando:
   376                           
   377                           ; 1 bytes @ 0x6
   378  0076                     	ds	1
   379                           
   380                           	psect	cstackBANK0
   381  0020                     __pcstackBANK0:
   382  0020                     ?_spiInit:
   383  0020                     spiInit@sDataSample:	
   384                           ; 1 bytes @ 0x0
   385                           
   386                           
   387                           ; 1 bytes @ 0x0
   388  0020                     	ds	1
   389  0021                     spiInit@sClockIdle:
   390                           
   391                           ; 1 bytes @ 0x1
   392  0021                     	ds	1
   393  0022                     spiInit@sTransmitEdge:
   394                           
   395                           ; 1 bytes @ 0x2
   396  0022                     	ds	1
   397  0023                     ??_spiInit:
   398  0023                     spiInit@sType:	
   399                           ; 1 bytes @ 0x3
   400                           
   401                           
   402                           ; 1 bytes @ 0x3
   403  0023                     	ds	1
   404  0024                     ??_setup:
   405                           
   406                           ; 1 bytes @ 0x4
   407  0024                     	ds	1
   408  0025                     ??_main:
   409                           
   410                           ; 1 bytes @ 0x5
   411  0025                     	ds	1
   412                           
   413                           	psect	maintext
   414  00BC                     __pmaintext:	
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 98 in file "Lab03_Slave.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          0       1       0       0       0
   437 ;;      Totals:         0       1       0       0       0
   438 ;;Total ram usage:        1 bytes
   439 ;; Hardware stack levels required when called:    5
   440 ;; This function calls:
   441 ;;		_setup
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _main
   449  00BC                     _main:
   450  00BC                     l981:	
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   453                           
   454                           
   455                           ;Lab03_Slave.c: 99:     setup();
   456  00BC  120A  118A  2075  120A  118A  	fcall	_setup
   457  00C1                     l983:
   458                           
   459                           ;Lab03_Slave.c: 104:        if (ADCON0bits.GO == 0){
   460  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   461  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   462  00C3  189F               	btfsc	31,1	;volatile
   463  00C4  28C6               	goto	u121
   464  00C5  28C7               	goto	u120
   465  00C6                     u121:
   466  00C6  28C1               	goto	l983
   467  00C7                     u120:
   468  00C7                     l985:
   469                           
   470                           ;Lab03_Slave.c: 105:             if (ADCON0bits.CHS == 0) {
   471  00C7  0C1F               	rrf	31,w	;volatile
   472  00C8  00A5               	movwf	??_main
   473  00C9  0C25               	rrf	??_main,w
   474  00CA  390F               	andlw	15
   475  00CB  3A00               	xorlw	0
   476  00CC  1D03               	skipz
   477  00CD  28CF               	goto	u131
   478  00CE  28D0               	goto	u130
   479  00CF                     u131:
   480  00CF  28D5               	goto	l989
   481  00D0                     u130:
   482  00D0                     l987:
   483                           
   484                           ;Lab03_Slave.c: 106:                 ADCON0bits.CHS = 1;
   485  00D0  081F               	movf	31,w	;volatile
   486  00D1  39C3               	andlw	-61
   487  00D2  3804               	iorlw	4
   488  00D3  009F               	movwf	31	;volatile
   489                           
   490                           ;Lab03_Slave.c: 107:             }
   491  00D4  28D7               	goto	l991
   492  00D5                     l989:
   493                           
   494                           ;Lab03_Slave.c: 109:                 ADCON0bits.CHS = 0;
   495  00D5  30C3               	movlw	-61
   496  00D6  059F               	andwf	31,f	;volatile
   497  00D7                     l991:
   498                           
   499                           ;Lab03_Slave.c: 112:             _delay((unsigned long)((200)*(8000000/4000000.0)));
   500  00D7  3084               	movlw	132
   501  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   502  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   503  00DA  00A5               	movwf	??_main
   504  00DB                     u147:
   505  00DB  0BA5               	decfsz	??_main,f
   506  00DC  28DB               	goto	u147
   507  00DD  0000               	nop
   508  00DE                     l993:
   509                           
   510                           ;Lab03_Slave.c: 113:             ADCON0bits.GO = 1;
   511  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   512  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   513  00E0  149F               	bsf	31,1	;volatile
   514  00E1  28C1               	goto	l983
   515  00E2  120A  118A  280E   	ljmp	start
   516  00E5                     __end_of_main:
   517                           
   518                           	psect	text1
   519  0075                     __ptext1:	
   520 ;; *************** function _setup *****************
   521 ;; Defined at:
   522 ;;		line 121 in file "Lab03_Slave.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          0       1       0       0       0
   539 ;;      Totals:         0       1       0       0       0
   540 ;;Total ram usage:        1 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    4
   543 ;; This function calls:
   544 ;;		_spiInit
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _setup
   552  0075                     _setup:
   553  0075                     l935:	
   554                           ;incstack = 0
   555                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   556                           
   557                           
   558                           ;Lab03_Slave.c: 122:     ANSEL = 0x03;
   559  0075  3003               	movlw	3
   560  0076  1683               	bsf	3,5	;RP0=1, select bank3
   561  0077  1703               	bsf	3,6	;RP1=1, select bank3
   562  0078  0088               	movwf	8	;volatile
   563  0079                     l937:
   564                           
   565                           ;Lab03_Slave.c: 123:     ANSELH = 0x00;
   566  0079  0189               	clrf	9	;volatile
   567  007A                     l939:
   568                           
   569                           ;Lab03_Slave.c: 125:     TRISA = 0x03;
   570  007A  3003               	movlw	3
   571  007B  1683               	bsf	3,5	;RP0=1, select bank1
   572  007C  1303               	bcf	3,6	;RP1=0, select bank1
   573  007D  0085               	movwf	5	;volatile
   574                           
   575                           ;Lab03_Slave.c: 126:     TRISB = 0x00;
   576  007E  0186               	clrf	6	;volatile
   577                           
   578                           ;Lab03_Slave.c: 127:     TRISD = 0x00;
   579  007F  0188               	clrf	8	;volatile
   580                           
   581                           ;Lab03_Slave.c: 129:     PORTB = 0x00;
   582  0080  1283               	bcf	3,5	;RP0=0, select bank0
   583  0081  1303               	bcf	3,6	;RP1=0, select bank0
   584  0082  0186               	clrf	6	;volatile
   585                           
   586                           ;Lab03_Slave.c: 130:     PORTD = 0x00;
   587  0083  0188               	clrf	8	;volatile
   588  0084                     l941:
   589                           
   590                           ;Lab03_Slave.c: 132:     TRISAbits.TRISA5 = 1;
   591  0084  1683               	bsf	3,5	;RP0=1, select bank1
   592  0085  1303               	bcf	3,6	;RP1=0, select bank1
   593  0086  1685               	bsf	5,5	;volatile
   594  0087                     l943:
   595                           
   596                           ;Lab03_Slave.c: 133:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   597  0087  1283               	bcf	3,5	;RP0=0, select bank0
   598  0088  1303               	bcf	3,6	;RP1=0, select bank0
   599  0089  01A0               	clrf	spiInit@sDataSample
   600  008A  01A1               	clrf	spiInit@sClockIdle
   601  008B  01A2               	clrf	spiInit@sTransmitEdge
   602  008C  3024               	movlw	36
   603  008D  120A  118A  20E5  120A  118A  	fcall	_spiInit
   604  0092                     l945:
   605                           
   606                           ;Lab03_Slave.c: 136:     OSCCONbits.IRCF2 = 1;
   607  0092  1683               	bsf	3,5	;RP0=1, select bank1
   608  0093  1303               	bcf	3,6	;RP1=0, select bank1
   609  0094  170F               	bsf	15,6	;volatile
   610  0095                     l947:
   611                           
   612                           ;Lab03_Slave.c: 137:     OSCCONbits.IRCF1 = 1;
   613  0095  168F               	bsf	15,5	;volatile
   614  0096                     l949:
   615                           
   616                           ;Lab03_Slave.c: 138:     OSCCONbits.IRCF0 = 1;
   617  0096  160F               	bsf	15,4	;volatile
   618  0097                     l951:
   619                           
   620                           ;Lab03_Slave.c: 139:     OSCCONbits.SCS = 1;
   621  0097  140F               	bsf	15,0	;volatile
   622  0098                     l953:
   623                           
   624                           ;Lab03_Slave.c: 142:     INTCONbits.GIE = 1;
   625  0098  178B               	bsf	11,7	;volatile
   626  0099                     l955:
   627                           
   628                           ;Lab03_Slave.c: 143:     INTCONbits.PEIE = 1;
   629  0099  170B               	bsf	11,6	;volatile
   630  009A                     l957:
   631                           
   632                           ;Lab03_Slave.c: 144:     PIE1bits.ADIE = 1;
   633  009A  170C               	bsf	12,6	;volatile
   634  009B                     l959:
   635                           
   636                           ;Lab03_Slave.c: 145:     PIE1bits.SSPIE = 1;
   637  009B  158C               	bsf	12,3	;volatile
   638  009C                     l961:
   639                           
   640                           ;Lab03_Slave.c: 147:     PIR1bits.ADIF = 0;
   641  009C  1283               	bcf	3,5	;RP0=0, select bank0
   642  009D  1303               	bcf	3,6	;RP1=0, select bank0
   643  009E  130C               	bcf	12,6	;volatile
   644  009F                     l963:
   645                           
   646                           ;Lab03_Slave.c: 148:     PIR1bits.SSPIF = 0;
   647  009F  118C               	bcf	12,3	;volatile
   648  00A0                     l965:
   649                           
   650                           ;Lab03_Slave.c: 151:     ADCON1bits.ADFM = 0;
   651  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   652  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   653  00A2  139F               	bcf	31,7	;volatile
   654  00A3                     l967:
   655                           
   656                           ;Lab03_Slave.c: 152:     ADCON1bits.VCFG0 = 0;
   657  00A3  121F               	bcf	31,4	;volatile
   658  00A4                     l969:
   659                           
   660                           ;Lab03_Slave.c: 153:     ADCON1bits.VCFG1 = 0;
   661  00A4  129F               	bcf	31,5	;volatile
   662  00A5                     l971:
   663                           
   664                           ;Lab03_Slave.c: 155:     ADCON0bits.ADCS1 = 1;
   665  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   666  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   667  00A7  179F               	bsf	31,7	;volatile
   668  00A8                     l973:
   669                           
   670                           ;Lab03_Slave.c: 156:     ADCON0bits.CHS = 0;
   671  00A8  30C3               	movlw	-61
   672  00A9  059F               	andwf	31,f	;volatile
   673  00AA                     l975:
   674                           
   675                           ;Lab03_Slave.c: 157:     _delay((unsigned long)((200)*(8000000/4000000.0)));
   676  00AA  3084               	movlw	132
   677  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   678  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   679  00AD  00A4               	movwf	??_setup
   680  00AE                     u157:
   681  00AE  0BA4               	decfsz	??_setup,f
   682  00AF  28AE               	goto	u157
   683  00B0  0000               	nop
   684  00B1                     l977:
   685                           
   686                           ;Lab03_Slave.c: 158:     ADCON0bits.ADON = 1;
   687  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   688  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   689  00B3  141F               	bsf	31,0	;volatile
   690  00B4                     l979:
   691                           
   692                           ;Lab03_Slave.c: 159:     _delay((unsigned long)((200)*(8000000/4000000.0)));
   693  00B4  3084               	movlw	132
   694  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   695  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   696  00B7  00A4               	movwf	??_setup
   697  00B8                     u167:
   698  00B8  0BA4               	decfsz	??_setup,f
   699  00B9  28B8               	goto	u167
   700  00BA  0000               	nop
   701  00BB                     l75:
   702  00BB  0008               	return
   703  00BC                     __end_of_setup:
   704                           
   705                           	psect	text2
   706  00E5                     __ptext2:	
   707 ;; *************** function _spiInit *****************
   708 ;; Defined at:
   709 ;;		line 10 in file "Librerias.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  sType           1    wreg     enum E1264
   712 ;;  sDataSample     1    0[BANK0 ] enum E1272
   713 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   714 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  sType           1    3[BANK0 ] enum E1264
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       3       0       0       0
   727 ;;      Locals:         0       1       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       4       0       0       0
   730 ;;Total ram usage:        4 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    3
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_setup
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _spiInit
   742  00E5                     _spiInit:
   743                           
   744                           ;incstack = 0
   745                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   746                           ;spiInit@sType stored from wreg
   747  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   748  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   749  00E7  00A3               	movwf	spiInit@sType
   750  00E8                     l925:
   751                           
   752                           ;Librerias.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);Librerias.c: 11: {;Librerias.c: 12:     
      +                          TRISC5 = 0;
   753  00E8  1683               	bsf	3,5	;RP0=1, select bank1
   754  00E9  1303               	bcf	3,6	;RP1=0, select bank1
   755  00EA  1287               	bcf	7,5	;volatile
   756                           
   757                           ;Librerias.c: 13:     if(sType & 0b00000100)
   758  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   759  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   760  00ED  1D23               	btfss	spiInit@sType,2
   761  00EE  28F0               	goto	u111
   762  00EF  28F1               	goto	u110
   763  00F0                     u111:
   764  00F0  28F7               	goto	l931
   765  00F1                     u110:
   766  00F1                     l927:
   767                           
   768                           ;Librerias.c: 14:     {;Librerias.c: 15:         SSPSTAT = sTransmitEdge;
   769  00F1  0822               	movf	spiInit@sTransmitEdge,w
   770  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   771  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   772  00F4  0094               	movwf	20	;volatile
   773  00F5                     l929:
   774                           
   775                           ;Librerias.c: 16:         TRISC3 = 1;
   776  00F5  1587               	bsf	7,3	;volatile
   777                           
   778                           ;Librerias.c: 17:     }
   779  00F6  28FD               	goto	l91
   780  00F7                     l931:
   781                           
   782                           ;Librerias.c: 19:     {;Librerias.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   783  00F7  0820               	movf	spiInit@sDataSample,w
   784  00F8  0422               	iorwf	spiInit@sTransmitEdge,w
   785  00F9  1683               	bsf	3,5	;RP0=1, select bank1
   786  00FA  1303               	bcf	3,6	;RP1=0, select bank1
   787  00FB  0094               	movwf	20	;volatile
   788  00FC                     l933:
   789                           
   790                           ;Librerias.c: 21:         TRISC3 = 0;
   791  00FC  1187               	bcf	7,3	;volatile
   792  00FD                     l91:	
   793                           ;Librerias.c: 22:     }
   794                           
   795                           
   796                           ;Librerias.c: 24:     SSPCON = sType | sClockIdle;
   797  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   798  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   799  00FF  0823               	movf	spiInit@sType,w
   800  0100  0421               	iorwf	spiInit@sClockIdle,w
   801  0101  0094               	movwf	20	;volatile
   802  0102                     l92:
   803  0102  0008               	return
   804  0103                     __end_of_spiInit:
   805                           
   806                           	psect	text3
   807  0019                     __ptext3:	
   808 ;; *************** function _isr *****************
   809 ;; Defined at:
   810 ;;		line 62 in file "Lab03_Slave.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  comando         1    6[COMMON] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         1       0       0       0       0
   826 ;;      Temps:          5       0       0       0       0
   827 ;;      Totals:         6       0       0       0       0
   828 ;;Total ram usage:        6 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    2
   831 ;; This function calls:
   832 ;;		_spiRead
   833 ;;		_spiWrite
   834 ;; This function is called by:
   835 ;;		Interrupt level 1
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _isr
   841  0019                     _isr:
   842  0019                     i1l767:
   843                           
   844                           ;Lab03_Slave.c: 63:    if(PIR1bits.SSPIF == 1){
   845  0019  1283               	bcf	3,5	;RP0=0, select bank0
   846  001A  1303               	bcf	3,6	;RP1=0, select bank0
   847  001B  1D8C               	btfss	12,3	;volatile
   848  001C  281E               	goto	u3_21
   849  001D  281F               	goto	u3_20
   850  001E                     u3_21:
   851  001E  2855               	goto	i1l53
   852  001F                     u3_20:
   853  001F                     i1l769:
   854                           
   855                           ;Lab03_Slave.c: 64:        uint8_t comando;;Lab03_Slave.c: 65:        comando = spiRead(
      +                          );
   856  001F  120A  118A  2103  120A  118A  	fcall	_spiRead
   857  0024  00F1               	movwf	??_isr
   858  0025  0871               	movf	??_isr,w
   859  0026  00F6               	movwf	isr@comando
   860                           
   861                           ;Lab03_Slave.c: 68:        switch(comando) {
   862  0027  2842               	goto	i1l781
   863  0028                     i1l771:
   864                           
   865                           ;Lab03_Slave.c: 70:                PORTB++;
   866  0028  3001               	movlw	1
   867  0029  00F1               	movwf	??_isr
   868  002A  0871               	movf	??_isr,w
   869  002B  1283               	bcf	3,5	;RP0=0, select bank0
   870  002C  1303               	bcf	3,6	;RP1=0, select bank0
   871  002D  0786               	addwf	6,f	;volatile
   872  002E                     i1l773:
   873                           
   874                           ;Lab03_Slave.c: 71:                spiWrite(ADC1);
   875  002E  0879               	movf	_ADC1,w
   876  002F  120A  118A  2113  120A  118A  	fcall	_spiWrite
   877                           
   878                           ;Lab03_Slave.c: 72:                break;
   879  0034  2852               	goto	i1l56
   880  0035                     i1l775:
   881                           
   882                           ;Lab03_Slave.c: 75:                PORTD++;
   883  0035  3001               	movlw	1
   884  0036  00F1               	movwf	??_isr
   885  0037  0871               	movf	??_isr,w
   886  0038  1283               	bcf	3,5	;RP0=0, select bank0
   887  0039  1303               	bcf	3,6	;RP1=0, select bank0
   888  003A  0788               	addwf	8,f	;volatile
   889  003B                     i1l777:
   890                           
   891                           ;Lab03_Slave.c: 76:                spiWrite(ADC2);
   892  003B  0878               	movf	_ADC2,w
   893  003C  120A  118A  2113  120A  118A  	fcall	_spiWrite
   894                           
   895                           ;Lab03_Slave.c: 77:                break;
   896  0041  2852               	goto	i1l56
   897  0042                     i1l781:
   898  0042  0876               	movf	isr@comando,w
   899  0043  00F1               	movwf	??_isr
   900  0044  01F2               	clrf	??_isr+1
   901                           
   902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   903                           ; Switch size 1, requested type "simple"
   904                           ; Number of cases is 1, Range of values is 0 to 0
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte            4     3 (average)
   908                           ; direct_byte           11     8 (fixed)
   909                           ; jumptable            260     6 (fixed)
   910                           ;	Chosen strategy is simple_byte
   911  0045  0872               	movf	??_isr+1,w
   912  0046  3A00               	xorlw	0	; case 0
   913  0047  1903               	skipnz
   914  0048  284A               	goto	i1l1015
   915  0049  2852               	goto	i1l56
   916  004A                     i1l1015:
   917                           
   918                           ; Switch size 1, requested type "simple"
   919                           ; Number of cases is 2, Range of values is 1 to 2
   920                           ; switch strategies available:
   921                           ; Name         Instructions Cycles
   922                           ; simple_byte            7     4 (average)
   923                           ; direct_byte           17    11 (fixed)
   924                           ; jumptable            263     9 (fixed)
   925                           ;	Chosen strategy is simple_byte
   926  004A  0871               	movf	??_isr,w
   927  004B  3A01               	xorlw	1	; case 1
   928  004C  1903               	skipnz
   929  004D  2828               	goto	i1l771
   930  004E  3A03               	xorlw	3	; case 2
   931  004F  1903               	skipnz
   932  0050  2835               	goto	i1l775
   933  0051  2852               	goto	i1l56
   934  0052                     i1l56:
   935                           
   936                           ;Lab03_Slave.c: 80:        PIR1bits.SSPIF = 0;
   937  0052  1283               	bcf	3,5	;RP0=0, select bank0
   938  0053  1303               	bcf	3,6	;RP1=0, select bank0
   939  0054  118C               	bcf	12,3	;volatile
   940  0055                     i1l53:	
   941                           ;Lab03_Slave.c: 81:     }
   942                           
   943                           
   944                           ;Lab03_Slave.c: 83:    if (PIR1bits.ADIF) {
   945  0055  1F0C               	btfss	12,6	;volatile
   946  0056  2858               	goto	u4_21
   947  0057  2859               	goto	u4_20
   948  0058                     u4_21:
   949  0058  286C               	goto	i1l61
   950  0059                     u4_20:
   951  0059                     i1l783:
   952                           
   953                           ;Lab03_Slave.c: 84:         if (ADCON0bits.CHS == 0) {
   954  0059  0C1F               	rrf	31,w	;volatile
   955  005A  00F1               	movwf	??_isr
   956  005B  0C71               	rrf	??_isr,w
   957  005C  390F               	andlw	15
   958  005D  3A00               	xorlw	0
   959  005E  1D03               	skipz
   960  005F  2861               	goto	u5_21
   961  0060  2862               	goto	u5_20
   962  0061                     u5_21:
   963  0061  2867               	goto	i1l787
   964  0062                     u5_20:
   965  0062                     i1l785:
   966                           
   967                           ;Lab03_Slave.c: 85:             ADC1 = ADRESH;
   968  0062  081E               	movf	30,w	;volatile
   969  0063  00F1               	movwf	??_isr
   970  0064  0871               	movf	??_isr,w
   971  0065  00F9               	movwf	_ADC1
   972                           
   973                           ;Lab03_Slave.c: 86:         }
   974  0066  286B               	goto	i1l789
   975  0067                     i1l787:
   976                           
   977                           ;Lab03_Slave.c: 89:             ADC2 = ADRESH;
   978  0067  081E               	movf	30,w	;volatile
   979  0068  00F1               	movwf	??_isr
   980  0069  0871               	movf	??_isr,w
   981  006A  00F8               	movwf	_ADC2
   982  006B                     i1l789:
   983                           
   984                           ;Lab03_Slave.c: 92:         PIR1bits.ADIF = 0;
   985  006B  130C               	bcf	12,6	;volatile
   986  006C                     i1l61:
   987  006C  0875               	movf	??_isr+4,w
   988  006D  008A               	movwf	10
   989  006E  0874               	movf	??_isr+3,w
   990  006F  0084               	movwf	4
   991  0070  0E73               	swapf	??_isr+2,w
   992  0071  0083               	movwf	3
   993  0072  0EFE               	swapf	btemp,f
   994  0073  0E7E               	swapf	btemp,w
   995  0074  0009               	retfie
   996  0075                     __end_of_isr:
   997                           
   998                           	psect	intentry
   999  0004                     __pintentry:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1002                           
  1003  0004                     interrupt_function:
  1004  007E                     saved_w	set	btemp
  1005  0004  00FE               	movwf	btemp
  1006  0005  0E03               	swapf	3,w
  1007  0006  00F3               	movwf	??_isr+2
  1008  0007  0804               	movf	4,w
  1009  0008  00F4               	movwf	??_isr+3
  1010  0009  080A               	movf	10,w
  1011  000A  00F5               	movwf	??_isr+4
  1012  000B  120A  118A  2819   	ljmp	_isr
  1013                           
  1014                           	psect	text4
  1015  0113                     __ptext4:	
  1016 ;; *************** function _spiWrite *****************
  1017 ;; Defined at:
  1018 ;;		line 32 in file "Librerias.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  dat             1    wreg     unsigned char 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  dat             1    0[COMMON] unsigned char 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         0       0       0       0       0
  1033 ;;      Locals:         1       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0
  1035 ;;      Totals:         1       0       0       0       0
  1036 ;;Total ram usage:        1 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_isr
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _spiWrite
  1047  0113                     _spiWrite:
  1048                           
  1049                           ;incstack = 0
  1050                           ; Regs used in _spiWrite: [wreg]
  1051                           ;spiWrite@dat stored from wreg
  1052  0113  00F0               	movwf	spiWrite@dat
  1053  0114                     i1l719:
  1054                           
  1055                           ;Librerias.c: 32: void spiWrite(char dat);Librerias.c: 33: {;Librerias.c: 34:     SSPBUF
      +                           = dat;
  1056  0114  0870               	movf	spiWrite@dat,w
  1057  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0117  0093               	movwf	19	;volatile
  1060  0118                     i1l101:
  1061  0118  0008               	return
  1062  0119                     __end_of_spiWrite:
  1063                           
  1064                           	psect	text5
  1065  0103                     __ptext5:	
  1066 ;; *************** function _spiRead *****************
  1067 ;; Defined at:
  1068 ;;		line 45 in file "Librerias.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      unsigned char 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0, pclath, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0
  1085 ;;      Totals:         0       0       0       0       0
  1086 ;;Total ram usage:        0 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    1
  1089 ;; This function calls:
  1090 ;;		_spiReceiveWait
  1091 ;; This function is called by:
  1092 ;;		_isr
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _spiRead
  1098  0103                     _spiRead:
  1099  0103                     i1l713:	
  1100                           ;incstack = 0
  1101                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1102                           
  1103                           
  1104                           ;Librerias.c: 47:     spiReceiveWait();
  1105  0103  120A  118A  210C  120A  118A  	fcall	_spiReceiveWait
  1106  0108                     i1l715:
  1107                           
  1108                           ;Librerias.c: 48:     return(SSPBUF);
  1109  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1111  010A  0813               	movf	19,w	;volatile
  1112  010B                     i1l109:
  1113  010B  0008               	return
  1114  010C                     __end_of_spiRead:
  1115                           
  1116                           	psect	text6
  1117  010C                     __ptext6:	
  1118 ;; *************** function _spiReceiveWait *****************
  1119 ;; Defined at:
  1120 ;;		line 27 in file "Librerias.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		None
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_spiRead
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _spiReceiveWait
  1149  010C                     _spiReceiveWait:
  1150  010C                     i1l711:	
  1151                           ;incstack = 0
  1152                           ; Regs used in _spiReceiveWait: []
  1153                           
  1154  010C                     i1l95:	
  1155                           ;Librerias.c: 29:     while ( !SSPSTATbits.BF );
  1156                           
  1157  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1158  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1159  010E  1C14               	btfss	20,0	;volatile
  1160  010F  2911               	goto	u2_21
  1161  0110  2912               	goto	u2_20
  1162  0111                     u2_21:
  1163  0111  290C               	goto	i1l95
  1164  0112                     u2_20:
  1165  0112                     i1l98:
  1166  0112  0008               	return
  1167  0113                     __end_of_spiReceiveWait:
  1168  007E                     btemp	set	126	;btemp
  1169  007E                     wtemp0	set	126
  1170                           
  1171                           	psect	config
  1172                           
  1173                           ;Config register CONFIG1 @ 0x2007
  1174                           ;	Oscillator Selection bits
  1175                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1176                           ;	Watchdog Timer Enable bit
  1177                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1178                           ;	Power-up Timer Enable bit
  1179                           ;	PWRTE = OFF, PWRT disabled
  1180                           ;	RE3/MCLR pin function select bit
  1181                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1182                           ;	Code Protection bit
  1183                           ;	CP = OFF, Program memory code protection is disabled
  1184                           ;	Data Code Protection bit
  1185                           ;	CPD = OFF, Data memory code protection is disabled
  1186                           ;	Brown Out Reset Selection bits
  1187                           ;	BOREN = OFF, BOR disabled
  1188                           ;	Internal External Switchover bit
  1189                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1190                           ;	Fail-Safe Clock Monitor Enabled bit
  1191                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1192                           ;	Low Voltage Programming Enable bit
  1193                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1194                           ;	In-Circuit Debugger Mode bit
  1195                           ;	DEBUG = 0x1, unprogrammed default
  1196  2007                     	org	8199
  1197  2007  20D4               	dw	8404
  1198                           
  1199                           ;Config register CONFIG2 @ 0x2008
  1200                           ;	Brown-out Reset Selection bit
  1201                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1202                           ;	Flash Program Memory Self Write Enable bits
  1203                           ;	WRT = OFF, Write protection off
  1204  2008                     	org	8200
  1205  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     456
                                              5 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     456
                                              4 BANK0      1     1      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0      30
                                              1 COMMON     6     6      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 20:50:12 2021

            _SSPSTATbits 0094                       l91 00FD                       l75 00BB  
                     l92 0102                      l931 00F7                      l933 00FC  
                    l925 00E8                      l941 0084                      l927 00F1  
                    l951 0097                      l943 0087                      l935 0075  
                    l929 00F5                      l961 009C                      l953 0098  
                    l945 0092                      l937 0079                      l971 00A5  
                    l963 009F                      l955 0099                      l947 0095  
                    l939 007A                      l973 00A8                      l965 00A0  
                    l957 009A                      l949 0096                      l981 00BC  
                    l975 00AA                      l967 00A3                      l959 009B  
                    l991 00D7                      l983 00C1                      l977 00B1  
                    l969 00A4                      l993 00DE                      l985 00C7  
                    l979 00B4                      l987 00D0                      l989 00D5  
                    u110 00F1                      u111 00F0                      u120 00C7  
                    u121 00C6                      u130 00D0                      u131 00CF  
                    u147 00DB                      u157 00AE                      u167 00B8  
                    _isr 0019                      fsr0 0004                     _ADC1 0079  
                   _ADC2 0078                     ?_isr 0070                     i1l61 006C  
                   i1l53 0055                     i1l56 0052                     i1l95 010C  
                   i1l98 0112                     u2_20 0112                     u2_21 0111  
                   u3_20 001F                     u3_21 001E                     u4_20 0059  
                   u4_21 0058                     u5_20 0062                     u5_21 0061  
                   _main 00BC                     btemp 007E                     start 000E  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l101 0118                    i1l109 010B                    i1l711 010C  
                  i1l713 0103                    i1l715 0108                    i1l719 0114  
                  i1l771 0028                    i1l773 002E                    i1l781 0042  
                  i1l783 0059                    i1l775 0035                    i1l767 0019  
                  i1l785 0062                    i1l777 003B                    i1l769 001F  
                  i1l787 0067                    i1l789 006B                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _setup 0075                    pclath 000A  
        __end_of_spiInit 0103          __end_of_spiRead 010C                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 00E5  
                 ??_main 0025                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1015 004A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 0119                ??_spiInit 0023  
              ??_spiRead 0070  __end_of__initialization 0015           __pcstackCOMMON 0070  
          __end_of_setup 00BC                  ??_setup 0024               __pmaintext 00BC  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 0075                  __ptext2 00E5  
                __ptext3 0019                  __ptext4 0113                  __ptext5 0103  
                __ptext6 010C                  _comando 0077             __size_of_isr 005C  
                _spiInit 00E5                  _spiRead 0103     end_of_initialization 0015  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 010C      start_initialization 0011              __end_of_isr 0075  
             isr@comando 0076   __end_of_spiReceiveWait 0113              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0020                 ?_spiRead 0070  
         __size_of_setup 0047     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_main 0029                 _temporal 007A  
               _spiWrite 0113             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
             _OSCCONbits 008F  
