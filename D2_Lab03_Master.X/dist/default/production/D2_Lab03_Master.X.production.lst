

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 19:52:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  0019                     _TXREG	set	25
   291  0018                     _RCSTAbits	set	24
   292  0008                     _PORTD	set	8
   293  0006                     _PORTB	set	6
   294  0007                     _PORTCbits	set	7
   295  0064                     _TXIF	set	100
   296  0094                     _SSPSTATbits	set	148
   297  0094                     _SSPSTAT	set	148
   298  009A                     _SPBRGH	set	154
   299  0099                     _SPBRG	set	153
   300  0098                     _TXSTAbits	set	152
   301  008F                     _OSCCONbits	set	143
   302  0088                     _TRISD	set	136
   303  0086                     _TRISB	set	134
   304  0087                     _TRISCbits	set	135
   305  043B                     _TRISC3	set	1083
   306  043D                     _TRISC5	set	1085
   307  0187                     _BAUDCTLbits	set	391
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	strings
   312  0003                     __pstrings:
   313  0003                     stringtab:
   314  0003                     __stringtab:
   315  0003                     stringcode:	
   316                           ;	String table - string pointers are 1 byte each
   317                           
   318  0003                     stringdir:
   319  0003  3000               	movlw	high stringdir
   320  0004  008A               	movwf	10
   321  0005  0804               	movf	4,w
   322  0006  0A84               	incf	4,f
   323  0007  0782               	addwf	2,f
   324  0008                     __stringbase:
   325  0008  3400               	retlw	0
   326  0009                     __end_of__stringtab:
   327  0009                     STR_2:
   328  0009  340D               	retlw	13
   329  000A  342D               	retlw	45	;'-'
   330  000B  342D               	retlw	45	;'-'
   331  000C  342D               	retlw	45	;'-'
   332  000D  342D               	retlw	45	;'-'
   333  000E  342D               	retlw	45	;'-'
   334  000F  342D               	retlw	45	;'-'
   335  0010  342D               	retlw	45	;'-'
   336  0011  342D               	retlw	45	;'-'
   337  0012  342D               	retlw	45	;'-'
   338  0013  342D               	retlw	45	;'-'
   339  0014  342D               	retlw	45	;'-'
   340  0015  342D               	retlw	45	;'-'
   341  0016  342D               	retlw	45	;'-'
   342  0017  342D               	retlw	45	;'-'
   343  0018  342D               	retlw	45	;'-'
   344  0019  340D               	retlw	13
   345  001A  3400               	retlw	0
   346  001B                     STR_1:
   347  001B  340D               	retlw	13
   348  001C  3453               	retlw	83	;'S'
   349  001D  3465               	retlw	101	;'e'
   350  001E  346E               	retlw	110	;'n'
   351  001F  3473               	retlw	115	;'s'
   352  0020  346F               	retlw	111	;'o'
   353  0021  3472               	retlw	114	;'r'
   354  0022  3420               	retlw	32	;' '
   355  0023  3431               	retlw	49	;'1'
   356  0024  343A               	retlw	58	;':'
   357  0025  3420               	retlw	32	;' '
   358  0026  340D               	retlw	13
   359  0027  3400               	retlw	0
   360  0028                     STR_3:
   361  0028  340D               	retlw	13
   362  0029  3453               	retlw	83	;'S'
   363  002A  3465               	retlw	101	;'e'
   364  002B  346E               	retlw	110	;'n'
   365  002C  3473               	retlw	115	;'s'
   366  002D  346F               	retlw	111	;'o'
   367  002E  3472               	retlw	114	;'r'
   368  002F  3420               	retlw	32	;' '
   369  0030  3432               	retlw	50	;'2'
   370  0031  343A               	retlw	58	;':'
   371  0032  3420               	retlw	32	;' '
   372  0033  340D               	retlw	13
   373  0034  3400               	retlw	0
   374  0009                     
   375                           	psect	cinit
   376  07FA                     start_initialization:	
   377                           ; #config settings
   378                           
   379  07FA                     __initialization:
   380                           
   381                           ; Clear objects allocated to COMMON
   382  07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   383  07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   384  07FC                     end_of_initialization:	
   385                           ;End of C runtime variable initialization code
   386                           
   387  07FC                     __end_of__initialization:
   388  07FC  0183               	clrf	3
   389  07FD  120A  118A  2F33   	ljmp	_main	;jump to C main() function
   390                           
   391                           	psect	bssCOMMON
   392  007A                     __pbssCOMMON:
   393  007A                     _sensor2:
   394  007A                     	ds	1
   395  007B                     _sensor1:
   396  007B                     	ds	1
   397                           
   398                           	psect	cstackCOMMON
   399  0070                     __pcstackCOMMON:
   400  0070                     ?_setup:
   401  0070                     ?_Eusart:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_spiWrite:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ??_spiWrite:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_spiRead:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_spiRead:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_spiInit:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_putch:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ??_putch:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_spiReceiveWait:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_spiReceiveWait:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_printf:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     putch@data:	
   438                           ; 2 bytes @ 0x0
   439                           
   440  0070                     spiInit@sDataSample:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     spiWrite@dat:	
   444                           ; 1 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     ??_printf:
   450  0071                     spiInit@sClockIdle:	
   451                           ; 1 bytes @ 0x1
   452                           
   453                           
   454                           ; 1 bytes @ 0x1
   455  0071                     	ds	1
   456  0072                     spiInit@sTransmitEdge:
   457  0072                     printf@ap:	
   458                           ; 1 bytes @ 0x2
   459                           
   460                           
   461                           ; 1 bytes @ 0x2
   462  0072                     	ds	1
   463  0073                     ??_spiInit:
   464  0073                     spiInit@sType:	
   465                           ; 1 bytes @ 0x3
   466                           
   467  0073                     printf@c:	
   468                           ; 1 bytes @ 0x3
   469                           
   470                           
   471                           ; 1 bytes @ 0x3
   472  0073                     	ds	1
   473  0074                     ??_setup:
   474  0074                     printf@f:	
   475                           ; 1 bytes @ 0x4
   476                           
   477                           
   478                           ; 1 bytes @ 0x4
   479  0074                     	ds	1
   480  0075                     ??_Eusart:
   481                           
   482                           ; 1 bytes @ 0x5
   483  0075                     	ds	3
   484  0078                     ??_main:
   485                           
   486                           ; 1 bytes @ 0x8
   487  0078                     	ds	2
   488                           
   489                           	psect	maintext
   490  0733                     __pmaintext:	
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 63 in file "Lab03_Master.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : B00/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          2       0       0       0       0
   513 ;;      Totals:         2       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels required when called:    3
   516 ;; This function calls:
   517 ;;		_Eusart
   518 ;;		_setup
   519 ;;		_spiRead
   520 ;;		_spiWrite
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  0733                     _main:
   529  0733                     l912:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;Lab03_Master.c: 64:     setup();
   535  0733  120A  118A  2700  120A  118A  	fcall	_setup
   536  0738                     l914:
   537                           
   538                           ;Lab03_Master.c: 70:         Eusart();
   539  0738  120A  118A  2793  120A  118A  	fcall	_Eusart
   540  073D                     l916:
   541                           
   542                           ;Lab03_Master.c: 72:        PORTCbits.RC2 = 0;
   543  073D  1283               	bcf	3,5	;RP0=0, select bank0
   544  073E  1303               	bcf	3,6	;RP1=0, select bank0
   545  073F  1107               	bcf	7,2	;volatile
   546  0740                     l918:
   547                           
   548                           ;Lab03_Master.c: 73:        _delay((unsigned long)((1)*(8000000/4000.0)));
   549  0740  3003               	movlw	3
   550  0741  00F9               	movwf	??_main+1
   551  0742  3097               	movlw	151
   552  0743  00F8               	movwf	??_main
   553  0744                     u77:
   554  0744  0BF8               	decfsz	??_main,f
   555  0745  2F44               	goto	u77
   556  0746  0BF9               	decfsz	??_main+1,f
   557  0747  2F44               	goto	u77
   558  0748  2F49               	nop2
   559  0749                     l920:
   560                           
   561                           ;Lab03_Master.c: 75:        spiWrite(1);
   562  0749  3001               	movlw	1
   563  074A  120A  118A  26AB  120A  118A  	fcall	_spiWrite
   564  074F                     l922:
   565                           
   566                           ;Lab03_Master.c: 76:        sensor1 = spiRead();
   567  074F  120A  118A  26B8  120A  118A  	fcall	_spiRead
   568  0754  00F8               	movwf	??_main
   569  0755  0878               	movf	??_main,w
   570  0756  00FB               	movwf	_sensor1
   571  0757                     l924:
   572                           
   573                           ;Lab03_Master.c: 77:        PORTB = sensor1;
   574  0757  087B               	movf	_sensor1,w
   575  0758  1283               	bcf	3,5	;RP0=0, select bank0
   576  0759  1303               	bcf	3,6	;RP1=0, select bank0
   577  075A  0086               	movwf	6	;volatile
   578  075B                     l926:
   579                           
   580                           ;Lab03_Master.c: 79:        _delay((unsigned long)((1)*(8000000/4000.0)));
   581  075B  3003               	movlw	3
   582  075C  00F9               	movwf	??_main+1
   583  075D  3097               	movlw	151
   584  075E  00F8               	movwf	??_main
   585  075F                     u87:
   586  075F  0BF8               	decfsz	??_main,f
   587  0760  2F5F               	goto	u87
   588  0761  0BF9               	decfsz	??_main+1,f
   589  0762  2F5F               	goto	u87
   590  0763  2F64               	nop2
   591  0764                     l928:
   592                           
   593                           ;Lab03_Master.c: 80:        PORTCbits.RC2 = 1;
   594  0764  1283               	bcf	3,5	;RP0=0, select bank0
   595  0765  1303               	bcf	3,6	;RP1=0, select bank0
   596  0766  1507               	bsf	7,2	;volatile
   597  0767                     l930:
   598                           
   599                           ;Lab03_Master.c: 82:        PORTCbits.RC2 = 0;
   600  0767  1107               	bcf	7,2	;volatile
   601  0768                     l932:
   602                           
   603                           ;Lab03_Master.c: 83:        _delay((unsigned long)((1)*(8000000/4000.0)));
   604  0768  3003               	movlw	3
   605  0769  00F9               	movwf	??_main+1
   606  076A  3097               	movlw	151
   607  076B  00F8               	movwf	??_main
   608  076C                     u97:
   609  076C  0BF8               	decfsz	??_main,f
   610  076D  2F6C               	goto	u97
   611  076E  0BF9               	decfsz	??_main+1,f
   612  076F  2F6C               	goto	u97
   613  0770  2F71               	nop2
   614  0771                     l934:
   615                           
   616                           ;Lab03_Master.c: 85:        spiWrite(2);
   617  0771  3002               	movlw	2
   618  0772  120A  118A  26AB  120A  118A  	fcall	_spiWrite
   619  0777                     l936:
   620                           
   621                           ;Lab03_Master.c: 86:        sensor2 = spiRead();
   622  0777  120A  118A  26B8  120A  118A  	fcall	_spiRead
   623  077C  00F8               	movwf	??_main
   624  077D  0878               	movf	??_main,w
   625  077E  00FA               	movwf	_sensor2
   626  077F                     l938:
   627                           
   628                           ;Lab03_Master.c: 87:        PORTD = sensor2;
   629  077F  087A               	movf	_sensor2,w
   630  0780  1283               	bcf	3,5	;RP0=0, select bank0
   631  0781  1303               	bcf	3,6	;RP1=0, select bank0
   632  0782  0088               	movwf	8	;volatile
   633  0783                     l940:
   634                           
   635                           ;Lab03_Master.c: 89:        _delay((unsigned long)((1)*(8000000/4000.0)));
   636  0783  3003               	movlw	3
   637  0784  00F9               	movwf	??_main+1
   638  0785  3097               	movlw	151
   639  0786  00F8               	movwf	??_main
   640  0787                     u107:
   641  0787  0BF8               	decfsz	??_main,f
   642  0788  2F87               	goto	u107
   643  0789  0BF9               	decfsz	??_main+1,f
   644  078A  2F87               	goto	u107
   645  078B  2F8C               	nop2
   646  078C                     l942:
   647                           
   648                           ;Lab03_Master.c: 90:        PORTCbits.RC2 = 1;
   649  078C  1283               	bcf	3,5	;RP0=0, select bank0
   650  078D  1303               	bcf	3,6	;RP1=0, select bank0
   651  078E  1507               	bsf	7,2	;volatile
   652  078F  2F38               	goto	l914
   653  0790  120A  118A  2800   	ljmp	start
   654  0793                     __end_of_main:
   655                           
   656                           	psect	text1
   657  06AB                     __ptext1:	
   658 ;; *************** function _spiWrite *****************
   659 ;; Defined at:
   660 ;;		line 34 in file "Librerias.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  dat             1    wreg     unsigned char 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  dat             1    0[COMMON] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         1       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0
   677 ;;      Totals:         1       0       0       0       0
   678 ;;Total ram usage:        1 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _spiWrite
   689  06AB                     _spiWrite:
   690                           
   691                           ;incstack = 0
   692                           ; Regs used in _spiWrite: [wreg]
   693                           ;spiWrite@dat stored from wreg
   694  06AB  00F0               	movwf	spiWrite@dat
   695  06AC                     l790:
   696                           
   697                           ;Librerias.c: 34: void spiWrite(char dat);Librerias.c: 35: {;Librerias.c: 36:     SSPBUF
      +                           = dat;
   698  06AC  0870               	movf	spiWrite@dat,w
   699  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   700  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   701  06AF  0093               	movwf	19	;volatile
   702  06B0                     l96:
   703  06B0  0008               	return
   704  06B1                     __end_of_spiWrite:
   705                           
   706                           	psect	text2
   707  06B8                     __ptext2:	
   708 ;; *************** function _spiRead *****************
   709 ;; Defined at:
   710 ;;		line 47 in file "Librerias.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      unsigned char 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0, pclath, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         0       0       0       0       0
   725 ;;      Locals:         0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0
   727 ;;      Totals:         0       0       0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; Hardware stack levels required when called:    1
   731 ;; This function calls:
   732 ;;		_spiReceiveWait
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           
   739                           ;psect for function _spiRead
   740  06B8                     _spiRead:
   741  06B8                     l792:	
   742                           ;incstack = 0
   743                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   744                           
   745                           
   746                           ;Librerias.c: 49:     spiReceiveWait();
   747  06B8  120A  118A  26B1  120A  118A  	fcall	_spiReceiveWait
   748  06BD                     l794:
   749                           
   750                           ;Librerias.c: 50:     return(SSPBUF);
   751  06BD  1283               	bcf	3,5	;RP0=0, select bank0
   752  06BE  1303               	bcf	3,6	;RP1=0, select bank0
   753  06BF  0813               	movf	19,w	;volatile
   754  06C0                     l104:
   755  06C0  0008               	return
   756  06C1                     __end_of_spiRead:
   757                           
   758                           	psect	text3
   759  06B1                     __ptext3:	
   760 ;; *************** function _spiReceiveWait *****************
   761 ;; Defined at:
   762 ;;		line 29 in file "Librerias.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		None
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_spiRead
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _spiReceiveWait
   791  06B1                     _spiReceiveWait:
   792  06B1                     l728:	
   793                           ;incstack = 0
   794                           ; Regs used in _spiReceiveWait: []
   795                           
   796  06B1                     l90:	
   797                           ;Librerias.c: 31:     while ( !SSPSTATbits.BF );
   798                           
   799  06B1  1683               	bsf	3,5	;RP0=1, select bank1
   800  06B2  1303               	bcf	3,6	;RP1=0, select bank1
   801  06B3  1C14               	btfss	20,0	;volatile
   802  06B4  2EB6               	goto	u41
   803  06B5  2EB7               	goto	u40
   804  06B6                     u41:
   805  06B6  2EB1               	goto	l90
   806  06B7                     u40:
   807  06B7                     l93:
   808  06B7  0008               	return
   809  06B8                     __end_of_spiReceiveWait:
   810                           
   811                           	psect	text4
   812  0700                     __ptext4:	
   813 ;; *************** function _setup *****************
   814 ;; Defined at:
   815 ;;		line 99 in file "Lab03_Master.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         0       0       0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		_spiInit
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _setup
   845  0700                     _setup:
   846  0700                     l852:	
   847                           ;incstack = 0
   848                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   849                           
   850                           
   851                           ;Lab03_Master.c: 100:     ANSEL = 0x00;
   852  0700  1683               	bsf	3,5	;RP0=1, select bank3
   853  0701  1703               	bsf	3,6	;RP1=1, select bank3
   854  0702  0188               	clrf	8	;volatile
   855                           
   856                           ;Lab03_Master.c: 101:     ANSELH = 0x00;
   857  0703  0189               	clrf	9	;volatile
   858  0704                     l854:
   859                           
   860                           ;Lab03_Master.c: 103:     TRISCbits.TRISC2 = 0;
   861  0704  1683               	bsf	3,5	;RP0=1, select bank1
   862  0705  1303               	bcf	3,6	;RP1=0, select bank1
   863  0706  1107               	bcf	7,2	;volatile
   864  0707                     l856:
   865                           
   866                           ;Lab03_Master.c: 104:     TRISCbits.TRISC3 = 0;
   867  0707  1187               	bcf	7,3	;volatile
   868  0708                     l858:
   869                           
   870                           ;Lab03_Master.c: 105:     TRISCbits.TRISC4 = 0;
   871  0708  1207               	bcf	7,4	;volatile
   872  0709                     l860:
   873                           
   874                           ;Lab03_Master.c: 106:     TRISCbits.TRISC5 = 0;
   875  0709  1287               	bcf	7,5	;volatile
   876                           
   877                           ;Lab03_Master.c: 107:     TRISB = 0x00;
   878  070A  0186               	clrf	6	;volatile
   879                           
   880                           ;Lab03_Master.c: 108:     TRISD = 0x00;
   881  070B  0188               	clrf	8	;volatile
   882                           
   883                           ;Lab03_Master.c: 110:     PORTB = 0x00;
   884  070C  1283               	bcf	3,5	;RP0=0, select bank0
   885  070D  1303               	bcf	3,6	;RP1=0, select bank0
   886  070E  0186               	clrf	6	;volatile
   887                           
   888                           ;Lab03_Master.c: 111:     PORTD = 0x00;
   889  070F  0188               	clrf	8	;volatile
   890  0710                     l862:
   891                           
   892                           ;Lab03_Master.c: 112:     PORTCbits.RC2 = 1;
   893  0710  1507               	bsf	7,2	;volatile
   894  0711                     l864:
   895                           
   896                           ;Lab03_Master.c: 113:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK
      +                          _IDLE_LOW, SPI_IDLE_2_ACTIVE);
   897  0711  01F0               	clrf	spiInit@sDataSample
   898  0712  01F1               	clrf	spiInit@sClockIdle
   899  0713  01F2               	clrf	spiInit@sTransmitEdge
   900  0714  3020               	movlw	32
   901  0715  120A  118A  26CB  120A  118A  	fcall	_spiInit
   902  071A                     l866:
   903                           
   904                           ;Lab03_Master.c: 116:     OSCCONbits.IRCF2 = 1;
   905  071A  1683               	bsf	3,5	;RP0=1, select bank1
   906  071B  1303               	bcf	3,6	;RP1=0, select bank1
   907  071C  170F               	bsf	15,6	;volatile
   908  071D                     l868:
   909                           
   910                           ;Lab03_Master.c: 117:     OSCCONbits.IRCF1 = 1;
   911  071D  168F               	bsf	15,5	;volatile
   912  071E                     l870:
   913                           
   914                           ;Lab03_Master.c: 118:     OSCCONbits.IRCF0 = 1;
   915  071E  160F               	bsf	15,4	;volatile
   916  071F                     l872:
   917                           
   918                           ;Lab03_Master.c: 119:     OSCCONbits.SCS = 1;
   919  071F  140F               	bsf	15,0	;volatile
   920  0720                     l874:
   921                           
   922                           ;Lab03_Master.c: 122:     TXSTAbits.SYNC = 0;
   923  0720  1218               	bcf	24,4	;volatile
   924  0721                     l876:
   925                           
   926                           ;Lab03_Master.c: 123:     TXSTAbits.BRGH = 1;
   927  0721  1518               	bsf	24,2	;volatile
   928  0722                     l878:
   929                           
   930                           ;Lab03_Master.c: 125:     BAUDCTLbits.BRG16 = 1;
   931  0722  1683               	bsf	3,5	;RP0=1, select bank3
   932  0723  1703               	bsf	3,6	;RP1=1, select bank3
   933  0724  1587               	bsf	7,3	;volatile
   934  0725                     l880:
   935                           
   936                           ;Lab03_Master.c: 127:     SPBRG = 207;
   937  0725  30CF               	movlw	207
   938  0726  1683               	bsf	3,5	;RP0=1, select bank1
   939  0727  1303               	bcf	3,6	;RP1=0, select bank1
   940  0728  0099               	movwf	25	;volatile
   941  0729                     l882:
   942                           
   943                           ;Lab03_Master.c: 128:     SPBRGH = 0;
   944  0729  019A               	clrf	26	;volatile
   945  072A                     l884:
   946                           
   947                           ;Lab03_Master.c: 130:     RCSTAbits.SPEN = 1;
   948  072A  1283               	bcf	3,5	;RP0=0, select bank0
   949  072B  1303               	bcf	3,6	;RP1=0, select bank0
   950  072C  1798               	bsf	24,7	;volatile
   951  072D                     l886:
   952                           
   953                           ;Lab03_Master.c: 131:     RCSTAbits.RX9 = 0;
   954  072D  1318               	bcf	24,6	;volatile
   955  072E                     l888:
   956                           
   957                           ;Lab03_Master.c: 132:     RCSTAbits.CREN = 1;
   958  072E  1618               	bsf	24,4	;volatile
   959  072F                     l890:
   960                           
   961                           ;Lab03_Master.c: 134:     TXSTAbits.TXEN = 1;
   962  072F  1683               	bsf	3,5	;RP0=1, select bank1
   963  0730  1303               	bcf	3,6	;RP1=0, select bank1
   964  0731  1698               	bsf	24,5	;volatile
   965  0732                     l61:
   966  0732  0008               	return
   967  0733                     __end_of_setup:
   968                           
   969                           	psect	text5
   970  06CB                     __ptext5:	
   971 ;; *************** function _spiInit *****************
   972 ;; Defined at:
   973 ;;		line 12 in file "Librerias.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  sType           1    wreg     enum E1264
   976 ;;  sDataSample     1    0[COMMON] enum E1272
   977 ;;  sClockIdle      1    1[COMMON] enum E1276
   978 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  sType           1    3[COMMON] enum E1264
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         3       0       0       0       0
   991 ;;      Locals:         1       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0
   993 ;;      Totals:         4       0       0       0       0
   994 ;;Total ram usage:        4 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_setup
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _spiInit
  1005  06CB                     _spiInit:
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1009                           ;spiInit@sType stored from wreg
  1010  06CB  00F3               	movwf	spiInit@sType
  1011  06CC                     l836:
  1012                           
  1013                           ;Librerias.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);Librerias.c: 13: {;Librerias.c: 14:     
      +                          TRISC5 = 0;
  1014  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  1015  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  1016  06CE  1287               	bcf	7,5	;volatile
  1017                           
  1018                           ;Librerias.c: 15:     if(sType & 0b00000100)
  1019  06CF  1D73               	btfss	spiInit@sType,2
  1020  06D0  2ED2               	goto	u51
  1021  06D1  2ED3               	goto	u50
  1022  06D2                     u51:
  1023  06D2  2ED7               	goto	l842
  1024  06D3                     u50:
  1025  06D3                     l838:
  1026                           
  1027                           ;Librerias.c: 16:     {;Librerias.c: 17:         SSPSTAT = sTransmitEdge;
  1028  06D3  0872               	movf	spiInit@sTransmitEdge,w
  1029  06D4  0094               	movwf	20	;volatile
  1030  06D5                     l840:
  1031                           
  1032                           ;Librerias.c: 18:         TRISC3 = 1;
  1033  06D5  1587               	bsf	7,3	;volatile
  1034                           
  1035                           ;Librerias.c: 19:     }
  1036  06D6  2EDB               	goto	l86
  1037  06D7                     l842:
  1038                           
  1039                           ;Librerias.c: 21:     {;Librerias.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1040  06D7  0870               	movf	spiInit@sDataSample,w
  1041  06D8  0472               	iorwf	spiInit@sTransmitEdge,w
  1042  06D9  0094               	movwf	20	;volatile
  1043  06DA                     l844:
  1044                           
  1045                           ;Librerias.c: 23:         TRISC3 = 0;
  1046  06DA  1187               	bcf	7,3	;volatile
  1047  06DB                     l86:	
  1048                           ;Librerias.c: 24:     }
  1049                           
  1050                           
  1051                           ;Librerias.c: 26:     SSPCON = sType | sClockIdle;
  1052  06DB  0873               	movf	spiInit@sType,w
  1053  06DC  0471               	iorwf	spiInit@sClockIdle,w
  1054  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1055  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1056  06DF  0094               	movwf	20	;volatile
  1057  06E0                     l87:
  1058  06E0  0008               	return
  1059  06E1                     __end_of_spiInit:
  1060                           
  1061                           	psect	text6
  1062  0793                     __ptext6:	
  1063 ;; *************** function _Eusart *****************
  1064 ;; Defined at:
  1065 ;;		line 144 in file "Lab03_Master.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0
  1081 ;;      Temps:          3       0       0       0       0
  1082 ;;      Totals:         3       0       0       0       0
  1083 ;;Total ram usage:        3 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    2
  1086 ;; This function calls:
  1087 ;;		_printf
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _Eusart
  1095  0793                     _Eusart:
  1096  0793                     l892:	
  1097                           ;incstack = 0
  1098                           ; Regs used in _Eusart: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1099                           
  1100                           
  1101                           ;Lab03_Master.c: 145:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1102  0793  3002               	movlw	2
  1103  0794  00F7               	movwf	??_Eusart+2
  1104  0795  3004               	movlw	4
  1105  0796  00F6               	movwf	??_Eusart+1
  1106  0797  30BA               	movlw	186
  1107  0798  00F5               	movwf	??_Eusart
  1108  0799                     u117:
  1109  0799  0BF5               	decfsz	??_Eusart,f
  1110  079A  2F99               	goto	u117
  1111  079B  0BF6               	decfsz	??_Eusart+1,f
  1112  079C  2F99               	goto	u117
  1113  079D  0BF7               	decfsz	??_Eusart+2,f
  1114  079E  2F99               	goto	u117
  1115  079F  0000               	nop
  1116  07A0                     l894:
  1117                           
  1118                           ;Lab03_Master.c: 146:    printf("\rSensor 1: \r");
  1119  07A0  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1120  07A1  120A  118A  26E1  120A  118A  	fcall	_printf
  1121  07A6                     l896:
  1122                           
  1123                           ;Lab03_Master.c: 147:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1124  07A6  3002               	movlw	2
  1125  07A7  00F7               	movwf	??_Eusart+2
  1126  07A8  3004               	movlw	4
  1127  07A9  00F6               	movwf	??_Eusart+1
  1128  07AA  30BA               	movlw	186
  1129  07AB  00F5               	movwf	??_Eusart
  1130  07AC                     u127:
  1131  07AC  0BF5               	decfsz	??_Eusart,f
  1132  07AD  2FAC               	goto	u127
  1133  07AE  0BF6               	decfsz	??_Eusart+1,f
  1134  07AF  2FAC               	goto	u127
  1135  07B0  0BF7               	decfsz	??_Eusart+2,f
  1136  07B1  2FAC               	goto	u127
  1137  07B2  0000               	nop
  1138  07B3                     l898:
  1139                           
  1140                           ;Lab03_Master.c: 149:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1141  07B3  3002               	movlw	2
  1142  07B4  00F7               	movwf	??_Eusart+2
  1143  07B5  3004               	movlw	4
  1144  07B6  00F6               	movwf	??_Eusart+1
  1145  07B7  30BA               	movlw	186
  1146  07B8  00F5               	movwf	??_Eusart
  1147  07B9                     u137:
  1148  07B9  0BF5               	decfsz	??_Eusart,f
  1149  07BA  2FB9               	goto	u137
  1150  07BB  0BF6               	decfsz	??_Eusart+1,f
  1151  07BC  2FB9               	goto	u137
  1152  07BD  0BF7               	decfsz	??_Eusart+2,f
  1153  07BE  2FB9               	goto	u137
  1154  07BF  0000               	nop
  1155  07C0                     l900:
  1156                           
  1157                           ;Lab03_Master.c: 150:    printf("\r---------------\r");
  1158  07C0  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1159  07C1  120A  118A  26E1  120A  118A  	fcall	_printf
  1160                           
  1161                           ;Lab03_Master.c: 153:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1162  07C6  3002               	movlw	2
  1163  07C7  00F7               	movwf	??_Eusart+2
  1164  07C8  3004               	movlw	4
  1165  07C9  00F6               	movwf	??_Eusart+1
  1166  07CA  30BA               	movlw	186
  1167  07CB  00F5               	movwf	??_Eusart
  1168  07CC                     u147:
  1169  07CC  0BF5               	decfsz	??_Eusart,f
  1170  07CD  2FCC               	goto	u147
  1171  07CE  0BF6               	decfsz	??_Eusart+1,f
  1172  07CF  2FCC               	goto	u147
  1173  07D0  0BF7               	decfsz	??_Eusart+2,f
  1174  07D1  2FCC               	goto	u147
  1175  07D2  0000               	nop
  1176  07D3                     l902:
  1177                           
  1178                           ;Lab03_Master.c: 154:    printf("\rSensor 2: \r");
  1179  07D3  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1180  07D4  120A  118A  26E1  120A  118A  	fcall	_printf
  1181  07D9                     l904:
  1182                           
  1183                           ;Lab03_Master.c: 155:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1184  07D9  3002               	movlw	2
  1185  07DA  00F7               	movwf	??_Eusart+2
  1186  07DB  3004               	movlw	4
  1187  07DC  00F6               	movwf	??_Eusart+1
  1188  07DD  30BA               	movlw	186
  1189  07DE  00F5               	movwf	??_Eusart
  1190  07DF                     u157:
  1191  07DF  0BF5               	decfsz	??_Eusart,f
  1192  07E0  2FDF               	goto	u157
  1193  07E1  0BF6               	decfsz	??_Eusart+1,f
  1194  07E2  2FDF               	goto	u157
  1195  07E3  0BF7               	decfsz	??_Eusart+2,f
  1196  07E4  2FDF               	goto	u157
  1197  07E5  0000               	nop
  1198  07E6                     l906:
  1199                           
  1200                           ;Lab03_Master.c: 157:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1201  07E6  3002               	movlw	2
  1202  07E7  00F7               	movwf	??_Eusart+2
  1203  07E8  3004               	movlw	4
  1204  07E9  00F6               	movwf	??_Eusart+1
  1205  07EA  30BA               	movlw	186
  1206  07EB  00F5               	movwf	??_Eusart
  1207  07EC                     u167:
  1208  07EC  0BF5               	decfsz	??_Eusart,f
  1209  07ED  2FEC               	goto	u167
  1210  07EE  0BF6               	decfsz	??_Eusart+1,f
  1211  07EF  2FEC               	goto	u167
  1212  07F0  0BF7               	decfsz	??_Eusart+2,f
  1213  07F1  2FEC               	goto	u167
  1214  07F2  0000               	nop
  1215  07F3                     l908:
  1216                           
  1217                           ;Lab03_Master.c: 158:    printf("\r---------------\r");
  1218  07F3  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1219  07F4  120A  118A  26E1  120A  118A  	fcall	_printf
  1220  07F9                     l70:
  1221  07F9  0008               	return
  1222  07FA                     __end_of_Eusart:
  1223                           
  1224                           	psect	text7
  1225  06E1                     __ptext7:	
  1226 ;; *************** function _printf *****************
  1227 ;; Defined at:
  1228 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  f               1    wreg     PTR const unsigned char 
  1231 ;;		 -> STR_4(18), STR_3(13), STR_2(18), STR_1(13), 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  f               1    4[COMMON] PTR const unsigned char 
  1234 ;;		 -> STR_4(18), STR_3(13), STR_2(18), STR_1(13), 
  1235 ;;  tmpval          4    0        struct .
  1236 ;;  cp              2    0        PTR const unsigned char 
  1237 ;;  len             2    0        unsigned int 
  1238 ;;  val             2    0        unsigned int 
  1239 ;;  c               1    3[COMMON] unsigned char 
  1240 ;;  ap              1    2[COMMON] PTR void [1]
  1241 ;;		 -> ?_printf(2), 
  1242 ;;  flag            1    0        unsigned char 
  1243 ;;  prec            1    0        char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2   46[None  ] int 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         3       0       0       0       0
  1255 ;;      Temps:          1       0       0       0       0
  1256 ;;      Totals:         4       0       0       0       0
  1257 ;;Total ram usage:        4 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    1
  1260 ;; This function calls:
  1261 ;;		_putch
  1262 ;; This function is called by:
  1263 ;;		_Eusart
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _printf
  1269  06E1                     _printf:
  1270                           
  1271                           ;incstack = 0
  1272                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1273                           ;printf@f stored from wreg
  1274  06E1  00F4               	movwf	printf@f
  1275  06E2                     l846:
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1278  06E2  3070               	movlw	(low (?_printf| 0))& (0+255)
  1279  06E3  00F1               	movwf	??_printf
  1280  06E4  0871               	movf	??_printf,w
  1281  06E5  00F2               	movwf	printf@ap
  1282                           
  1283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1284  06E6  2EED               	goto	l850
  1285  06E7                     l848:
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1288  06E7  0873               	movf	printf@c,w
  1289  06E8  120A  118A  26C1  120A  118A  	fcall	_putch
  1290  06ED                     l850:	
  1291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1292                           
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1295  06ED  3001               	movlw	1
  1296  06EE  07F4               	addwf	printf@f,f
  1297  06EF  30FF               	movlw	-1
  1298  06F0  0774               	addwf	printf@f,w
  1299  06F1  0084               	movwf	4
  1300  06F2  120A  118A  2003  120A  118A  	fcall	stringdir
  1301  06F7  00F1               	movwf	??_printf
  1302  06F8  0871               	movf	??_printf,w
  1303  06F9  00F3               	movwf	printf@c
  1304  06FA  0873               	movf	printf@c,w
  1305  06FB  1D03               	btfss	3,2
  1306  06FC  2EFE               	goto	u61
  1307  06FD  2EFF               	goto	u60
  1308  06FE                     u61:
  1309  06FE  2EE7               	goto	l848
  1310  06FF                     u60:
  1311  06FF                     l196:
  1312  06FF  0008               	return
  1313  0700                     __end_of_printf:
  1314                           
  1315                           	psect	text8
  1316  06C1                     __ptext8:	
  1317 ;; *************** function _putch *****************
  1318 ;; Defined at:
  1319 ;;		line 138 in file "Lab03_Master.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  data            1    wreg     unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  data            1    0[COMMON] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       0       0       0       0
  1334 ;;      Locals:         1       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0
  1336 ;;      Totals:         1       0       0       0       0
  1337 ;;Total ram usage:        1 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_printf
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _putch
  1348  06C1                     _putch:
  1349                           
  1350                           ;incstack = 0
  1351                           ; Regs used in _putch: [wreg]
  1352                           ;putch@data stored from wreg
  1353  06C1  00F0               	movwf	putch@data
  1354  06C2                     l706:
  1355  06C2                     l64:	
  1356                           ;Lab03_Master.c: 139:     while (TXIF == 0);
  1357                           
  1358  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1359  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1360  06C4  1E0C               	btfss	12,4	;volatile
  1361  06C5  2EC7               	goto	u11
  1362  06C6  2EC8               	goto	u10
  1363  06C7                     u11:
  1364  06C7  2EC2               	goto	l64
  1365  06C8                     u10:
  1366  06C8                     l708:
  1367                           
  1368                           ;Lab03_Master.c: 140:     TXREG = data;
  1369  06C8  0870               	movf	putch@data,w
  1370  06C9  0099               	movwf	25	;volatile
  1371  06CA                     l67:
  1372  06CA  0008               	return
  1373  06CB                     __end_of_putch:
  1374  007E                     btemp	set	126	;btemp
  1375  007E                     wtemp0	set	126
  1376                           
  1377                           	psect	config
  1378                           
  1379                           ;Config register CONFIG1 @ 0x2007
  1380                           ;	Oscillator Selection bits
  1381                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1382                           ;	Watchdog Timer Enable bit
  1383                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1384                           ;	Power-up Timer Enable bit
  1385                           ;	PWRTE = OFF, PWRT disabled
  1386                           ;	RE3/MCLR pin function select bit
  1387                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1388                           ;	Code Protection bit
  1389                           ;	CP = OFF, Program memory code protection is disabled
  1390                           ;	Data Code Protection bit
  1391                           ;	CPD = OFF, Data memory code protection is disabled
  1392                           ;	Brown Out Reset Selection bits
  1393                           ;	BOREN = OFF, BOR disabled
  1394                           ;	Internal External Switchover bit
  1395                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1396                           ;	Fail-Safe Clock Monitor Enabled bit
  1397                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1398                           ;	Low Voltage Programming Enable bit
  1399                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1400                           ;	In-Circuit Debugger Mode bit
  1401                           ;	DEBUG = 0x1, unprogrammed default
  1402  2007                     	org	8199
  1403  2007  20D4               	dw	8404
  1404                           
  1405                           ;Config register CONFIG2 @ 0x2008
  1406                           ;	Brown-out Reset Selection bit
  1407                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1408                           ;	Flash Program Memory Self Write Enable bits
  1409                           ;	WRT = OFF, Write protection off
  1410  2008                     	org	8200
  1411  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[13]), STR_2(CODE[18]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_Eusart
    _setup->_spiInit
    _Eusart->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     568
                                              8 COMMON     2     2      0
                             _Eusart
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Eusart                                               3     3      0     193
                                              5 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0     193
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Eusart
     _printf
       _putch
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 19:52:16 2021

                      pc 0002              _SSPSTATbits 0094                       l61 0732  
                     l70 07F9                       l64 06C2                       l90 06B1  
                     l67 06CA                       l93 06B7                       l86 06DB  
                     l87 06E0                       l96 06B0                       u10 06C8  
                     u11 06C7                       u40 06B7                       u41 06B6  
                     u50 06D3                       u51 06D2                       u60 06FF  
                     u61 06FE                       u77 0744                       u87 075F  
                     u97 076C                       fsr 0004                      l104 06C0  
                    l196 06FF                      l706 06C2                      l708 06C8  
                    l900 07C0                      l902 07D3                      l904 07D9  
                    l840 06D5                      l728 06B1                      l920 0749  
                    l912 0733                      l850 06ED                      l906 07E6  
                    l842 06D7                      l930 0767                      l922 074F  
                    l914 0738                      l908 07F3                      l844 06DA  
                    l836 06CC                      l860 0709                      l852 0700  
                    l940 0783                      l932 0768                      l924 0757  
                    l916 073D                      l846 06E2                      l838 06D3  
                    l870 071E                      l862 0710                      l854 0704  
                    l790 06AC                      l942 078C                      l934 0771  
                    l926 075B                      l918 0740                      l848 06E7  
                    l880 0725                      l872 071F                      l864 0711  
                    l856 0707                      l792 06B8                      l936 0777  
                    l928 0764                      l890 072F                      l882 0729  
                    l874 0720                      l866 071A                      l858 0708  
                    l794 06BD                      l938 077F                      l892 0793  
                    l884 072A                      l876 0721                      l868 071D  
                    l894 07A0                      l886 072D                      l878 0722  
                    l896 07A6                      l888 072E                      l898 07B3  
                    u107 0787                      u117 0799                      u127 07AC  
                    u137 07B9                      u147 07CC                      u157 07DF  
                    u167 07EC                      fsr0 0004                     STR_1 001B  
                   STR_2 0009                     STR_3 0028                     STR_4 0009  
                   _TXIF 0064                     _main 0733                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
                  _setup 0700                    _putch 06C1                    pclath 000A  
        __end_of_spiInit 06E1          __end_of_spiRead 06C1                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 0793  
                 ??_main 0078                   ?_setup 0070                   ?_putch 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _Eusart 0793                   _printf 06E1         __end_of_spiWrite 06B1  
              ??_spiInit 0073                ??_spiRead 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 0733            __end_of_putch 06CB  
                ??_setup 0074                  ??_putch 0070                  ?_Eusart 0070  
             __pmaintext 0733  __size_of_spiReceiveWait 0007                  ?_printf 0070  
                _SSPSTAT 0094               __stringtab 0003          __size_of_Eusart 0067  
              ?_spiWrite 0070                  __ptext1 06AB                  __ptext2 06B8  
                __ptext3 06B1                  __ptext4 0700                  __ptext5 06CB  
                __ptext6 0793                  __ptext7 06E1                  __ptext8 06C1  
        __size_of_printf 001F                  _spiInit 06CB                  _spiRead 06B8  
                _sensor1 007B                  _sensor2 007A     end_of_initialization 07FC  
              _RCSTAbits 0018                  printf@c 0073                  printf@f 0074  
             ??_spiWrite 0070                _PORTCbits 0007                _TRISCbits 0087  
            spiWrite@dat 0070                _TXSTAbits 0098           __end_of_Eusart 07FA  
         _spiReceiveWait 06B1              _BAUDCTLbits 0187           __end_of_printf 0700  
    start_initialization 07FA                 ??_Eusart 0075   __end_of_spiReceiveWait 06B8  
               ??_printf 0071              __pbssCOMMON 007A                ___latbits 0002  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                __pstrings 0003  
               ?_spiInit 0070                 ?_spiRead 0070           __size_of_setup 0033  
         __size_of_putch 000A     spiInit@sTransmitEdge 0072       spiInit@sDataSample 0070  
            __stringbase 0008       __end_of__stringtab 0009         __size_of_spiInit 0016  
       __size_of_spiRead 0009            __size_of_main 0060                 _spiWrite 06AB  
           spiInit@sType 0073        spiInit@sClockIdle 0071                putch@data 0070  
       ??_spiReceiveWait 0070                stringcode 0003               _OSCCONbits 008F  
               printf@ap 0072                 stringdir 0003                 stringtab 0003  
