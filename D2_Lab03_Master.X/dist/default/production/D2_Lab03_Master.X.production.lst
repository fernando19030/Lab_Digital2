

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 20:46:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  0019                     _TXREG	set	25
   291  0018                     _RCSTAbits	set	24
   292  0008                     _PORTD	set	8
   293  0006                     _PORTB	set	6
   294  0007                     _PORTCbits	set	7
   295  0064                     _TXIF	set	100
   296  0094                     _SSPSTATbits	set	148
   297  0094                     _SSPSTAT	set	148
   298  009A                     _SPBRGH	set	154
   299  0099                     _SPBRG	set	153
   300  0098                     _TXSTAbits	set	152
   301  008F                     _OSCCONbits	set	143
   302  0088                     _TRISD	set	136
   303  0086                     _TRISB	set	134
   304  0087                     _TRISCbits	set	135
   305  043B                     _TRISC3	set	1083
   306  043D                     _TRISC5	set	1085
   307  0187                     _BAUDCTLbits	set	391
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	strings
   312  0003                     __pstrings:
   313  0003                     stringtab:
   314  0003                     __stringtab:
   315  0003                     stringcode:	
   316                           ;	String table - string pointers are 1 byte each
   317                           
   318  0003                     stringdir:
   319  0003  3000               	movlw	high stringdir
   320  0004  008A               	movwf	10
   321  0005  0804               	movf	4,w
   322  0006  0A84               	incf	4,f
   323  0007  0782               	addwf	2,f
   324  0008                     __stringbase:
   325  0008  3400               	retlw	0
   326  0009                     __end_of__stringtab:
   327  0009                     STR_2:
   328  0009  340D               	retlw	13
   329  000A  342D               	retlw	45	;'-'
   330  000B  342D               	retlw	45	;'-'
   331  000C  342D               	retlw	45	;'-'
   332  000D  342D               	retlw	45	;'-'
   333  000E  342D               	retlw	45	;'-'
   334  000F  342D               	retlw	45	;'-'
   335  0010  342D               	retlw	45	;'-'
   336  0011  342D               	retlw	45	;'-'
   337  0012  342D               	retlw	45	;'-'
   338  0013  342D               	retlw	45	;'-'
   339  0014  342D               	retlw	45	;'-'
   340  0015  342D               	retlw	45	;'-'
   341  0016  342D               	retlw	45	;'-'
   342  0017  342D               	retlw	45	;'-'
   343  0018  342D               	retlw	45	;'-'
   344  0019  340D               	retlw	13
   345  001A  3400               	retlw	0
   346  001B                     STR_1:
   347  001B  340D               	retlw	13
   348  001C  3453               	retlw	83	;'S'
   349  001D  3465               	retlw	101	;'e'
   350  001E  346E               	retlw	110	;'n'
   351  001F  3473               	retlw	115	;'s'
   352  0020  346F               	retlw	111	;'o'
   353  0021  3472               	retlw	114	;'r'
   354  0022  3420               	retlw	32	;' '
   355  0023  3431               	retlw	49	;'1'
   356  0024  343A               	retlw	58	;':'
   357  0025  3420               	retlw	32	;' '
   358  0026  340D               	retlw	13
   359  0027  3400               	retlw	0
   360  0028                     STR_3:
   361  0028  340D               	retlw	13
   362  0029  3453               	retlw	83	;'S'
   363  002A  3465               	retlw	101	;'e'
   364  002B  346E               	retlw	110	;'n'
   365  002C  3473               	retlw	115	;'s'
   366  002D  346F               	retlw	111	;'o'
   367  002E  3472               	retlw	114	;'r'
   368  002F  3420               	retlw	32	;' '
   369  0030  3432               	retlw	50	;'2'
   370  0031  343A               	retlw	58	;':'
   371  0032  3420               	retlw	32	;' '
   372  0033  340D               	retlw	13
   373  0034  3400               	retlw	0
   374  0009                     
   375                           	psect	cinit
   376  07FA                     start_initialization:	
   377                           ; #config settings
   378                           
   379  07FA                     __initialization:
   380                           
   381                           ; Clear objects allocated to COMMON
   382  07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   383  07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   384  07FC                     end_of_initialization:	
   385                           ;End of C runtime variable initialization code
   386                           
   387  07FC                     __end_of__initialization:
   388  07FC  0183               	clrf	3
   389  07FD  120A  118A  2F3B   	ljmp	_main	;jump to C main() function
   390                           
   391                           	psect	bssCOMMON
   392  007A                     __pbssCOMMON:
   393  007A                     _sensor2:
   394  007A                     	ds	1
   395  007B                     _sensor1:
   396  007B                     	ds	1
   397                           
   398                           	psect	cstackCOMMON
   399  0070                     __pcstackCOMMON:
   400  0070                     ?_setup:
   401  0070                     ?_spiWrite:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_spiWrite:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_spiRead:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_spiRead:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Eusart:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_spiInit:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_putch:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ??_putch:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_spiReceiveWait:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_spiReceiveWait:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_printf:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     putch@data:	
   438                           ; 2 bytes @ 0x0
   439                           
   440  0070                     spiInit@sDataSample:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     spiWrite@dat:	
   444                           ; 1 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     ??_printf:
   450  0071                     spiInit@sClockIdle:	
   451                           ; 1 bytes @ 0x1
   452                           
   453                           
   454                           ; 1 bytes @ 0x1
   455  0071                     	ds	1
   456  0072                     spiInit@sTransmitEdge:
   457  0072                     printf@ap:	
   458                           ; 1 bytes @ 0x2
   459                           
   460                           
   461                           ; 1 bytes @ 0x2
   462  0072                     	ds	1
   463  0073                     ??_spiInit:
   464  0073                     spiInit@sType:	
   465                           ; 1 bytes @ 0x3
   466                           
   467  0073                     printf@c:	
   468                           ; 1 bytes @ 0x3
   469                           
   470                           
   471                           ; 1 bytes @ 0x3
   472  0073                     	ds	1
   473  0074                     ??_setup:
   474  0074                     printf@f:	
   475                           ; 1 bytes @ 0x4
   476                           
   477                           
   478                           ; 1 bytes @ 0x4
   479  0074                     	ds	1
   480  0075                     ??_Eusart:
   481                           
   482                           ; 1 bytes @ 0x5
   483  0075                     	ds	3
   484  0078                     ??_main:
   485                           
   486                           ; 1 bytes @ 0x8
   487  0078                     	ds	2
   488                           
   489                           	psect	maintext
   490  073B                     __pmaintext:	
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 63 in file "Lab03_Master.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : B00/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          2       0       0       0       0
   513 ;;      Totals:         2       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels required when called:    3
   516 ;; This function calls:
   517 ;;		_Eusart
   518 ;;		_setup
   519 ;;		_spiRead
   520 ;;		_spiWrite
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  073B                     _main:
   529  073B                     l896:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;Lab03_Master.c: 64:     setup();
   535  073B  120A  118A  270B  120A  118A  	fcall	_setup
   536  0740                     l898:
   537                           
   538                           ;Lab03_Master.c: 70:        PORTCbits.RC2 = 0;
   539  0740  1283               	bcf	3,5	;RP0=0, select bank0
   540  0741  1303               	bcf	3,6	;RP1=0, select bank0
   541  0742  1107               	bcf	7,2	;volatile
   542  0743                     l900:
   543                           
   544                           ;Lab03_Master.c: 71:        _delay((unsigned long)((1)*(8000000/4000.0)));
   545  0743  3003               	movlw	3
   546  0744  00F9               	movwf	??_main+1
   547  0745  3097               	movlw	151
   548  0746  00F8               	movwf	??_main
   549  0747                     u77:
   550  0747  0BF8               	decfsz	??_main,f
   551  0748  2F47               	goto	u77
   552  0749  0BF9               	decfsz	??_main+1,f
   553  074A  2F47               	goto	u77
   554  074B  2F4C               	nop2
   555  074C                     l902:
   556                           
   557                           ;Lab03_Master.c: 73:        spiWrite(1);
   558  074C  3001               	movlw	1
   559  074D  120A  118A  26B6  120A  118A  	fcall	_spiWrite
   560  0752                     l904:
   561                           
   562                           ;Lab03_Master.c: 74:        PORTB = spiRead();
   563  0752  120A  118A  26C3  120A  118A  	fcall	_spiRead
   564  0757  1283               	bcf	3,5	;RP0=0, select bank0
   565  0758  1303               	bcf	3,6	;RP1=0, select bank0
   566  0759  0086               	movwf	6	;volatile
   567  075A                     l906:
   568                           
   569                           ;Lab03_Master.c: 76:        _delay((unsigned long)((1)*(8000000/4000.0)));
   570  075A  3003               	movlw	3
   571  075B  00F9               	movwf	??_main+1
   572  075C  3097               	movlw	151
   573  075D  00F8               	movwf	??_main
   574  075E                     u87:
   575  075E  0BF8               	decfsz	??_main,f
   576  075F  2F5E               	goto	u87
   577  0760  0BF9               	decfsz	??_main+1,f
   578  0761  2F5E               	goto	u87
   579  0762  2F63               	nop2
   580  0763                     l908:
   581                           
   582                           ;Lab03_Master.c: 77:        PORTCbits.RC2 = 1;
   583  0763  1283               	bcf	3,5	;RP0=0, select bank0
   584  0764  1303               	bcf	3,6	;RP1=0, select bank0
   585  0765  1507               	bsf	7,2	;volatile
   586  0766                     l910:
   587                           
   588                           ;Lab03_Master.c: 79:        PORTCbits.RC2 = 0;
   589  0766  1107               	bcf	7,2	;volatile
   590  0767                     l912:
   591                           
   592                           ;Lab03_Master.c: 80:        _delay((unsigned long)((1)*(8000000/4000.0)));
   593  0767  3003               	movlw	3
   594  0768  00F9               	movwf	??_main+1
   595  0769  3097               	movlw	151
   596  076A  00F8               	movwf	??_main
   597  076B                     u97:
   598  076B  0BF8               	decfsz	??_main,f
   599  076C  2F6B               	goto	u97
   600  076D  0BF9               	decfsz	??_main+1,f
   601  076E  2F6B               	goto	u97
   602  076F  2F70               	nop2
   603  0770                     l914:
   604                           
   605                           ;Lab03_Master.c: 82:        spiWrite(2);
   606  0770  3002               	movlw	2
   607  0771  120A  118A  26B6  120A  118A  	fcall	_spiWrite
   608  0776                     l916:
   609                           
   610                           ;Lab03_Master.c: 83:        PORTD = spiRead();
   611  0776  120A  118A  26C3  120A  118A  	fcall	_spiRead
   612  077B  1283               	bcf	3,5	;RP0=0, select bank0
   613  077C  1303               	bcf	3,6	;RP1=0, select bank0
   614  077D  0088               	movwf	8	;volatile
   615  077E                     l918:
   616                           
   617                           ;Lab03_Master.c: 85:        _delay((unsigned long)((1)*(8000000/4000.0)));
   618  077E  3003               	movlw	3
   619  077F  00F9               	movwf	??_main+1
   620  0780  3097               	movlw	151
   621  0781  00F8               	movwf	??_main
   622  0782                     u107:
   623  0782  0BF8               	decfsz	??_main,f
   624  0783  2F82               	goto	u107
   625  0784  0BF9               	decfsz	??_main+1,f
   626  0785  2F82               	goto	u107
   627  0786  2F87               	nop2
   628  0787                     l920:
   629                           
   630                           ;Lab03_Master.c: 86:        PORTCbits.RC2 = 1;
   631  0787  1283               	bcf	3,5	;RP0=0, select bank0
   632  0788  1303               	bcf	3,6	;RP1=0, select bank0
   633  0789  1507               	bsf	7,2	;volatile
   634  078A                     l922:
   635                           
   636                           ;Lab03_Master.c: 88:        Eusart();
   637  078A  120A  118A  2793  120A  118A  	fcall	_Eusart
   638  078F  2F40               	goto	l898
   639  0790  120A  118A  2800   	ljmp	start
   640  0793                     __end_of_main:
   641                           
   642                           	psect	text1
   643  06B6                     __ptext1:	
   644 ;; *************** function _spiWrite *****************
   645 ;; Defined at:
   646 ;;		line 34 in file "Librerias.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  dat             1    wreg     unsigned char 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  dat             1    0[COMMON] unsigned char 
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         1       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         1       0       0       0       0
   664 ;;Total ram usage:        1 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _spiWrite
   675  06B6                     _spiWrite:
   676                           
   677                           ;incstack = 0
   678                           ; Regs used in _spiWrite: [wreg]
   679                           ;spiWrite@dat stored from wreg
   680  06B6  00F0               	movwf	spiWrite@dat
   681  06B7                     l764:
   682                           
   683                           ;Librerias.c: 34: void spiWrite(char dat);Librerias.c: 35: {;Librerias.c: 36:     SSPBUF
      +                           = dat;
   684  06B7  0870               	movf	spiWrite@dat,w
   685  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   686  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   687  06BA  0093               	movwf	19	;volatile
   688  06BB                     l96:
   689  06BB  0008               	return
   690  06BC                     __end_of_spiWrite:
   691                           
   692                           	psect	text2
   693  06C3                     __ptext2:	
   694 ;; *************** function _spiRead *****************
   695 ;; Defined at:
   696 ;;		line 47 in file "Librerias.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      unsigned char 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    1
   717 ;; This function calls:
   718 ;;		_spiReceiveWait
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _spiRead
   726  06C3                     _spiRead:
   727  06C3                     l766:	
   728                           ;incstack = 0
   729                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   730                           
   731                           
   732                           ;Librerias.c: 49:     spiReceiveWait();
   733  06C3  120A  118A  26BC  120A  118A  	fcall	_spiReceiveWait
   734  06C8                     l768:
   735                           
   736                           ;Librerias.c: 50:     return(SSPBUF);
   737  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   738  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   739  06CA  0813               	movf	19,w	;volatile
   740  06CB                     l104:
   741  06CB  0008               	return
   742  06CC                     __end_of_spiRead:
   743                           
   744                           	psect	text3
   745  06BC                     __ptext3:	
   746 ;; *************** function _spiReceiveWait *****************
   747 ;; Defined at:
   748 ;;		line 29 in file "Librerias.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		None
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         0       0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_spiRead
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _spiReceiveWait
   777  06BC                     _spiReceiveWait:
   778  06BC                     l728:	
   779                           ;incstack = 0
   780                           ; Regs used in _spiReceiveWait: []
   781                           
   782  06BC                     l90:	
   783                           ;Librerias.c: 31:     while ( !SSPSTATbits.BF );
   784                           
   785  06BC  1683               	bsf	3,5	;RP0=1, select bank1
   786  06BD  1303               	bcf	3,6	;RP1=0, select bank1
   787  06BE  1C14               	btfss	20,0	;volatile
   788  06BF  2EC1               	goto	u41
   789  06C0  2EC2               	goto	u40
   790  06C1                     u41:
   791  06C1  2EBC               	goto	l90
   792  06C2                     u40:
   793  06C2                     l93:
   794  06C2  0008               	return
   795  06C3                     __end_of_spiReceiveWait:
   796                           
   797                           	psect	text4
   798  070B                     __ptext4:	
   799 ;; *************** function _setup *****************
   800 ;; Defined at:
   801 ;;		line 95 in file "Lab03_Master.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0
   818 ;;      Totals:         0       0       0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    1
   822 ;; This function calls:
   823 ;;		_spiInit
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _setup
   831  070B                     _setup:
   832  070B                     l842:	
   833                           ;incstack = 0
   834                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   835                           
   836                           
   837                           ;Lab03_Master.c: 96:     ANSEL = 0x00;
   838  070B  1683               	bsf	3,5	;RP0=1, select bank3
   839  070C  1703               	bsf	3,6	;RP1=1, select bank3
   840  070D  0188               	clrf	8	;volatile
   841                           
   842                           ;Lab03_Master.c: 97:     ANSELH = 0x00;
   843  070E  0189               	clrf	9	;volatile
   844  070F                     l844:
   845                           
   846                           ;Lab03_Master.c: 99:     TRISCbits.TRISC2 = 0;
   847  070F  1683               	bsf	3,5	;RP0=1, select bank1
   848  0710  1303               	bcf	3,6	;RP1=0, select bank1
   849  0711  1107               	bcf	7,2	;volatile
   850                           
   851                           ;Lab03_Master.c: 103:     TRISB = 0x00;
   852  0712  0186               	clrf	6	;volatile
   853                           
   854                           ;Lab03_Master.c: 104:     TRISD = 0x00;
   855  0713  0188               	clrf	8	;volatile
   856                           
   857                           ;Lab03_Master.c: 106:     PORTB = 0x00;
   858  0714  1283               	bcf	3,5	;RP0=0, select bank0
   859  0715  1303               	bcf	3,6	;RP1=0, select bank0
   860  0716  0186               	clrf	6	;volatile
   861                           
   862                           ;Lab03_Master.c: 107:     PORTD = 0x00;
   863  0717  0188               	clrf	8	;volatile
   864  0718                     l846:
   865                           
   866                           ;Lab03_Master.c: 108:     PORTCbits.RC2 = 1;
   867  0718  1507               	bsf	7,2	;volatile
   868  0719                     l848:
   869                           
   870                           ;Lab03_Master.c: 109:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK
      +                          _IDLE_LOW, SPI_IDLE_2_ACTIVE);
   871  0719  01F0               	clrf	spiInit@sDataSample
   872  071A  01F1               	clrf	spiInit@sClockIdle
   873  071B  01F2               	clrf	spiInit@sTransmitEdge
   874  071C  3020               	movlw	32
   875  071D  120A  118A  26D6  120A  118A  	fcall	_spiInit
   876  0722                     l850:
   877                           
   878                           ;Lab03_Master.c: 112:     OSCCONbits.IRCF2 = 1;
   879  0722  1683               	bsf	3,5	;RP0=1, select bank1
   880  0723  1303               	bcf	3,6	;RP1=0, select bank1
   881  0724  170F               	bsf	15,6	;volatile
   882  0725                     l852:
   883                           
   884                           ;Lab03_Master.c: 113:     OSCCONbits.IRCF1 = 1;
   885  0725  168F               	bsf	15,5	;volatile
   886  0726                     l854:
   887                           
   888                           ;Lab03_Master.c: 114:     OSCCONbits.IRCF0 = 1;
   889  0726  160F               	bsf	15,4	;volatile
   890  0727                     l856:
   891                           
   892                           ;Lab03_Master.c: 115:     OSCCONbits.SCS = 1;
   893  0727  140F               	bsf	15,0	;volatile
   894  0728                     l858:
   895                           
   896                           ;Lab03_Master.c: 118:     TXSTAbits.SYNC = 0;
   897  0728  1218               	bcf	24,4	;volatile
   898  0729                     l860:
   899                           
   900                           ;Lab03_Master.c: 119:     TXSTAbits.BRGH = 1;
   901  0729  1518               	bsf	24,2	;volatile
   902  072A                     l862:
   903                           
   904                           ;Lab03_Master.c: 121:     BAUDCTLbits.BRG16 = 1;
   905  072A  1683               	bsf	3,5	;RP0=1, select bank3
   906  072B  1703               	bsf	3,6	;RP1=1, select bank3
   907  072C  1587               	bsf	7,3	;volatile
   908  072D                     l864:
   909                           
   910                           ;Lab03_Master.c: 123:     SPBRG = 207;
   911  072D  30CF               	movlw	207
   912  072E  1683               	bsf	3,5	;RP0=1, select bank1
   913  072F  1303               	bcf	3,6	;RP1=0, select bank1
   914  0730  0099               	movwf	25	;volatile
   915  0731                     l866:
   916                           
   917                           ;Lab03_Master.c: 124:     SPBRGH = 0;
   918  0731  019A               	clrf	26	;volatile
   919  0732                     l868:
   920                           
   921                           ;Lab03_Master.c: 126:     RCSTAbits.SPEN = 1;
   922  0732  1283               	bcf	3,5	;RP0=0, select bank0
   923  0733  1303               	bcf	3,6	;RP1=0, select bank0
   924  0734  1798               	bsf	24,7	;volatile
   925  0735                     l870:
   926                           
   927                           ;Lab03_Master.c: 127:     RCSTAbits.RX9 = 0;
   928  0735  1318               	bcf	24,6	;volatile
   929  0736                     l872:
   930                           
   931                           ;Lab03_Master.c: 128:     RCSTAbits.CREN = 1;
   932  0736  1618               	bsf	24,4	;volatile
   933  0737                     l874:
   934                           
   935                           ;Lab03_Master.c: 130:     TXSTAbits.TXEN = 1;
   936  0737  1683               	bsf	3,5	;RP0=1, select bank1
   937  0738  1303               	bcf	3,6	;RP1=0, select bank1
   938  0739  1698               	bsf	24,5	;volatile
   939  073A                     l61:
   940  073A  0008               	return
   941  073B                     __end_of_setup:
   942                           
   943                           	psect	text5
   944  06D6                     __ptext5:	
   945 ;; *************** function _spiInit *****************
   946 ;; Defined at:
   947 ;;		line 12 in file "Librerias.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  sType           1    wreg     enum E1264
   950 ;;  sDataSample     1    0[COMMON] enum E1272
   951 ;;  sClockIdle      1    1[COMMON] enum E1276
   952 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  sType           1    3[COMMON] enum E1264
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         3       0       0       0       0
   965 ;;      Locals:         1       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0
   967 ;;      Totals:         4       0       0       0       0
   968 ;;Total ram usage:        4 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_setup
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _spiInit
   979  06D6                     _spiInit:
   980                           
   981                           ;incstack = 0
   982                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   983                           ;spiInit@sType stored from wreg
   984  06D6  00F3               	movwf	spiInit@sType
   985  06D7                     l826:
   986                           
   987                           ;Librerias.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);Librerias.c: 13: {;Librerias.c: 14:     
      +                          TRISC5 = 0;
   988  06D7  1683               	bsf	3,5	;RP0=1, select bank1
   989  06D8  1303               	bcf	3,6	;RP1=0, select bank1
   990  06D9  1287               	bcf	7,5	;volatile
   991                           
   992                           ;Librerias.c: 15:     if(sType & 0b00000100)
   993  06DA  1D73               	btfss	spiInit@sType,2
   994  06DB  2EDD               	goto	u51
   995  06DC  2EDE               	goto	u50
   996  06DD                     u51:
   997  06DD  2EE2               	goto	l832
   998  06DE                     u50:
   999  06DE                     l828:
  1000                           
  1001                           ;Librerias.c: 16:     {;Librerias.c: 17:         SSPSTAT = sTransmitEdge;
  1002  06DE  0872               	movf	spiInit@sTransmitEdge,w
  1003  06DF  0094               	movwf	20	;volatile
  1004  06E0                     l830:
  1005                           
  1006                           ;Librerias.c: 18:         TRISC3 = 1;
  1007  06E0  1587               	bsf	7,3	;volatile
  1008                           
  1009                           ;Librerias.c: 19:     }
  1010  06E1  2EE6               	goto	l86
  1011  06E2                     l832:
  1012                           
  1013                           ;Librerias.c: 21:     {;Librerias.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1014  06E2  0870               	movf	spiInit@sDataSample,w
  1015  06E3  0472               	iorwf	spiInit@sTransmitEdge,w
  1016  06E4  0094               	movwf	20	;volatile
  1017  06E5                     l834:
  1018                           
  1019                           ;Librerias.c: 23:         TRISC3 = 0;
  1020  06E5  1187               	bcf	7,3	;volatile
  1021  06E6                     l86:	
  1022                           ;Librerias.c: 24:     }
  1023                           
  1024                           
  1025                           ;Librerias.c: 26:     SSPCON = sType | sClockIdle;
  1026  06E6  0873               	movf	spiInit@sType,w
  1027  06E7  0471               	iorwf	spiInit@sClockIdle,w
  1028  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1029  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1030  06EA  0094               	movwf	20	;volatile
  1031  06EB                     l87:
  1032  06EB  0008               	return
  1033  06EC                     __end_of_spiInit:
  1034                           
  1035                           	psect	text6
  1036  0793                     __ptext6:	
  1037 ;; *************** function _Eusart *****************
  1038 ;; Defined at:
  1039 ;;		line 140 in file "Lab03_Master.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0
  1055 ;;      Temps:          3       0       0       0       0
  1056 ;;      Totals:         3       0       0       0       0
  1057 ;;Total ram usage:        3 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    2
  1060 ;; This function calls:
  1061 ;;		_printf
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _Eusart
  1069  0793                     _Eusart:
  1070  0793                     l876:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _Eusart: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1073                           
  1074                           
  1075                           ;Lab03_Master.c: 141:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1076  0793  3002               	movlw	2
  1077  0794  00F7               	movwf	??_Eusart+2
  1078  0795  3004               	movlw	4
  1079  0796  00F6               	movwf	??_Eusart+1
  1080  0797  30BA               	movlw	186
  1081  0798  00F5               	movwf	??_Eusart
  1082  0799                     u117:
  1083  0799  0BF5               	decfsz	??_Eusart,f
  1084  079A  2F99               	goto	u117
  1085  079B  0BF6               	decfsz	??_Eusart+1,f
  1086  079C  2F99               	goto	u117
  1087  079D  0BF7               	decfsz	??_Eusart+2,f
  1088  079E  2F99               	goto	u117
  1089  079F  0000               	nop
  1090  07A0                     l878:
  1091                           
  1092                           ;Lab03_Master.c: 142:    printf("\rSensor 1: \r");
  1093  07A0  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1094  07A1  120A  118A  26EC  120A  118A  	fcall	_printf
  1095  07A6                     l880:
  1096                           
  1097                           ;Lab03_Master.c: 143:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1098  07A6  3002               	movlw	2
  1099  07A7  00F7               	movwf	??_Eusart+2
  1100  07A8  3004               	movlw	4
  1101  07A9  00F6               	movwf	??_Eusart+1
  1102  07AA  30BA               	movlw	186
  1103  07AB  00F5               	movwf	??_Eusart
  1104  07AC                     u127:
  1105  07AC  0BF5               	decfsz	??_Eusart,f
  1106  07AD  2FAC               	goto	u127
  1107  07AE  0BF6               	decfsz	??_Eusart+1,f
  1108  07AF  2FAC               	goto	u127
  1109  07B0  0BF7               	decfsz	??_Eusart+2,f
  1110  07B1  2FAC               	goto	u127
  1111  07B2  0000               	nop
  1112  07B3                     l882:
  1113                           
  1114                           ;Lab03_Master.c: 145:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1115  07B3  3002               	movlw	2
  1116  07B4  00F7               	movwf	??_Eusart+2
  1117  07B5  3004               	movlw	4
  1118  07B6  00F6               	movwf	??_Eusart+1
  1119  07B7  30BA               	movlw	186
  1120  07B8  00F5               	movwf	??_Eusart
  1121  07B9                     u137:
  1122  07B9  0BF5               	decfsz	??_Eusart,f
  1123  07BA  2FB9               	goto	u137
  1124  07BB  0BF6               	decfsz	??_Eusart+1,f
  1125  07BC  2FB9               	goto	u137
  1126  07BD  0BF7               	decfsz	??_Eusart+2,f
  1127  07BE  2FB9               	goto	u137
  1128  07BF  0000               	nop
  1129  07C0                     l884:
  1130                           
  1131                           ;Lab03_Master.c: 146:    printf("\r---------------\r");
  1132  07C0  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1133  07C1  120A  118A  26EC  120A  118A  	fcall	_printf
  1134                           
  1135                           ;Lab03_Master.c: 149:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1136  07C6  3002               	movlw	2
  1137  07C7  00F7               	movwf	??_Eusart+2
  1138  07C8  3004               	movlw	4
  1139  07C9  00F6               	movwf	??_Eusart+1
  1140  07CA  30BA               	movlw	186
  1141  07CB  00F5               	movwf	??_Eusart
  1142  07CC                     u147:
  1143  07CC  0BF5               	decfsz	??_Eusart,f
  1144  07CD  2FCC               	goto	u147
  1145  07CE  0BF6               	decfsz	??_Eusart+1,f
  1146  07CF  2FCC               	goto	u147
  1147  07D0  0BF7               	decfsz	??_Eusart+2,f
  1148  07D1  2FCC               	goto	u147
  1149  07D2  0000               	nop
  1150  07D3                     l886:
  1151                           
  1152                           ;Lab03_Master.c: 150:    printf("\rSensor 2: \r");
  1153  07D3  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1154  07D4  120A  118A  26EC  120A  118A  	fcall	_printf
  1155  07D9                     l888:
  1156                           
  1157                           ;Lab03_Master.c: 151:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1158  07D9  3002               	movlw	2
  1159  07DA  00F7               	movwf	??_Eusart+2
  1160  07DB  3004               	movlw	4
  1161  07DC  00F6               	movwf	??_Eusart+1
  1162  07DD  30BA               	movlw	186
  1163  07DE  00F5               	movwf	??_Eusart
  1164  07DF                     u157:
  1165  07DF  0BF5               	decfsz	??_Eusart,f
  1166  07E0  2FDF               	goto	u157
  1167  07E1  0BF6               	decfsz	??_Eusart+1,f
  1168  07E2  2FDF               	goto	u157
  1169  07E3  0BF7               	decfsz	??_Eusart+2,f
  1170  07E4  2FDF               	goto	u157
  1171  07E5  0000               	nop
  1172  07E6                     l890:
  1173                           
  1174                           ;Lab03_Master.c: 153:    _delay((unsigned long)((100)*(8000000/4000.0)));
  1175  07E6  3002               	movlw	2
  1176  07E7  00F7               	movwf	??_Eusart+2
  1177  07E8  3004               	movlw	4
  1178  07E9  00F6               	movwf	??_Eusart+1
  1179  07EA  30BA               	movlw	186
  1180  07EB  00F5               	movwf	??_Eusart
  1181  07EC                     u167:
  1182  07EC  0BF5               	decfsz	??_Eusart,f
  1183  07ED  2FEC               	goto	u167
  1184  07EE  0BF6               	decfsz	??_Eusart+1,f
  1185  07EF  2FEC               	goto	u167
  1186  07F0  0BF7               	decfsz	??_Eusart+2,f
  1187  07F1  2FEC               	goto	u167
  1188  07F2  0000               	nop
  1189  07F3                     l892:
  1190                           
  1191                           ;Lab03_Master.c: 154:    printf("\r---------------\r");
  1192  07F3  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1193  07F4  120A  118A  26EC  120A  118A  	fcall	_printf
  1194  07F9                     l70:
  1195  07F9  0008               	return
  1196  07FA                     __end_of_Eusart:
  1197                           
  1198                           	psect	text7
  1199  06EC                     __ptext7:	
  1200 ;; *************** function _printf *****************
  1201 ;; Defined at:
  1202 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  f               1    wreg     PTR const unsigned char 
  1205 ;;		 -> STR_4(18), STR_3(13), STR_2(18), STR_1(13), 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  f               1    4[COMMON] PTR const unsigned char 
  1208 ;;		 -> STR_4(18), STR_3(13), STR_2(18), STR_1(13), 
  1209 ;;  tmpval          4    0        struct .
  1210 ;;  cp              2    0        PTR const unsigned char 
  1211 ;;  len             2    0        unsigned int 
  1212 ;;  val             2    0        unsigned int 
  1213 ;;  c               1    3[COMMON] unsigned char 
  1214 ;;  ap              1    2[COMMON] PTR void [1]
  1215 ;;		 -> ?_printf(2), 
  1216 ;;  flag            1    0        unsigned char 
  1217 ;;  prec            1    0        char 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  2   46[None  ] int 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1227 ;;      Params:         0       0       0       0       0
  1228 ;;      Locals:         3       0       0       0       0
  1229 ;;      Temps:          1       0       0       0       0
  1230 ;;      Totals:         4       0       0       0       0
  1231 ;;Total ram usage:        4 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    1
  1234 ;; This function calls:
  1235 ;;		_putch
  1236 ;; This function is called by:
  1237 ;;		_Eusart
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _printf
  1243  06EC                     _printf:
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1247                           ;printf@f stored from wreg
  1248  06EC  00F4               	movwf	printf@f
  1249  06ED                     l836:
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1252  06ED  3070               	movlw	(low (?_printf| 0))& (0+255)
  1253  06EE  00F1               	movwf	??_printf
  1254  06EF  0871               	movf	??_printf,w
  1255  06F0  00F2               	movwf	printf@ap
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1258  06F1  2EF8               	goto	l840
  1259  06F2                     l838:
  1260                           
  1261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1262  06F2  0873               	movf	printf@c,w
  1263  06F3  120A  118A  26CC  120A  118A  	fcall	_putch
  1264  06F8                     l840:	
  1265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1266                           
  1267                           
  1268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1269  06F8  3001               	movlw	1
  1270  06F9  07F4               	addwf	printf@f,f
  1271  06FA  30FF               	movlw	-1
  1272  06FB  0774               	addwf	printf@f,w
  1273  06FC  0084               	movwf	4
  1274  06FD  120A  118A  2003  120A  118A  	fcall	stringdir
  1275  0702  00F1               	movwf	??_printf
  1276  0703  0871               	movf	??_printf,w
  1277  0704  00F3               	movwf	printf@c
  1278  0705  0873               	movf	printf@c,w
  1279  0706  1D03               	btfss	3,2
  1280  0707  2F09               	goto	u61
  1281  0708  2F0A               	goto	u60
  1282  0709                     u61:
  1283  0709  2EF2               	goto	l838
  1284  070A                     u60:
  1285  070A                     l196:
  1286  070A  0008               	return
  1287  070B                     __end_of_printf:
  1288                           
  1289                           	psect	text8
  1290  06CC                     __ptext8:	
  1291 ;; *************** function _putch *****************
  1292 ;; Defined at:
  1293 ;;		line 134 in file "Lab03_Master.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  data            1    wreg     unsigned char 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  data            1    0[COMMON] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       0       0       0       0
  1308 ;;      Locals:         1       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0
  1310 ;;      Totals:         1       0       0       0       0
  1311 ;;Total ram usage:        1 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_printf
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function _putch
  1322  06CC                     _putch:
  1323                           
  1324                           ;incstack = 0
  1325                           ; Regs used in _putch: [wreg]
  1326                           ;putch@data stored from wreg
  1327  06CC  00F0               	movwf	putch@data
  1328  06CD                     l706:
  1329  06CD                     l64:	
  1330                           ;Lab03_Master.c: 135:     while (TXIF == 0);
  1331                           
  1332  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1333  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1334  06CF  1E0C               	btfss	12,4	;volatile
  1335  06D0  2ED2               	goto	u11
  1336  06D1  2ED3               	goto	u10
  1337  06D2                     u11:
  1338  06D2  2ECD               	goto	l64
  1339  06D3                     u10:
  1340  06D3                     l708:
  1341                           
  1342                           ;Lab03_Master.c: 136:     TXREG = data;
  1343  06D3  0870               	movf	putch@data,w
  1344  06D4  0099               	movwf	25	;volatile
  1345  06D5                     l67:
  1346  06D5  0008               	return
  1347  06D6                     __end_of_putch:
  1348  007E                     btemp	set	126	;btemp
  1349  007E                     wtemp0	set	126
  1350                           
  1351                           	psect	config
  1352                           
  1353                           ;Config register CONFIG1 @ 0x2007
  1354                           ;	Oscillator Selection bits
  1355                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1356                           ;	Watchdog Timer Enable bit
  1357                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1358                           ;	Power-up Timer Enable bit
  1359                           ;	PWRTE = OFF, PWRT disabled
  1360                           ;	RE3/MCLR pin function select bit
  1361                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1362                           ;	Code Protection bit
  1363                           ;	CP = OFF, Program memory code protection is disabled
  1364                           ;	Data Code Protection bit
  1365                           ;	CPD = OFF, Data memory code protection is disabled
  1366                           ;	Brown Out Reset Selection bits
  1367                           ;	BOREN = OFF, BOR disabled
  1368                           ;	Internal External Switchover bit
  1369                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1370                           ;	Fail-Safe Clock Monitor Enabled bit
  1371                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1372                           ;	Low Voltage Programming Enable bit
  1373                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1374                           ;	In-Circuit Debugger Mode bit
  1375                           ;	DEBUG = 0x1, unprogrammed default
  1376  2007                     	org	8199
  1377  2007  20D4               	dw	8404
  1378                           
  1379                           ;Config register CONFIG2 @ 0x2008
  1380                           ;	Brown-out Reset Selection bit
  1381                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1382                           ;	Flash Program Memory Self Write Enable bits
  1383                           ;	WRT = OFF, Write protection off
  1384  2008                     	org	8200
  1385  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[13]), STR_2(CODE[18]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_Eusart
    _setup->_spiInit
    _Eusart->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     568
                                              8 COMMON     2     2      0
                             _Eusart
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Eusart                                               3     3      0     193
                                              5 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0     193
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Eusart
     _printf
       _putch
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 20:46:33 2021

                      pc 0002              _SSPSTATbits 0094                       l61 073A  
                     l70 07F9                       l64 06CD                       l90 06BC  
                     l67 06D5                       l93 06C2                       l86 06E6  
                     l87 06EB                       l96 06BB                       u10 06D3  
                     u11 06D2                       u40 06C2                       u41 06C1  
                     u50 06DE                       u51 06DD                       u60 070A  
                     u61 0709                       u77 0747                       u87 075E  
                     u97 076B                       fsr 0004                      l104 06CB  
                    l196 070A                      l706 06CD                      l708 06D3  
                    l900 0743                      l830 06E0                      l910 0766  
                    l902 074C                      l840 06F8                      l832 06E2  
                    l728 06BC                      l920 0787                      l912 0767  
                    l904 0752                      l834 06E5                      l826 06D7  
                    l850 0722                      l842 070B                      l922 078A  
                    l914 0770                      l906 075A                      l836 06ED  
                    l828 06DE                      l860 0729                      l852 0725  
                    l844 070F                      l764 06B7                      l916 0776  
                    l908 0763                      l838 06F2                      l870 0735  
                    l862 072A                      l854 0726                      l846 0718  
                    l766 06C3                      l918 077E                      l880 07A6  
                    l872 0736                      l864 072D                      l856 0727  
                    l848 0719                      l768 06C8                      l890 07E6  
                    l882 07B3                      l874 0737                      l866 0731  
                    l858 0728                      l892 07F3                      l884 07C0  
                    l876 0793                      l868 0732                      l886 07D3  
                    l878 07A0                      l888 07D9                      l896 073B  
                    l898 0740                      u107 0782                      u117 0799  
                    u127 07AC                      u137 07B9                      u147 07CC  
                    u157 07DF                      u167 07EC                      fsr0 0004  
                   STR_1 001B                     STR_2 0009                     STR_3 0028  
                   STR_4 0009                     _TXIF 0064                     _main 073B  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    _setup 070B                    _putch 06CC  
                  pclath 000A          __end_of_spiInit 06EC          __end_of_spiRead 06CC  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 0793                   ??_main 0078                   ?_setup 0070  
                 ?_putch 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   _Eusart 0793                   _printf 06EC  
       __end_of_spiWrite 06BC                ??_spiInit 0073                ??_spiRead 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 073B  
          __end_of_putch 06D6                  ??_setup 0074                  ??_putch 0070  
                ?_Eusart 0070               __pmaintext 073B  __size_of_spiReceiveWait 0007  
                ?_printf 0070                  _SSPSTAT 0094               __stringtab 0003  
        __size_of_Eusart 0067                ?_spiWrite 0070                  __ptext1 06B6  
                __ptext2 06C3                  __ptext3 06BC                  __ptext4 070B  
                __ptext5 06D6                  __ptext6 0793                  __ptext7 06EC  
                __ptext8 06CC          __size_of_printf 001F                  _spiInit 06D6  
                _spiRead 06C3                  _sensor1 007B                  _sensor2 007A  
   end_of_initialization 07FC                _RCSTAbits 0018                  printf@c 0073  
                printf@f 0074               ??_spiWrite 0070                _PORTCbits 0007  
              _TRISCbits 0087              spiWrite@dat 0070                _TXSTAbits 0098  
         __end_of_Eusart 07FA           _spiReceiveWait 06BC              _BAUDCTLbits 0187  
         __end_of_printf 070B      start_initialization 07FA                 ??_Eusart 0075  
 __end_of_spiReceiveWait 06C3                 ??_printf 0071              __pbssCOMMON 007A  
              ___latbits 0002          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
              __pstrings 0003                 ?_spiInit 0070                 ?_spiRead 0070  
         __size_of_setup 0030           __size_of_putch 000A     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070              __stringbase 0008       __end_of__stringtab 0009  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 0058  
               _spiWrite 06B6             spiInit@sType 0073        spiInit@sClockIdle 0071  
              putch@data 0070         ??_spiReceiveWait 0070                stringcode 0003  
             _OSCCONbits 008F                 printf@ap 0072                 stringdir 0003  
               stringtab 0003  
